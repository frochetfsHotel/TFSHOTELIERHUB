@model SuccessHotelierHub.Models.SearchLoggedInUserInfoParametersVM
@{
    ViewBag.Title = "Search User";
}
@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "UserGrid";
}

<section class="content-header">
    <h1>
        LoggedIn User <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">User</li>
        <li class="active">LoggedIn User</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search LoggedIn User</h3>
        </div>
        <form class="frmUserList" id="frmUserList" name="frmUserList" enctype="multipart/form-data" method="post">
            <div class="box-body box-body-list">
                <div class="pt_10 pl_10 pr_10 searchBox_Border">
                    <div class="row">
                        <div class="col-md-3 form-group" id="divUserRole">
                            @Html.LabelFor(m => m.UserRoleId)
                            @Html.DropDownListFor(m => m.UserRoleId,
                                (IEnumerable<SelectListItem>)ViewBag.UserRoleList, "-- All --",
                                htmlAttributes: new { @class = "form-control" })                            
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.CollegeGroupId)
                            @Html.DropDownListFor(m => m.CollegeGroupId,
                                (IEnumerable<SelectListItem>)ViewBag.CollegeGroupList, "-- College Group --",
                                htmlAttributes: new { @class = "form-control" })
                        </div>                       
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group m-t-sm">
                            <label class="container1" for="IsViewAll">
                                View All Users
                                @Html.CheckBoxFor(m => m.IsViewAll)
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div class="col-md-9 form-group text-right">
                            <button type="button" id="btnSearch" class="btn btn-success m-r-xs" onclick="searchUser()">Search</button>
                            <button type="button" id="btnClear" class="btn btn-danger" onclick="clearUser()">Clear</button>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div class="col-xs-12 padding-zero m-t-md text-right">
                    <label class="label-bold m-r-sm">Total Users: <span class="spnLoggedInUserCount">0</span> Of <span class="spnTotalUserCount">100</span></label>
                </div>
                <div class="col-xs-12 padding-zero m-t-md">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblUser">
                            <thead>
                                <tr>
                                    <th class="width_15">Name</th>
                                    <th class="width_20">Email</th>
                                    <th class="width_20">College Group</th>
                                    <th class="width_15">Tutor</th>
                                    <th class="width_20">Last LoggedOn</th>
                                    <th class="width_10">Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left" id="divPaging">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM() { TokenForEnableDisableButtons = PagerName, PageChangeMethod = "UserGridPageChange" })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>


<script type="text/javascript">
    var currentPage = 1;
    var grdUser;

    $(document).ready(function () {
        setTimeout(InitializeUserGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });

        if (parseBoolean('@LogInManager.HasRights("TUTOR")')) {
            $('#divUserRole').hide();
        } else {
            $('#divUserRole').show();
        }
    });

    function SearchUserParameters(d) {
        var userRoleId = $('#UserRoleId').val();
        var collegeGroupId = $('#CollegeGroupId').val();
        var name = $('#Name').val();
        var email = $('#Email').val();
        var isViewAll = $('#IsViewAll').prop('checked');


        d.PageNum = currentPage;
        d.CollegeGroupId = collegeGroupId;
        d.UserRoleId = userRoleId;
        d.Name = name;
        d.Email = email;
        d.IsViewAll = isViewAll;
    }

    function UserGridDataBound(response) {
        if (response.IsSuccess == true) {

            var totalUsersCount = response.TotalUsers;
            var totalLoggedInUserCount = response.TotalRecords;

            if (IsNullOrEmpty(totalUsersCount)) { totalUsersCount = 0; }
            if (IsNullOrEmpty(totalLoggedInUserCount)) { totalLoggedInUserCount = 0; }

            $('.spnLoggedInUserCount').html(totalLoggedInUserCount);
            $('.spnTotalUserCount').html(totalUsersCount);

            var isViewAll = $('#IsViewAll').prop('checked');
            if (isViewAll == false) {
                $('#divPaging').show();
                @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);
            } else {
                $('#divPaging').hide();
            }

            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }

    function ReloadUserGrid() {
        grdUser.ajax.url("@Url.Content("~/User/LoggedInUserInfo")").load();
    }

    function UserGridPageChange(cPage) {
        currentPage = cPage;
        ReloadUserGrid();
    }

    function InitializeUserGrid() {
        grdUser = $('#tblUser').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/User/LoggedInUserInfo")',
                data: SearchUserParameters,
                dataSrc: UserGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "Name",
                orderable: true
            },
            {
                targets: 1,
                data: "Email",
                orderable: true
            },
            {
                targets: 2,
                data: "CollegeGroupName",
                orderable: true
            },
            {
                targets: 3,
                data: "TutorName",
                orderable: true
            },
            {
                targets: 4,
                data: "LastLoggedOn",
                orderable: true,
                render: function (data, type, full, meta) {
                    var lastLoggedOn = full.LastLoggedOn;
                    if (!IsNullOrEmpty(lastLoggedOn)) {
                        return ParseJsonDateTime(lastLoggedOn);
                    } else {
                        return "";
                    }
                }
            },
            {
                targets: 5,
                data: "Id",
                orderable: false,
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="LogoutUser(\'' + full.Id + '\')" '
                        + ' class="btn btn-success btn-xs font_11">Logout</a> ';
                }
            }
            ],
            order: [[4, "desc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }


    function searchUser() {
        currentPage = 1;

        ReloadUserGrid();
    }

    function clearUser() {
        $('#UserRoleId').val('');
        $('#CollegeGroupId').val('');
        $('#Name').val('');
        $('#Email').val('');

        $('#IsViewAll').prop('checked', false);

        searchUser();
    }

    function LogoutUser(id) {
        swal({
            title: 'Are you sure you want to logout this user?',
            type: 'warning',
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    beforeSend: function (xhr) {
                        showLoader();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        ShowErrorMessage(jqXHR.status, errorThrown);
                    },
                    complete: function () {
                        hideLoader();
                    },
                    url: '@Url.Content("~/User/LogoutUser")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (!IsNullOrEmpty(response)) {
                            if (response.IsSuccess == true) {

                                var tr = $('#tblUser tbody tr#' + id)
                                var row = grdUser.row(tr);
                                var rowNode = row.node();
                                row.remove();
                                grdUser.draw();

                                showToaster("User logged out successfully", ToasterType.SUCCESS);
                            }
                            else {
                                showToaster(response.errorMessage, ToasterType.ERROR);
                            }
                        }
                    }
                });
            }
        });
    }

</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}