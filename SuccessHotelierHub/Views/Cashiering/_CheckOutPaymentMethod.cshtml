@model SuccessHotelierHub.Models.CheckOutPaymentMethodVM
@using SuccessHotelierHub.Utility
@using SuccessHotelierHub.Models

@{
    var sourceRedirectionParam = "";
    sourceRedirectionParam = (string)ViewData["Source"];
}

<link rel="stylesheet" href="~/Content/css/AdminLTE/input-mask/masking-input.css" type="text/css" />

@using (Html.BeginForm("CheckOut", "Cashiering", FormMethod.Post, new { id = "frmCheckOutPayment", enctype = "multipart/form-data" }))
{

    <!-- HIDDEN FIELD -->
    @Html.HiddenFor(m => m.ReservationId)
    @Html.HiddenFor(m => m.ProfileId)
    @Html.HiddenFor(m => m.RoomIds)
    @Html.HiddenFor(m => m.NoOfRoom)
    @Html.HiddenFor(m => m.RoomTypeId)
    @Html.HiddenFor(m => m.PaymentMethod)
    <!-- HIDDEN FIELD -->
    @*<div class="pt_10 pl_10 pb_10 pr_10 searchBox_Border">*@
    <div class="row">
        <div class="col-md-6 col-sm-3 col-xs-12 form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name", @readonly = "readonly" })
        </div>
        <div class="col-md-6 col-sm-3 col-xs-12 form-group">
            @Html.LabelFor(m => m.RoomNumbers)
            @Html.TextBoxFor(m => m.RoomNumbers, new
       {
           @class = "form-control",
           placeholder = "Room #",
           @readonly = "readonly"
       })
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4 col-xs-12 form-group">
            @Html.LabelFor(m => m.CheckOutDate, new { @class = "required-label" })
            <div class="input-group date">
                @Html.TextBoxFor(m => m.CheckOutDate, "{0:dd/MM/yyyy}", new { @class = "form-control", placeholder = "dd/mm/yyyy" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>
            @Html.ValidationMessageFor(m => m.CheckOutDate, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4 col-sm-4 col-xs-12 form-group">
            <div class="bootstrap-timepicker">
                @Html.LabelFor(m => m.CheckOutTimeText, new { @class = "required-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.CheckOutTimeText, new { @class = "form-control", placeholder = "hh:mm tt" })
                    <div class="input-group-addon">
                        <i class="fa fa-clock-o"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-sm-4 col-xs-12 form-group">
            @Html.LabelFor(m => m.Amount, new { @class = "required-label" })
            @Html.TextBoxFor(m => m.Amount, Utility.FormatAmountWithTwoDecimal(Model.Amount.HasValue? Model.Amount.Value : 0),new { @class = "form-control", onkeypress = "onlyNumeric(event)" })

        </div>
    </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(m => m.PaymentMethodId, new { @class = "required-label" })
                @Html.DropDownListFor(m => m.PaymentMethodId,
                                new SelectList((IEnumerable<SelectListItem>)ViewData["PaymentMethodList"], "Value", "Text"),
                                "--Select Payment Method--",
                                new { @class = "form-control" , onchange = "SelectPaymentMethod();" })
                @Html.ValidationMessageFor(m => m.PaymentMethodId, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-5 divCreditCardInfo">
                @Html.LabelFor(m => m.CreditCardNo)
                @Html.TextBoxFor(m => m.CreditCardNo, new { @class = "form-control", placeholder = "Credit Card #", onkeydown = "onlyDigits(event)", maxlength = "16", minlength = "16" })
            </div>
            <div class="col-md-3 divCreditCardInfo divCardExpiryDate">
                @Html.LabelFor(m => m.CardExpiryDate)
                <input id="CardExpiryDate" name="CardExpiryDate" type="text" placeholder="MM/YY" class="masked form-control" pattern="(1[0-2]|0[1-9])\/(1[5-9]|2\d)" value="@Model.CardExpiryDate" />
            </div>
        </div>
        <div class="row m-t-sm">
            <div class="col-md-12">
                @Html.LabelFor(m => m.Reference)
                @Html.TextAreaFor(m => m.Reference, new { @class = "form-control", placeholder = "Reference", rows = "3" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-xs-12 form-group mt_25 text-right">
                <button type="button" class="btn btn-success m-r-xs btnCheckOutOk" id="btnCheckOutOk">OK</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="btnClose">Close</button>
            </div>
            <div class="clearfix"></div>
        </div>
        @*</div>*@
}
<div class="clearfix"></div>


<script type="text/javascript">
    $(document).ready(function () {

        $('form#frmCheckOutPayment #CardExpiryDate').attr("placeholder", "MM/YY");

        SelectPaymentMethod();

        //Timepicker
        $('form#frmCheckOutPayment #CheckOutTimeText').timepicker({
            showInputs: false,
            showMeridian: false,
            minuteStep: 5
        });

        //Date picker
        $('#CheckOutDate').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy'
        });

        //CheckOut
        $('form#frmCheckOutPayment .btnCheckOutOk').click(function (e) {
            if (validateCheckOut()) {

                //Ajax request to check out.
                $.ajax({
                    beforeSend: function (xhr) {
                        showLoader();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        ShowErrorMessage(jqXHR.status, errorThrown);
                    },
                    complete: function () {
                        hideLoader();
                    },
                    url: '@Url.Content("~/Cashiering/CheckOut")',
                    type: 'POST',
                    data: $('form#frmCheckOutPayment').serialize(),
                    success: function (response) {
                        if (response.IsSuccess == false) {
                            showToaster(response.errorMessage, ToasterType.ERROR);
                        }
                        else {

                            var reservationId = $('#ReservationId').val();
                            var url = '@Url.Content("~/Cashiering/Preview")' + '?Id=' + reservationId;
                            swal({
                                title: '' + response.data.Name + ' checked out successfully.',
                                type: 'success',
                                html: "<a href='" + url + "' target='_blank'>Click here to see folio report.</a>",
                                showCloseButton: true,
                                showCancelButton: false,
                                focusConfirm: false,
                                confirmButtonText: 'OK',
                            }).then((result) => {
                                //Close all the modal.
                                $('.modal').modal('hide');
                                //$('#checkOutPaymentModal').modal('toggle');
                            });

                            searchGuest();
                        }
                    }
                });
                return false;
            }
        });
    });

    //Check Out
    function validateCheckOut() {
        var blnValid = true;

        if (!IsNullOrEmpty($('form#frmCheckOutPayment #PaymentMethodId').val())) {
            var paymentMethod = $('form#frmCheckOutPayment #PaymentMethodId option:selected').text();            

            var paymentMethodName = paymentMethod;
            if (Contains(paymentMethod, '-')) {
                paymentMethodName = trim(paymentMethod.split('-')[1]);
            }

            if (trim(paymentMethodName) != 'Cash') {
                var creditCardNo = $('form#frmCheckOutPayment #CreditCardNo').val();
                var cardExpiryDate = $('form#frmCheckOutPayment #CardExpiryDate').val();

                var errorText = "";
                if (IsNullOrEmpty(creditCardNo)) {
                    errorText += "Please enter credit card number." + Delimeter.BREAKLINE;
                    blnValid = false;
                } else {
                    if (!IsValidCreditCardNo(creditCardNo)) {
                        errorText += "Please enter 16 digits of your credit card." + Delimeter.BREAKLINE;
                        blnValid = false;
                    }
                }

                if (IsNullOrEmpty(cardExpiryDate)) {
                    errorText += "Please enter card expiry date." + Delimeter.BREAKLINE;
                    blnValid = false;
                }

                if (blnValid == false) {
                    showToaster(errorText, ToasterType.ERROR);
                    return false;
                }
            }
        }

        if ($("form#frmCheckOutPayment").valid() == false) {
            showToaster("Please fill all the required field first", ToasterType.ERROR);
            return false;
        }

        return true;
    }

    function SelectPaymentMethod() {
        if (!IsNullOrEmpty($('#PaymentMethodId').val())) {
            var paymentMethod = $('#PaymentMethodId option:selected').text();

            var paymentMethodName = paymentMethod;
            if (Contains(paymentMethod, '-')) {
                paymentMethodName = trim(paymentMethod.split('-')[1]);
            }

            if (trim(paymentMethodName) == 'Cash') {
                $('.divCreditCardInfo').hide();
            } else {
                $('.divCreditCardInfo').show();
            }

            $('#PaymentMethod').val(paymentMethod);
        }

    }

</script>


<script type="text/javascript" src="~/Scripts/AdminLTE/input-mask/masking-input.js" data-autoinit="true"></script>