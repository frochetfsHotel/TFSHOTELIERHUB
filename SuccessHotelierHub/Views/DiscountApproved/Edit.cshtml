@model SuccessHotelierHub.Models.DiscountApprovedVM
@{
    ViewBag.Title = "Edit Discount Approved";
}

<section class="content-header">
    <h1>
        Discount Approved <small>Edit</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Discount Approved</li>
        <li class="active">Edit</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Discount Approved Details</h3>
        </div>
        @using (Html.BeginForm("Edit", "DiscountApproved", FormMethod.Post, new { id = "frmDiscountApproved", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <!--HIDDEN FIELD-->
            @Html.HiddenFor(m => m.Id)
            <!--HIDDEN FIELD-->

            <div class="box-body pt_10 pb-0">
                <div class="row">
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(m => m.Code, new { @class = "required-label" })
                        @Html.TextBoxFor(m => m.Code, new { @class = "form-control text-uppercase", placeholder = "Code" })
                        @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(m => m.Description, new { @class = "required-label" })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Description", rows = "3" })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group m-t-lg">
                        <label class="container1" for="IsActive">
                            Is Active
                            @Html.CheckBoxFor(m => m.IsActive)
                            <span class="checkmark"></span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="box-footer text-right">
                <button type="button" class="btn btn-success m-r-xs" onclick="return updateDiscountApproved();">Update</button>
                <a href="@Url.Action("List", "DiscountApproved")" class="btn btn-danger">Cancel</a>
            </div>
        }
    </div>
</section>

<script type="text/javascript">
    function validateDiscountApproved() {

        var errorMessage = "";
        var blnValid = true;


        if ($("#frmDiscountApproved").valid() == false) {
            showToaster("Please fill all the required field first", ToasterType.ERROR);
            blnValid = false;
        }

        return blnValid;
    }


    function updateDiscountApproved() {

        if (validateDiscountApproved()) {
            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/DiscountApproved/Edit")',
                type: 'POST',
                data: $('#frmDiscountApproved').serialize(),
                success: function (response) {
                    if (response.IsSuccess == false) {
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                    else {
                        showToaster("Discount Approved details updated successfully", ToasterType.SUCCESS);

                        setTimeout(function () {
                            redirectTo('@Url.Content("~/DiscountApproved/List")');
                        }, 1000);
                    }
                }
            });
            return false;
        }
    }
</script>
