@model SuccessHotelierHub.Models.SearchUsersReservationFolioLogParametersVM
@{
    ViewBag.Title = "Search Folio Log";
}
@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}
@{
    var PagerName = "FolioLogGrid";
}

<section class="content-header">
    <h1>
        Folio Log <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Folio Log</li>
        <li class="active">Search</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search Folio Log</h3>
        </div>
        <form class="frmFolioLogList" enctype="multipart/form-data" method="post">
            <!--HIDDEN FIELD-->
            @Html.HiddenFor(m => m.UserGUID)
            <!--HIDDEN FIELD-->
            <div class="box-body box-body-list">
                <div class="pt_10 pl_10 pr_10 searchBox_Border">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.StartDate)
                            <div class="input-group date">
                                @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", @placeholder = "dd/mm/yyyy" })
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.EndDate)
                            <div class="input-group date">
                                @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @placeholder = "dd/mm/yyyy" })
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.LastName)
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.FirstName)
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "Last Name" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 form-group mt_25 text-right">
                            <button type="button" id="btnSearch" class="btn btn-success m-r-xs" onclick="searchFolioLog()">Search</button>
                            <button type="button" id="btnClear" class="btn btn-danger m-r-xs" onclick="clearFolioLog()">Clear</button>
                            <a href="@Url.Action("ViewStudent", "Tutor")" class="btn btn-primary">Back</a>
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 padding-zero m-t-md">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblFolioLog">
                            <thead>
                                <tr>
                                    <th class="width_10">Created On</th>
                                    <th class="width_10">Confirmation #</th>
                                    <th class="width_10">Last Name</th>
                                    <th class="width_10">First Name</th>
                                    <th class="width_8">Arrival</th>
                                    <th class="width_4">Nights</th>
                                    <th class="width_8">Departure</th>
                                    <th class="width_5">Room#</th>
                                    <th class="width_5">Room Type</th>
                                    <th class="width_5">Rate Type</th>
                                    <th class="width_5">Rate</th>
                                    <th class="width_5">Guest Bal.</th>
                                    <th class="width_15">Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM() { TokenForEnableDisableButtons = PagerName, PageChangeMethod = "FolioLogGridPageChange" })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>

<!-- Email Form Modal START -->
<div id="emailFormModal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Send Email</h4>
            </div>
            <div class="modal-body modal-body_padding" id="divSendEmail">
                @Html.Partial("~/Views/Cashiering/_FolioEmail.cshtml")
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<!--  Email Form Modal END -->

<script type="text/javascript">
    var currentPage = 1;
    var grdFolioLog;

    $(document).ready(function () {


        //Date picker
        $('#StartDate').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy'
        });

        $('#EndDate').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy'
        });


        setTimeout(InitializeFolioLogGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });
    });

    function reservationDateChanged(e) {
        var selectedDate = $(this).val();
        searchFolioLog();
    }

    function SearchFolioLogParameters(d) {
        var startDate = $('#StartDate').val();
        var endDate = $('#EndDate').val();
        var userId = $('#UserGUID').val();
        var lastName = $('#LastName').val();
        var firstName = $('#FirstName').val();

        d.PageNum = currentPage;
        d.StartDate = startDate;
        d.EndDate = endDate;
        d.UserGUID = userId;
        d.LastName = lastName;
        d.FirstName = firstName;
    }

    function FolioLogGridDataBound(response) {
        if (response.IsSuccess == true) {
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);
            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadFolioLogGrid() {
        grdFolioLog.ajax.url("@Url.Content("~/Tutor/SearchFolioLog")").load();
    }

    function FolioLogGridPageChange(cPage) {
        currentPage = cPage;
        ReloadFolioLogGrid();
    }


    function InitializeFolioLogGrid() {
        grdFolioLog = $('#tblFolioLog').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Tutor/SearchFolioLog")',
                data: SearchFolioLogParameters,
                dataSrc: FolioLogGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
             {
                 targets: 0,
                 data: "CreatedOn",
                 orderable: true,
                 render: function (data, type, full, meta) {
                     var createdOn = full.CreatedOn;
                     return ParseJsonDate(createdOn);
                 }
             },
             {
                 targets: 1,
                 data: "ConfirmationNumber",
                 orderable: true
             },
             {
                 targets: 2,
                 data: "LastName",
                 orderable: true
             },
             {
                 targets: 3,
                 data: "FirstName",
                 orderable: true
             },
             {
                 targets: 4,
                 data: "ArrivalDate",
                 orderable: true,
                 render: function (data, type, full, meta) {
                     var arrivalDate = full.ArrivalDate;
                     return ParseJsonDate(arrivalDate);
                 }

             },
             {
                 targets: 5,
                 data: "NoOfNight",
                 orderable: false
             },
             {
                 targets: 6,
                 data: "DepartureDate",
                 orderable: true,
                 render: function (data, type, full, meta) {
                     var departureDate = full.DepartureDate;
                     return ParseJsonDate(departureDate);
                 }
             },
             {
                 targets: 7,
                 data: "RoomNumbers",
                 orderable: false
             },
             {
                 targets: 8,
                 data: "RoomTypeCode",
                 orderable: true
             }
             ,
             {
                 targets: 9,
                 data: "RateTypeCode",
                 orderable: true
             },
             {
                 targets: 10,
                 data: "Rate",
                 orderable: true
             },
             {
                 targets: 11,
                 data: "GuestBalance",
                 orderable: true
             },
             {
                 targets: 12,
                 data: "Id",
                 orderable: false,
                 className: "text-center",
                 render: function (data, type, full, meta) {                     
                    var buttons = "";

                    var url = '@Url.Content("~/Cashiering/Preview")' + '?Id=' + full.Id;

                    buttons += '<a href="' + url + '" target="_blank" '
                            + ' class="btn btn-warning btn-xs m-r-xs">Folio</a> ';

                    buttons += '<a  href="javascript:void(0);" onclick="OpenEmailForm(\'' + full.Id + '\',\'' + full.Email + '\')" ' + ' class="btn btn-primary btn-xs m-r-xs">Export</a> ';

                     return buttons;
                 }
             }
            ],
            //order: [[0, "desc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }


    function searchFolioLog() {

        var startDate = $('#StartDate').val();
        var endDate = $('#EndDate').val();

        if (!IsNullOrEmpty(startDate)) {

            if (IsNullOrEmpty(endDate)) {
                showToaster("Please enter end date.", ToasterType.ERROR);
                return false;
            } else {
                var objStartDate = GetDateObject(startDate, DateSeprator.SLASH);
                var objEndDate = GetDateObject(endDate, DateSeprator.SLASH);

                if (objEndDate < objStartDate) {
                    showToaster("Start date must be less than end date.", ToasterType.ERROR);
                    return false;
                }
            }
        }


        currentPage = 1;
        ReloadFolioLogGrid();
    }

    function clearFolioLog() {
        $('#StartDate').val('');
        $('#EndDate').val('');
        $('#LastName').val('');
        $('#FirstName').val('');

        searchFolioLog();
    }


    function OpenEmailForm(id, email) {
        $("form#frmEmail #Email").val(email)
        $("form#frmEmail #hdnReservationId").val(id);

        OpenModal('emailFormModal');
    }

</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}