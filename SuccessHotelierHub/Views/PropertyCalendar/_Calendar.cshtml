@using SuccessHotelierHub.Models;
@using SuccessHotelierHub.Utility;
@using SuccessHotelierHub.Models.StoredProcedure;
@{
    var month = (int)ViewData["Month"];
    var year = (int)ViewData["Year"];

    var firstDateOfMonth = new DateTime(year, month, 1);
    var lastDateOfMonth = firstDateOfMonth.AddMonths(1).AddDays(-1);

    var firstDayOfWeek = (int)firstDateOfMonth.DayOfWeek;
    var lastDate = (int)lastDateOfMonth.Day;

    int day = 1;

    var currentDay = DateTime.Now.Day;
    var currentMonth = DateTime.Now.Month;
    var currentYear = DateTime.Now.Year;

    bool isWeekEnd = false;
    bool isHoliday = false;

    var results = (List<TotalRoomAvailableByCalendarResultVM>)ViewData["RoomDetails"];

    var holidays = (List<HolidayVM>)ViewData["Holidays"];

    var calendarNotes =(List<CalendarNotesVM>)ViewData["CalendarNotes"];

    string notes = "", shortNotes = "", notesId = "";
}

<div class="col-md-12 form-group">
    <div class="table-responsive">
        <table class="table table-bordered" id="tblCalendar">
            <tr>
                <td><p class="text-bold">Sunday</p></td>
                <td><p class="text-bold">Monday</p></td>
                <td><p class="text-bold">Tuesday</p></td>
                <td><p class="text-bold">Wednesday</p></td>
                <td><p class="text-bold">Thursday</p></td>
                <td><p class="text-weekend-bgcolor text-bold">Friday</p></td>
                <td><p class="text-weekend-bgcolor text-bold">Saturday</p></td>

                @for (int intI = 0; intI < 42; intI++)
                {
                    isWeekEnd = false;
                    isHoliday = false;

                    notes = "";
                    shortNotes = "";
                    notesId = "";

                    if (intI % 7 == 0)
                    {
                        @Html.Raw("</tr><tr>")
                    }

                    //Friday & Saturday.
                    if (((intI + 1) % 7 == 0) || ((intI + 2) % 7 == 0))
                    {
                        isWeekEnd = true;
                    }

                    if ((intI >= firstDayOfWeek) && (day <= lastDate))
                    {
                        string dateString = new DateTime(year, month, day).ToString("yyyy/MM/dd");

                        var totalAvailableRooms = results.Where(m => m.day == day).FirstOrDefault().AvailableRooms;

                        //Check Holidays.
                        var holiday = holidays.Where(m => m.Date.ToString("yyyy/MM/dd") == dateString).FirstOrDefault();

                        if(holiday != null)
                        {
                            isHoliday = true;
                        }

                        //Calendar Notes.
                        var objCalendarNotes = calendarNotes.Where(m => m.Date.ToString("yyyy/MM/dd") == dateString).FirstOrDefault();

                        if (objCalendarNotes != null)
                        {
                            notesId = Convert.ToString(objCalendarNotes.Id);
                            notes = objCalendarNotes.Notes;
                            shortNotes = (!string.IsNullOrWhiteSpace(notes) && notes.Length >= 18) ? (notes.Substring(0, 15) + "...") : notes;
                        }


                        //Check current date.
                        if (currentMonth == month && currentYear == year && currentDay == day)
                        {
                            if (isWeekEnd || isHoliday)
                            {
                                @Html.Raw(string.Format("<td class='currentDay clickableDate tdRoomInfoHover' data-date='{0}' data-notes='{1}' data-notesid='{2}' id='td_{3}' data-displaydate='{4}' data-placement='bottom' data-original-title='Room Info' data-trigger='hover'>", dateString, Utility.EscapeString(notes), notesId, day, new DateTime(year, month, day).ToString("dd/MM/yyyy")));
                                @Html.Raw(string.Format("<p class='text-weekend-bgcolor text-bold'>{0}</p>", day))
                                if (isHoliday && holiday != null)
                                {
                                    @Html.Raw(string.Format("<p class='text-blue text-bold'>{0}</p>", holiday.Title))
                                }
                                @Html.Raw(string.Format("<p class='calendarNotes text-left' data-content='{1}'  data-placement='bottom'  data-trigger='hover'>{0}</p>",
                                   shortNotes, notes))
                                @Html.Raw(string.Format("<p class='text-success text-right text-bold availableRoom'>{0}</p>", totalAvailableRooms))
                                @Html.Raw("</td>");
                            }
                            else
                            {
                                @Html.Raw(string.Format("<td class='currentDay clickableDate tdRoomInfoHover'  data-date='{0}' data-notes='{1}' data-notesid='{2}' id='td_{3}' data-displaydate='{4}' data-placement='bottom' data-original-title='Room Info' data-trigger='hover'>", dateString, Utility.EscapeString(notes), notesId, day, new DateTime(year, month, day).ToString("dd/MM/yyyy")));
                                @Html.Raw(string.Format("<p class='text-bold'>{0}</p>", day))
                                @Html.Raw(string.Format("<p class='calendarNotes text-left' data-content='{1}'  data-placement='bottom'  data-trigger='hover'>{0}</p>",
                                   shortNotes, notes))
                                @Html.Raw(string.Format("<p class='text-success text-right text-bold availableRoom'>{0}</p>", totalAvailableRooms))
                                @Html.Raw("</td>");
                            }
                        }
                        else
                        {
                            if (isWeekEnd || isHoliday)
                            {
                                @Html.Raw(string.Format("<td class='clickableDate tdRoomInfoHover' data-date='{0}' data-notes='{1}' data-notesid='{2}' id='td_{3}' data-displaydate='{4}' data-placement='bottom' data-original-title='Room Info' data-trigger='hover'>", dateString, Utility.EscapeString(notes), notesId, day, new DateTime(year, month, day).ToString("dd/MM/yyyy")));
                                @Html.Raw(string.Format("<p class='text-weekend-bgcolor text-bold'>{0}</p>", day))
                                if (isHoliday && holiday != null)
                                {
                                    @Html.Raw(string.Format("<p class='text-blue text-bold'>{0}</p>", holiday.Title))
                                }
                                @Html.Raw(string.Format("<p class='calendarNotes text-left' data-content='{1}'  data-placement='bottom'  data-trigger='hover'>{0}</p>",
                                   shortNotes, notes))
                                @Html.Raw(string.Format("<p class='text-success text-right text-bold availableRoom'>{0}</p>", totalAvailableRooms))
                                @Html.Raw("</td>");
                            }
                            else
                            {
                                @Html.Raw(string.Format("<td class='clickableDate tdRoomInfoHover' data-date='{0}' data-notes='{1}' data-notesid='{2}' id='td_{3}' data-displaydate='{4}' data-placement='bottom' data-original-title='Room Info' data-trigger='hover'>", dateString, Utility.EscapeString(notes), notesId, day, new DateTime(year, month, day).ToString("dd/MM/yyyy")));
                                @*@Html.Raw("<a class='btn popoverData' href='#' rel='popover' data-placement='bottom' data-original-title='Title' data-trigger='hover'>T</a>")*@                                
                                @Html.Raw(string.Format("<p class='text-bold'>{0}</p>", day))
                                @Html.Raw(string.Format("<p class='calendarNotes text-left' data-content='{1}'  data-placement='bottom'  data-trigger='hover'>{0}</p>",
                                   shortNotes, notes))
                                @Html.Raw(string.Format("<p class='text-success text-right text-bold availableRoom'>{0}</p>", totalAvailableRooms))
                                @Html.Raw("</td>");
                            }
                        }
                        day = day + 1;
                    }
                    else
                    {
                        @Html.Raw("<td></td>")
                    }
                }
        </table>
    </div>

</div>
<div class="clearfix"></div>
