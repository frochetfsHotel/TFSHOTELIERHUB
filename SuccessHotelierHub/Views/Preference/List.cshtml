@model SuccessHotelierHub.Models.SearchPreferenceParametersVM
@{
    ViewBag.Title = "Search Preference";
}
@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "PreferenceGrid";
}

<section class="content-header">
    <h1>
        Preference <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Preference</li>
        <li class="active">Search</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search Preference</h3>
            <div class="pull-right box-tools m-r-md">
                <a href="@Url.Action("Create","Preference")"
                   class="btn btn-info btn-sm" style="color: #fff" data-toggle="tooltip" title=""
                   data-original-title="Add Preference"><i class="fa fa-plus"></i></a>
            </div>
        </div>
        <form class="frmPreferenceList" enctype="multipart/form-data" method="post">
            <div class="box-body">
                <div class="col-xs-12 padding-zero">
                    <div class="col-md-3 col-sm-4 col-xs-12 padding_left padding-right-media form-group ">
                        <label for="Code" class="">Preference Code</label>
                        <input type="text" class="form-control" id="Code" name="Code" placeholder="Preference Code">
                    </div>
                    <div class="col-md-3 col-sm-4 col-xs-12 padding_left padding-right-media form-group ">
                        <label for="Description" class="">Preference</label>
                        <input type="text" class="form-control" id="Description" name="Description" placeholder="Preference">
                    </div>

                    <div class="col-md-4 col-sm-4 col-xs-12 mt-23 mt-23-media padding_left padding-right-media form-group">
                        <button type="button" id="btnSearch" class="btn btn-success m-r-xs" onclick="searchPreference()">Search</button>
                        <button type="button"  id="btnClear" class="btn btn-danger" onclick="clearPreference()">Clear</button>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="col-xs-12 padding-zero m-t-sm">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblPreferences">
                            <thead>
                                <tr>
                                    <th>CreatedOn</th>
                                    <th>Preference Code</th>
                                    <th>Preference</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM() { TokenForEnableDisableButtons = PagerName, PageChangeMethod = "PreferenceGridPageChange" })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>


<script type="text/javascript">

    var currentPage = 1;
    var grdPreference;

    $(document).ready(function () {
        setTimeout(InitializePreferenceGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });
    });


    function SearchPreferenceParameters(d) {
        var code =$('#Code').val();
        var description = $('#Description').val();

        d.PageNum = currentPage;
        d.Code = code;
        d.Description = description;
    }

    function PreferenceGridDataBound(response) {
        if (response.IsSuccess == true) {            
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);
            return response.data;
        }
        else {
            //showAlert(response.ErrorMsg, Alert.ERROR);
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadPreferenceGrid() {
        grdPreference.ajax.url("@Url.Content("~/Preference/Search")").load();
    }

    function PreferenceGridPageChange(cPage) {        
        currentPage = cPage;
        ReloadPreferenceGrid();
    }


    function InitializePreferenceGrid() {
        grdPreference = $('#tblPreferences').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (result) {
                    showToaster(result.responseText, ToasterType.ERROR);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Preference/Search")',
                data: SearchPreferenceParameters,
                dataSrc: PreferenceGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "CreatedOn",
                orderable: true,
                "visible": false
            },
            {
                targets: 1,
                data: "Code",
                orderable: true
            },
            {
                targets: 2,
                data: "Description",
                orderable: true
            },
            {
                targets: 3,
                data: "IsActive",
                orderable: false,
                render: function (data, type, full, meta) {
                    var isActive = full.IsActive;                    
                    if (isActive == true) {
                        return "Active";
                    } else {
                        return "In Active";
                    }
                }
            },
            {
                targets: 4,
                data: "Id",
                orderable: false,
                className: "text-center",
                render: function (data, type, full, meta) {                    
                    return '<a href="javascript:void(0);" onclick="GotoPreferenceEdit(\''+full.Id+ '\')" '
                        + ' class="btn btn-success btn-xs m-r-xs">Edit</a> '
                        + ' <button type="button" class="btn btn-danger btn-xs"'
                        + ' onclick="deletePreference(this,event,\''+full.Id+'\')">Delete</button>';
                }
            }
            ],
            order: [[ 0, "desc" ]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }

    function GotoPreferenceEdit(Id) {        
        var url = '@Url.Content("~/Preference/Edit/")' + Id;        
        redirectTo(url);
    }

    function searchPreference() {
        currentPage = 1;
        ReloadPreferenceGrid();
    }

    function clearPreference() {
        $('#Code').val('');
        $('#Description').val('');

        searchPreference();
    }

    function deletePreference(item, e, id) {

        if (confirm("Are you sure do you want to delete ?")) {

            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (result) {
                    //showAlert(result.responseText, Alert.ERROR);
                    showToaster(result.responseText, ToasterType.ERROR);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Preference/Delete")',
                type: 'POST',
                data: { id: id },
                success: function (response) {
                    if (response.IsSuccess == true) {
                        
                        var tr = $('#tblPreferences  tbody tr#' + id)
                        var row = grdPreference.row(tr);
                        var rowNode = row.node();
                        row.remove();
                        grdPreference.draw();

                        //showAlert('Record deleted successfully.', Alert.SUCCESS);
                        showToaster("Record deleted successfully", ToasterType.SUCCESS);
                    }
                    else {
                        //showAlert(response.errorMessage, Alert.ERROR);
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                }
            });
        }

    }
</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}