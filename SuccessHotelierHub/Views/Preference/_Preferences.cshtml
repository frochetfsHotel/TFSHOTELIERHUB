@model SuccessHotelierHub.Models.SearchAdvancePreferenceParametersVM
@using SuccessHotelierHub.Models
@{
    var sourceRedirectionParam = "";

    sourceRedirectionParam = (string)ViewData["Source"];

    var preferenceGroupList = (List<SelectListItem>)ViewData["PreferenceGroup"];
}

<form id="frmAdvancePreferenceSearch" name="frmAdvancePreferenceSearch" enctype="multipart/form-data" method="post">

    <div class="pt_10 pl_10 pr_10 col-xs-12 searchBox_Border">
        <div class="row">
            <div class="col-md-4 col-sm-3 col-xs-12 form-group">
                @Html.LabelFor(m => m.PreferenceGroupId)
                @Html.DropDownListFor(m => m.PreferenceGroupId,
                            (IEnumerable<SelectListItem>)preferenceGroupList, "-- Select Preference Group --",
                            htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-4 col-sm-3 col-xs-12 form-group">
                @Html.LabelFor(m => m.Preference)
                @Html.TextBoxFor(m => m.Preference, new { @class = "form-control" })
            </div>
            <div class="col-md-4 col-sm-3 col-xs-12 form-group mt_25">
                <button type="button" class="btn btn-success m-r-xs" id="btnSearch" onclick="searchPreference()">Search</button>
                <button type="button" class="btn btn-danger" id="btnClear" onclick="clearPreferenceSearch()">Clear</button>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>

    <div class="col-xs-12 text-right m-t-sm m-b-sm padding-zero">
        <button type="button" class="btn btn-primary m-r-xs btnAdvanceSearchPreferenceOk">OK</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>

    <div class="row m-t-sm" id="divPreferences" style="display:none;">
        <div class="col-md-12 form-group">
            <label class="m-l-n col-md-2 control-label m-r-n-xl"> Preferences : </label>
            <div class="col-md-10" id="selectedPreferences">
            </div>
        </div>
    </div>

    <div class="col-xs-12 m-b-sm padding-zero">
        <div class="table-responsive m-t-md table_maxheight">
            <table class="table table-bordered table-hover table-striped cursor-P m-b-none" id="tblPreference">
                <thead>
                    <tr>
                        <th width="5%;"></th>
                        <th>Preference Group</th>
                        <th>Description</th>
                        <th>Preference</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</form>



<div class="clearfix"></div>

<script type="text/javascript">

    $(document).ready(function () {
        $("form#frmAdvancePreferenceSearch select").change(function () {
            searchPreference();
        });

        $("form#frmAdvancePreferenceSearch input").blur(function () {
            if (!IsNullOrEmpty($(this).val())) {
                searchPreference();
            }
        });
    });

    function selectDeSelectPreference(element) {
        if (element) {

            var isChecked = $(element).prop("checked");
            var id = $(element).val();
            var preference = $(element).attr("data-preference");

            if (isChecked) {
                var html = generatePreferenceItemButton(id, preference);

                $("form#frmAdvancePreferenceSearch #selectedPreferences").append(html)

            } else {
                if ($('form#frmAdvancePreferenceSearch span#spnPreference_' + id).length > 0) {
                    $('form#frmAdvancePreferenceSearch span#spnPreference_' + id).remove();
                }
            }
        }

        var selectedPreferenceCount = $('form#frmAdvancePreferenceSearch #selectedPreferences span').length;
        if (!IsNullOrEmpty(selectedPreferenceCount) && parseInt(selectedPreferenceCount) > 0) {
            $('#divPreferences').show();
        } else {
            $('#divPreferences').hide();
        }
    }

    function generatePreferenceItemButton(preferenceId, preference) {
        return "<span class='btn btn-xs bg-maroon m-r-xs' id='spnPreference_" + preferenceId + "'>" + preference + " <i class='fa fa-remove m-l-sm' onclick='removePreferenceItem(this);' data-preferenceid='" + preferenceId + "'></i></span>";
    }

    function onSelectPreference(element) {
        var isChecked = $('#' + element).prop("checked");

        $('#' + element).prop("checked", !isChecked);

        selectDeSelectPreference($('#' + element));
    }


    function searchPreference() {
        var selectedPreferenceIds = getCheckedPreferenceIds();
        var selectedPreferenceIdsArr = [];
        if (!IsNullOrEmpty(selectedPreferenceIds)) {
            selectedPreferenceIdsArr = selectedPreferenceIds.split(Delimeter.COMMA);
        }

        $.ajax({
            beforeSend: function (xhr) {
                showLoader();
            },
            error: function (jqXHR, textStatus, errorThrown) {                
                ShowErrorMessage(jqXHR.status, errorThrown);
            },
            complete: function () {
                hideLoader();
            },
            url: '@Url.Content("~/Preference/SearchAdvancePreference")',
            type: 'POST',
            data: $('#frmAdvancePreferenceSearch').serialize(),
            success: function (response) {
                if (response.IsSuccess == false) {
                    showToaster(response.errorMessage, ToasterType.ERROR);
                }
                else {
                    //Show data in table.
                    var result = response.data;

                    $("form#frmAdvancePreferenceSearch #tblPreference tbody").empty();
                    var tbody = $("form#frmAdvancePreferenceSearch #tblPreference tbody");

                    var markup = "";

                    if (result.length > 0) {
                        //Add the data rows.
                        for (var i = 0; i < result.length; i++) {
                            markup += "<tr>";

                            var checked = "";

                            if (selectedPreferenceIdsArr != null && selectedPreferenceIdsArr.length > 0) {
                                if (arrayContains(result[i].Id, selectedPreferenceIdsArr) == true) {
                                    checked = "checked";
                                }
                            }

                            markup += "<td class=\'text-center\'><label class=\'container1\'><input type=\'checkbox\' class=\'chkPreference cursor-P\' id=\'chkPreference_" + result[i].Id + "\' name=\'chkPreference\' value=\'" + result[i].Id + "\'  data-preferencegroupname=\'" + result[i].PreferenceGroupName + "\'  data-preference=\'" + result[i].Preference + "\' onchange=\'selectDeSelectPreference(this);\' " + checked + "/><span class=\'checkmark\'></span></label></td>";

                            markup += "<td onclick=\"onSelectPreference('chkPreference_" + result[i].Id + "');\">" + result[i].PreferenceGroupName + "</td>";
                            markup += "<td onclick=\"onSelectPreference('chkPreference_" + result[i].Id + "');\">" + result[i].PreferenceGroupDescription + "</td>";
                            markup += "<td onclick=\"onSelectPreference('chkPreference_" + result[i].Id + "');\">" + result[i].Preference + "</td>";

                            markup += "</tr>";
                        }
                    } else {
                        markup += "<tr><td colspan =\'4\' class=\'text-center\'>No data available.</td></tr>";
                    }

                    tbody.append(markup);
                }
            }
        });
    }

    function clearPreferenceSearch() {
        $('form#frmAdvancePreferenceSearch #PreferenceGroupId').val('');
        $('form#frmAdvancePreferenceSearch #Preference').val('');

        $("form#frmAdvancePreferenceSearch #tblPreference tbody").empty();
    }


    function addNewPreference() {
        var url = '@Url.Content("~/Preference/Create")' + "?source=@sourceRedirectionParam";
        redirectTo(url);
    }

    function editSelectedPreference() {
        var selectedPreference = $('input[name=chkPreference]:checked', '#frmAdvancePreferenceSearch');

        if (selectedPreference.val()) {
            var preferenceId = $(selectedPreference).val();
            var url = '@Url.Content("~/Preference/Edit")' + "?id=" + preferenceId + "&source=@sourceRedirectionParam";
            redirectTo(url);
        } else {
            showToaster("Please select any one preference.", ToasterType.ERROR);
        }
    }

    function getCheckedPreferenceIds() {
        var preferenceIds = "";
        $("form#frmAdvancePreferenceSearch #selectedPreferences span i").each(function () {            
            preferenceIds += $(this).data("preferenceid") + ",";
        });

        preferenceIds = RemoveLastCharacter(preferenceIds, Delimeter.COMMA);
        return preferenceIds;
    }

</script>