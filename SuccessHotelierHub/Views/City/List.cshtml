@model SuccessHotelierHub.Models.SearchCityParametersVM
@{
    ViewBag.Title = "Search City";
}
@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "CityGrid";
}

<section class="content-header">
    <h1>
        City <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">City</li>
        <li class="active">Search</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search City</h3>
            <div class="pull-right box-tools">
                <a href="@Url.Action("Create","City")"
                   class="btn btn-info btn-sm" style="color: #fff">Add City</a>
            </div>
        </div>
        <form class="frmCityList" enctype="multipart/form-data" method="post">
            <div class="box-body box-body-list">
                <div class="pt_10 pl_10 pr_10 searchBox_Border">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.CountryId)
                            @Html.DropDownListFor(m => m.CountryId,
                                (IEnumerable<SelectListItem>)ViewBag.CountryList, "-- Select Country --",
                                htmlAttributes: new { @class = "form-control", @onchange = "getState();" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.StateId)
                            @Html.DropDownListFor(m => m.StateId,
                                (IEnumerable<SelectListItem>)ViewBag.StateList, "--Select State--",
                                htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.StateId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
                        </div>
                        <div class="col-md-3 form-group mt_25">
                            <button type="button" id="btnSearch" class="btn btn-success m-r-xs" onclick="searchCity()">Search</button>
                            <button type="button" id="btnClear" class="btn btn-danger" onclick="clearCity()">Clear</button>
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 padding-zero m-t" id="divMultipleDeleteAction" style="display:none;">
                    <div class="text-left">
                        <button type="button" id="btnDeleteMultipleRecords" class="btn bg-orange btn-sm" onclick="deleteSelected()">Delete Selected</button>
                    </div>
                </div>

                <div class="col-xs-12 padding-zero m-t-md">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblCity">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Country</th>
                                    <th>State</th>
                                    <th>Name</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM() { TokenForEnableDisableButtons = PagerName, PageChangeMethod = "CityGridPageChange" })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>


<script type="text/javascript">
    var currentPage = 1;
    var grdCity;
    var selectedCityIds = [];

    $(document).ready(function () {
        setTimeout(InitializeCityGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });
    });


    function SearchCityParameters(d) {
        var countryId = $('#CountryId').val();
        var stateId = $('#StateId').val();
        var name = $('#Name').val();

        d.PageNum = currentPage;
        d.CountryId = countryId;
        d.StateId = stateId;
        d.Name = name;
    }

    function CityGridDataBound(response) {
        if (response.IsSuccess == true) {
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);

            if (response.data.length > 0) {
                $('#divMultipleDeleteAction').show();
            } else {
                ClearCityIdsArray();
                $('#divMultipleDeleteAction').hide();
            }

            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadCityGrid() {
        grdCity.ajax.url("@Url.Content("~/City/Search")").load();
    }

    function CityGridPageChange(cPage) {
        currentPage = cPage;
        ReloadCityGrid();
    }


    function InitializeCityGrid() {
        grdCity = $('#tblCity').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                    BindCheckBoxCityChangeEvent();
                },
                url: '@Url.Content("~/City/Search")',
                data: SearchCityParameters,
                dataSrc: CityGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "CreatedOn",
                orderable: false,
                render: function (data, type, full, meta) {
                    var chkBox = "";
                    var checked = "";
                    if (selectedCityIds != null && selectedCityIds.length > 0) {
                        if (arrayContains(full.Id.toString(), selectedCityIds) == true) {
                            checked = "checked";
                        }
                    }

                    chkBox += "<label class='container1' for='chkCity_" + full.Id + "'>";
                    chkBox += "<input type='checkbox' class='chkCityItem' id='chkCity_" + full.Id + "' name='chkCity_" + full.Id + "' value='" + full.Id + "' " + checked + "/>";
                    chkBox += "<span class='checkmark'></span> </label>";
                    return chkBox;
                }
            },
            {
                targets: 1,
                data: "CountryName",
                orderable: true
            },
            {
                targets: 2,
                data: "StateName",
                orderable: true
            },
            {
                targets: 3,
                data: "Name",
                orderable: true
            },
            {
                targets: 4,
                data: "IsActive",
                orderable: false,
                render: function (data, type, full, meta) {
                    var isActive = full.IsActive;
                    if (isActive == true) {
                        return "Active";
                    } else {
                        return "In Active";
                    }
                }
            },
            {
                targets: 5,
                data: "Id",
                orderable: false,
                className: "text-center",
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoCityEdit(\'' + full.Id + '\')" '
                        + ' class="btn btn-success btn-xs m-r-xs">Edit</a> '
                        + ' <button type="button" class="btn btn-danger btn-xs"'
                        + ' onclick="deleteCity(this,event,\'' + full.Id + '\')">Delete</button>';
                }
            }
            ],
            order: [[3, "asc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }

    function GotoCityEdit(Id) {
        var url = '@Url.Content("~/City/Edit/")' + Id;
        redirectTo(url);
    }

    function searchCity() {
        currentPage = 1;
        ClearCityIdsArray();
        ReloadCityGrid();
    }

    function clearCity() {
        $('#CountryId').val('');
        $('#StateId').val('');
        $('#Name').val('');

        searchCity();
    }

    function deleteCity(item, e, id) {

        swal({
            title: 'Are you sure you want to delete?',
            type: 'warning',
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    beforeSend: function (xhr) {
                        showLoader();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        ShowErrorMessage(jqXHR.status, errorThrown);
                    },
                    complete: function () {
                        hideLoader();
                    },
                    url: '@Url.Content("~/City/Delete")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.IsSuccess == true) {

                            var tr = $('#tblCity  tbody tr#' + id)
                            var row = grdCity.row(tr);
                            var rowNode = row.node();
                            row.remove();
                            grdCity.draw();

                            showToaster("Record deleted successfully", ToasterType.SUCCESS);
                        }
                        else {
                            showToaster(response.errorMessage, ToasterType.ERROR);
                        }
                    }
                });
            }
        });
    }

    function getState() {
        var country = $('#CountryId').val();

        if (!IsNullOrEmpty(country) && country != "0") {
            //Get State
            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Common/GetState")',
                type: 'GET',
                data: {
                    countryId: parseInt(country)
                },
                success: function (result) {
                    if (!IsNullOrEmpty(result)) {
                        console.log(result);
                        var optionHtml = "";
                        optionHtml += "<option value=''>-- Select State --</option>";
                        if (result.IsSuccess == true) {
                            for (i = 0; i < result.data.length; i++) {
                                optionHtml += "<option value='" + result.data[i].Value + "'>" + result.data[i].Text + "</option>";
                            }
                        }
                        $('#StateId').html(optionHtml);
                    }
                }
            });
        }
    }

    function BindCheckBoxCityChangeEvent() {
        $(".chkCityItem").change(function () {
            if (this.checked) {
                AddCityIdIntoArray($(this).val());
            } else {
                RemoveCityIdFromArray($(this).val());
            }
        });
    }

    function AddCityIdIntoArray(id) {
        if (!IsNullOrEmpty(id)) {
            selectedCityIds.push(id);
        }
    }

    function RemoveCityIdFromArray(id) {
        if (!IsNullOrEmpty(id)) {
            selectedCityIds = RemoveArrayItemByValue(id, selectedCityIds);
        }
    }

    function ClearCityIdsArray() {
        selectedCityIds = [];
    }

    function deleteSelected() {

        if (selectedCityIds != null && selectedCityIds.length > 0) {
            swal({
                title: 'Are you sure you want to delete selected records?',
                type: 'warning',
                showCancelButton: true,
                showCloseButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        beforeSend: function (xhr) {
                            showLoader();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            ShowErrorMessage(jqXHR.status, errorThrown);
                        },
                        complete: function () {
                            hideLoader();
                        },
                        url: '@Url.Content("~/City/DeleteSelected")',
                        type: 'POST',
                        data: { ids: selectedCityIds },
                        success: function (response) {
                            if (response.IsSuccess == true) {
                                ClearCityIdsArray();

                                searchCity();

                                showToaster("Records deleted successfully", ToasterType.SUCCESS);
                            }
                            else {
                                showToaster(response.errorMessage, ToasterType.ERROR);
                            }
                        }
                    });
                }
            });
        } else {
            showToaster("Please select at least one checkbox to delete record.", ToasterType.ERROR);
        }
    }

</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}