@model SuccessHotelierHub.Models.RoomTypeRateTypeMappingVM
@using SuccessHotelierHub.Utility

@{
    ViewBag.Title = "Edit Rate";

    var sourceParam = Convert.ToString(Request.QueryString["source"]);
    var btnCancelUrl = Url.Action("List", "Rate");

    var smallHeaderText = "";
    if (!string.IsNullOrWhiteSpace(sourceParam))
    {
        if (sourceParam == "WeekDayPrice")
        {
            btnCancelUrl = Url.Action("ManagePrice", "Rate");
            smallHeaderText = "(Week Day Price)";
        }
        else if (sourceParam == "WeekEndPrice")
        {
            btnCancelUrl = Url.Action("ManagePrice", "Rate");
            smallHeaderText = "(Week End Price)";
        }
    }
}


<section class="content-header">
    <h1>
        Rate <small>Edit</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Rate</li>
        <li class="active">Edit</li>
    </ol>
</section>
<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Rate Details &nbsp; &nbsp;<small>@smallHeaderText</small></h3>
        </div>
        @using (Html.BeginForm("Edit", "Rate", FormMethod.Post, new { id = "frmRate", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <!--HIDDEN FIELD-->
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.RoomTypeId)
            @Html.HiddenFor(m => m.RateTypeId)            
            <input type="hidden" id="Source" name="Source" value="@sourceParam" />            
            <!--HIDDEN FIELD-->

            <div class="box-body pt_10 pb-0">
                <div class="row">
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(m => m.RoomTypeId, new { @class = "required-label" })
                        @Html.DropDownListFor(m => m.RoomTypeId,
                                            new SelectList((IEnumerable<SelectListItem>)ViewBag.RoomTypeList, "Value", "Text"),
                                            "Select Room Type",
                                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RoomTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(m => m.RateTypeId, new { @class = "required-label" })
                        @Html.DropDownListFor(m => m.RateTypeId,
                                            new SelectList((IEnumerable<SelectListItem>)ViewBag.RateTypeList, "Value", "Text"),
                                            "Select Rate Type",
                                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RateTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label class="required-label" for="Amount">Amount (&euro;)</label>
                        @Html.TextBoxFor(m => m.Amount, Utility.FormatAmountWithTwoDecimal(Model.Amount) ,new { @class = "form-control", placeholder = "Amount", onkeypress = "onlyNumeric(event);", value = "100.00" })
                        @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(m => m.Description)
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Description", rows = "3" })
                    </div>
                    <div class="col-md-4 form-group m-t-lg">
                        <label class="container1" for="IsActive">
                            Is Active
                            @Html.CheckBoxFor(m => m.IsActive)
                            <span class="checkmark"></span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="box-footer text-right">
                <button type="button" class="btn btn-success m-r-xs" onclick="return updateRate();">Update</button>
                <a href="@btnCancelUrl" c class="btn btn-danger">Cancel</a>
            </div>
        }
    </div>
</section>




<script type="text/javascript">
    function validateRate() {

        var errorMessage = "";
        var blnValid = true;

        if ($("#frmRate").valid() == false) {
            showToaster("Please fill all the Required Fields first", ToasterType.ERROR);
            blnValid = false;
        }

        return blnValid;
    }


    function updateRate() {

        if (validateRate()) {
            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Rate/Edit")',
                type: 'POST',
                data: $('#frmRate').serialize(),
                success: function (response) {
                    if (response.IsSuccess == false) {
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                    else {
                        showToaster("Rate details updated successfully", ToasterType.SUCCESS);

                        if (response.IsExternalUrl) {
                            redirectTo(response.data);
                        } else {
                            setTimeout(function () {
                                redirectTo('@Url.Content("~/Rate/List")');
                            }, 1000);
                        }
                    }
                }
            });
            return false;
        }
    }
</script>
