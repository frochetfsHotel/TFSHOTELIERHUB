@model SuccessHotelierHub.Models.SearchReservationParametersVM
@{
    ViewBag.Title = "Reservation List";
}

@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "ReservationGrid";
}

<section class="content-header">
    <h1>
        Reservation <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Reservation</li>
        <li class="active">List</li>
    </ol>
</section>


<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search Reservation</h3>
            <div class="pull-right box-tools m-r-md">
                <a href="@Url.Action("RateQuery","Reservation")"
                   class="btn btn-info btn-sm" style="color: #fff" data-toggle="tooltip" title=""
                   data-original-title="Add Reservation"><i class="fa fa-plus"></i></a>
            </div>
        </div>
        <form class="frmReservationList" enctype="multipart/form-data" method="post">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.LastName)
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })                        
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.FirstName)
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })                        
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.CRSNo)
                        @Html.TextBoxFor(m => m.CRSNo, new { @class = "form-control", placeholder = "CRS No." })                        
                    </div>
                    <div class="col-md-3 form-group">
                       @Html.LabelFor(m => m.TARecordLocator)
                       @Html.TextBoxFor(m => m.TARecordLocator, new { @class = "form-control", placeholder = "TA Record Locator" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.CompanyId)
                        <select class="form-control" id="CompanyId" name="CompanyId">
                            <option value="">--Select Company--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F931">Company 1</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F934">Company 2</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F936">Company 3</option>
                        </select>
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.GroupId)
                        <select class="form-control" id="GroupId" name="GroupId">
                            <option value="">--Select Group--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F931">Group 1</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F934">Group 2</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F936">Group 3</option>
                        </select>
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.BlockCodeId)
                        <select class="form-control" id="BlockCodeId" name="BlockCodeId">
                            <option value="">--Select Group Code--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-D95261B8F944">Group Code 1</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-D95261B9F945">Group Code 2</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-G95261B0F937">Group Code 3</option>
                        </select>
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.SourceId)
                        <select class="form-control" id="SourceId" name="SourceId">
                            <option value="">--Select Source--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B8F944">Source 1</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B9F945">Source 2</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B0F937">Source 3</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 form-group">
                       @Html.LabelFor(m => m.AgentId)
                        <select class="form-control" id="AgentId" name="AgentId">
                            <option value="">--Select Agent--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F944">Agent 1</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F945">Agent 2</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F937">Agent 3</option>
                        </select>
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.ContactId)
                        <select class="form-control" id="ContactId" name="ContactId">
                            <option value="">--Select Contact--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B8F944">Contact 1</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B9F945">Contact 2</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B0F937">Contact 3</option>
                        </select>
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.MemberTypeId)
                        <select class="form-control" id="MemberTypeId" name="MemberTypeId">
                            <option value="">--Select Member Type--</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F931">Member Gold</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F932">Member Silver</option>
                            <option value="F15C97B6-4FC0-4AB7-A32D-C95261B7F933">Member Platinum</option>
                        </select>
                    </div>
                    <div class="col-md-3 form-group">
                       @Html.LabelFor(m => m.MemberNo)
                       @Html.TextBoxFor(m => m.MemberNo, new { @class = "form-control", placeholder = "Member No" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.ArrivalFrom)
                        <div class="input-group date">                            
                            @Html.TextBoxFor(m => m.ArrivalFrom, new { @class = "form-control", placeholder = "MM/dd/yyyy" })
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(m => m.ArrivalTo)
                        <div class="input-group date">
                            @Html.TextBoxFor(m => m.ArrivalTo, new { @class = "form-control", placeholder = "MM/dd/yyyy" })
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 form-group">
                        <button type="button" id="btnSearch"
                                class="btn btn-success m-r-xs" onclick="searchReservation()">
                            Search
                        </button>
                        <button type="button" id="btnClear" class="btn btn-danger" onclick="clearReservation()">Clear</button>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="col-xs-12 padding-zero m-t-sm">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblReservation">
                            <thead>
                                <tr>
                                    <th>CreatedOn</th>
                                    <th>Last Name</th>
                                    <th>First Name</th>
                                    <th>Phone No</th>
                                    <th>Arrival</th>
                                    <th>Nights</th>
                                    <th>Departure</th>
                                    <th>Adults</th>
                                    <th>Child</th>
                                    <th>Rooms</th>
                                    <th>Room Type</th>
                                    <th>Rate Type</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM()
                   {
                       TokenForEnableDisableButtons = PagerName,
                       PageChangeMethod = "ReservationGridPageChange"
                   })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>
<script type="text/javascript">

    var currentPage = 1;
    var grdReservation;


    $(document).ready(function () {

        //Date picker
        $('#ArrivalFrom').datepicker({
            autoclose: true
        });

        $('#ArrivalTo').datepicker({
            autoclose: true
        });

        setTimeout(InitializeReservationGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });

    });

    function SearchReservationParameters(d) {
        var lastName = $('#LastName').val();
        var firstName = $('#FirstName').val();
        var crsNo = $('#CRSNo').val();
        var taRecordLocator = $('#TARecordLocator').val();
        var companyId = $('#CompanyId').val();
        var groupId = $('#GroupId').val();
        var blockCodeId = $('#BlockCodeId').val();
        var sourceId = $('#SourceId').val();
        var agentId = $('#AgentId').val();
        var contactId = $('#ContactId').val();
        var memberTypeId = $('#MemberTypeId').val();
        var memberNo = $('#MemberNo').val();
        var arrivalFrom = $('#ArrivalFrom').val();
        var arrivalTo = $('#ArrivalTo').val();

        d.PageNum = currentPage;
        d.LastName = lastName;
        d.FirstName = firstName;
        d.CRSNo = crsNo;
        d.TARecordLocator = taRecordLocator;
        d.CompanyId = companyId;
        d.GroupId = groupId;
        d.BlockCodeId = blockCodeId;
        d.SourceId = sourceId;
        d.AgentId = agentId;
        d.ContactId = contactId;
        d.MemberTypeId = memberTypeId;
        d.MemberNo = memberNo;
        d.ArrivalFrom = arrivalFrom;
        d.ArrivalTo = arrivalTo;
    }

    function ReservationGridDataBound(response) {
        if (response.IsSuccess == true) {
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);
            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadReservationGrid() {
        grdReservation.ajax.url("@Url.Content("~/Reservation/SearchReservation")").load();
    }

    function ReservationGridPageChange(cPage) {
        currentPage = cPage;
        ReloadReservationGrid();
    }


    function InitializeReservationGrid() {
        grdReservation = $('#tblReservation').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (result) {
                    showToaster(result.responseText, ToasterType.ERROR);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Reservation/SearchReservation")',
                data: SearchReservationParameters,
                dataSrc: ReservationGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            dateFormat: "mm/dd/yy",
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "CreatedOn",
                orderable: true,
                "visible": false
            },
            {
                targets: 1,
                data: "LastName",
                orderable: true
            },
            {
                targets: 2,
                data: "FirstName",
                orderable: true
            },
            {
                targets: 3,
                data: "PhoneNo",
                orderable: true
            },
            {
                targets: 4,
                data: "ArrivalDate",
                orderable: true
            },
            {
                targets: 5,
                data: "NoOfNight",
                orderable: false
            },
            {
                targets: 6,
                data: "DepartureDate",
                orderable: true
            },
            {
                targets: 7,
                data: "NoOfAdult",
                orderable: false
            },
            {
                targets: 8,
                data: "NoOfChildren",
                orderable: false
            },
            {
                targets: 9,
                data: "NoOfRoom",
                orderable: false
            },
            {
                targets: 10,
                data: "RoomTypeCode",
                orderable: true
            },
            {
                targets: 11,
                data: "RateTypeCode",
                orderable: true
            },
            {
                targets: 12,
                data: "Id",
                orderable: false,
                className: "text-center",
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoReservationEdit(\'' + full.Id + '\')" '
                        + ' class="btn btn-success btn-xs m-r-xs">Edit</a> '
                        + ' <button type="button" class="btn btn-danger btn-xs"'
                        + ' onclick="deleteReservation(this,event,\'' + full.Id + '\')">Delete</button>';
                }
            }
            ],
            order: [[1, "asc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }

    function GotoReservationEdit(Id) {
        var url = '@Url.Content("~/Reservation/Edit/")' + Id;
        redirectTo(url);
    }

    function validateReservationSearchData() {
        var arrivalFrom = $('#ArrivalFrom').val();
        var arrivalTo = $('#ArrivalTo').val();

        var errorMessage = "";
        var blnValid = true;

        if (!IsNullOrEmpty(arrivalFrom) && !IsNullOrEmpty(arrivalTo)) {
            var objArrivalFrom = new Date(arrivalFrom);
            var objArrivalTo = new Date(arrivalTo);

            if (objArrivalFrom > objArrivalTo) {
                errorMessage += "Arrival from date must be less than arrival to." + Delimeter.BREAKLINE;
                blnValid = false;
            }
        }

        if (!blnValid) {
            showToaster(errorMessage, ToasterType.ERROR);
            return false;
        }
        return blnValid;
    }

    function searchReservation() {
        if (validateReservationSearchData()){
            currentPage = 1;
            ReloadReservationGrid();
        }
    }

    function clearReservation() {
        $('#LastName').val('');
        $('#FirstName').val('');
        $('#CRSNo').val('');
        $('#TARecordLocator').val('');
        $('#CompanyId').val('');
        $('#GroupId').val('');
        $('#BlockCodeId').val('');
        $('#SourceId').val('');
        $('#AgentId').val('');
        $('#ContactId').val('');
        $('#MemberTypeId').val('');
        $('#MemberNo').val('');
        $('#ArrivalFrom').val('');
        $('#ArrivalTo').val('');

        searchReservation();
    }

    function deleteReservation(item, e, id) {

        if (confirm("Are you sure do you want to delete ?")) {

            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (result) {
                    showToaster(result.responseText, ToasterType.ERROR);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Reservation/Delete")',
                type: 'POST',
                data: { id: id },
                success: function (response) {
                    if (response.IsSuccess == true) {

                        var tr = $('#tblReservation  tbody tr#' + id)
                        var row = grdReservation.row(tr);
                        var rowNode = row.node();
                        row.remove();
                        grdReservation.draw();

                        showToaster("Record deleted successfully", ToasterType.SUCCESS);
                    }
                    else {
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                }
            });
        }

    }
</script>



@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}