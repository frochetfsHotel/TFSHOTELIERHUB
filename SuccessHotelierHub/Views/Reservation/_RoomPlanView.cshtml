@using SuccessHotelierHub.Models;
@using SuccessHotelierHub.Repository;
@{
    ReservationRepository reservationRepository = new ReservationRepository();

    var roomDetail = (List<RoomPlanRoomVM>)ViewBag.RoomDetail;

    var dates = (List<RoomPlanDateRangeVM>)ViewBag.Dates;

    var firstHeaderRowHtml = "";
    var secondHeaderRowHtml = "";

    var startDate = "";
    var endDate = "";

    if (dates != null)
    {
        firstHeaderRowHtml += "<th colspan='3'>";

        secondHeaderRowHtml += "<th class='text-center' width='8%'>Room#</th>";
        secondHeaderRowHtml += "<th class='text-center' width='10%'>Room Status</th>";
        secondHeaderRowHtml += "<th class='text-center' width='10%'>Room Type</th>";

        startDate = dates[0].Date.Value.ToString("MM/dd/yyyy");
        endDate = dates[dates.Count - 1].Date.Value.ToString("MM/dd/yyyy");

        foreach (var date in dates)
        {
            if (date.Date.HasValue && (date.Date.Value.DayOfWeek == DayOfWeek.Friday || date.Date.Value.DayOfWeek == DayOfWeek.Saturday))
            {
                firstHeaderRowHtml += string.Format("<th width='10%' class='text-weekend-bgcolor text-center'>{0}</th>", date.DayOfTheWeek);
            }
            else
            {
                firstHeaderRowHtml += string.Format("<th width='10%' class='text-center'>{0}</th>", date.DayOfTheWeek);
            }
            secondHeaderRowHtml += string.Format("<th width='10%' class='text-center' data-date='{1}'>{0}</th>", date.DateString, date.Date);
        }

        firstHeaderRowHtml += "</th>";
        secondHeaderRowHtml += "</th>";
    }
}

<style type="text/css">
    td.drop {
        background: #fff;
        width: 100px;
    }

    td.over {
        background: #FBEC88;
    }

    .assigned {
        background: #fafafa;
        color: #444;
    }

    .trash {
        background-color: red;
    }

    #tblRoomPlan .btn[class*='bg-']:hover {
        box-shadow: none;
    }

    #tblRoomPlan thead > tr > th {
        padding: 3px !important;
    }

    .spnReservation {
        width: 100%;
    }

    /* define height and width of scrollable area. Add 16px to width for scrollbar*/
    div.tableContainer {
        clear: both;
        /*height: 285px;*/
        overflow: auto;
        /*width: 900px*/
        width: 100%;
    }

    /* Reset overflow value to hidden for all non-IE browsers. */
    html > body div.tableContainer {
        overflow: hidden;
        /*width: 900px*/
        width: 100%;
    }

        /* define width of table. IE browsers only                 */
        div.tableContainer table {
            float: left;
            /* width: 740px */
        }

        /* define width of table. Add 16px to width for scrollbar.           */
        /* All other non-IE browsers.                                        */
        html > body div.tableContainer table {
            /* width: 756px */
        }

    /* set table header to a fixed position. WinIE 6.x only                                       */
    /* In WinIE 6.x, any element with a position property set to relative and is a child of       */
    /* an element that has an overflow property set, the relative value translates into fixed.    */
    /* Ex: parent element DIV with a class of tableContainer has an overflow property set to auto */

    thead.fixedHeader tr {
        position: relative;
    }

    /* set THEAD element to have block level attributes. All other non-IE browsers            */
    /* this enables overflow to work on TBODY element. All other non-IE, non-Mozilla browsers */

    /* make the TH elements pretty */
    thead.fixedHeader th {
        /*background: #C96;*/
        /*border-left: 1px solid #EB8;
    border-right: 1px solid #B74;
    border-top: 1px solid #EB8;*/
        font-weight: normal;
        padding: 4px 3px;
        text-align: left;
    }

    html > body tbody.scrollContent {
        display: block;
        height: 400px;
        overflow: auto;
        width: 100%;
    }

    html > body thead.fixedHeader {
        display: table;
        overflow: auto;
        width: 100%;
    }

    /* make TD elements pretty. Provide alternating classes for striping the table */
    /* http://www.alistapart.com/articles/zebratables/                             */
    tbody.scrollContent td, tbody.scrollContent tr.normalRow td {
        /*background: #FFF;*/
        border-bottom: none;
        border-left: none;
        /*border-right: 1px solid #CCC;
    border-top: 1px solid #DDD;*/
        padding: 2px 3px 3px 4px;
    }

    tbody.scrollContent tr.alternateRow td {
        /*background: #EEE;*/
        border-bottom: none;
        border-left: none;
        /*border-right: 1px solid #CCC;*/
        border-top: 1px solid #DDD;
        padding: 2px 3px 3px 4px;
    }
</style>




@if (roomDetail != null && roomDetail.Count > 0)
{

    //tbl_max_height
    <div class="col-xs-12 padding-zero m-t">
        <div class="table-responsive tableContainer">
            <table class="table table-bordered scrollTable mb_5 tblRoomPlan" id="tblRoomPlan">
                <thead class="fixedHeader">
                    <tr>
                        @Html.Raw(firstHeaderRowHtml)
                    </tr>
                    <tr>
                        @Html.Raw(secondHeaderRowHtml)
                    </tr>
                </thead>
                <tbody class="scrollContent">
                    @foreach (var room in roomDetail)
                    {
                        var statusBGColor = "#fff";
                        if (!string.IsNullOrWhiteSpace(room.RoomStatusColor))
                        {
                            statusBGColor = room.RoomStatusColor;
                        }

                        var reservationDetail = reservationRepository.GetReservationDetailsForRoomPlan(room.Id, startDate, endDate, LogInManager.LoggedInUserId);

                        <tr data-roomid="@(room.Id)" data-roomtypeid="@(room.RoomTypeId)" data-roomtypecode="@(room.RoomTypeCode)" data-roomno="@(room.RoomNo)" data-tr-id="@("tr_" + room.Id)" id="@("tr_" + room.Id)">
                            <td width='8%'>@room.RoomNo</td>
                            <td width='10%' class="tdRoomStatus" style="background-color:@statusBGColor; color:#fff"
                                data-background-color="@statusBGColor" data-room-status="@room.RoomStatus">
                                @room.RoomStatus
                            </td>
                            <td width='10%'>@room.RoomTypeCode</td>

                            @if (reservationDetail != null && reservationDetail.Count > 0)
                    {
                        bool blnFirst = true;
                        int cardColspan = 0;
                        for (int intI = 0; intI < dates.Count;)
                        {
                            cardColspan = 0;

                            var reservationInfo = reservationDetail.Where(i => (i.CheckInDate.Value.Date <= dates[intI].Date.Value.Date) && (i.CheckOutDate.Value.Date >= dates[intI].Date.Value.Date)).FirstOrDefault();
                            if (reservationInfo != null)
                            {
                                cardColspan = (reservationInfo.NoOfNight + 1);

                                if (blnFirst)
                                {
                                    blnFirst = false;
                                            <td width='10%' class="text-center cursor-move assigned" style="padding:0" colspan="@(reservationInfo.NoOfNight - 1)">
                                                <span style="margin-right:-1px !important; text-align:center!important;"
                                                      class="first btn item btn-xs bg-orange m-r-xs text-left-align p-l-xs spnReservation"
                                                      id="@("spnReservation_" + reservationInfo.ReservationId)"
                                                      data-reservationid="@(reservationInfo.ReservationId)"
                                                      ondblclick="GotoReservationEdit('@(reservationInfo.ReservationId)')"
                                                      title="Double click here to view reservation detail.">
                                                    @(string.Format("{0} {1} ({2})", reservationInfo.LastName, reservationInfo.FirstName, reservationInfo.NoOfAdult))
                                                </span>
                                            </td>
                                        }
                                        else
                                        {
                                            if (reservationInfo.CheckOutDateString == dates[intI].DateString)
                                            {
                                                <td width='10%' class="text-center cursor-move assigned" style="padding:0">
                                                    <span class="btn btn-xs m-r-xs text-left-align p-l-xs fa fa-arrow-right"
                                                          id="@("spnReservation_" + reservationInfo.ReservationId)"
                                                          data-reservationid="@(reservationInfo.ReservationId)"
                                                          ondblclick="GotoReservationEdit('@(reservationInfo.ReservationId)')"
                                                          title="Double click here to view reservation detail.">
                                                    </span>
                                                </td>

                                            }
                                            else
                                            {
                                                @*<td width='10%' class="text-center cursor-move assigned" style="padding:0">
                                                        <span class="btn btn-xs m-r-xs text-left-align p-l-xs"
                                                              id="@("spnReservation_" + reservationInfo.ReservationId)"
                                                              data-reservationid="@(reservationInfo.ReservationId)"
                                                              ondblclick="GotoReservationEdit('@(reservationInfo.ReservationId)')"
                                                              title="Double click here to view reservation detail.">
                                                        </span>
                                                    </td>*@
                                           } 

                                        }

                                        @*<td class="text-center cursor-move assigned" style="padding:0">
                                                <span class="btn item btn-xs bg-orange m-r-xs spnReservation" id="@("spnReservation_" + reservationInfo.ReservationId)" data-reservationid="@(reservationInfo.ReservationId)" ondblclick="GotoReservationEdit('@(reservationInfo.ReservationId)')"
                                                      title="Double click here to view reservation detail.">
                                                    @(string.Format("{0} {1} ({2})", reservationInfo.LastName, reservationInfo.FirstName, reservationInfo.NoOfNight))
                                                </span>
                                            </td>*@

                                        //intI = intI + (cardColspan);
                                        intI = intI + 1;
                                    }
                                    else
                                    {
                                        blnFirst = true;
                                        intI++;
                                        <td width='10%' class="drop"></td>
                                    }
                                }
                            }
                            else
                            {
                                <td width='10%' class="drop"></td>
                                <td width='10%' class="drop"></td>
                                <td width='10%' class="drop"></td>
                                <td width='10%' class="drop"></td>
                                <td width='10%' class="drop"></td>
                                <td width='10%' class="drop"></td>
                                <td width='10%' class="drop"></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="col-xs-12 padding-zero">
        <div class="col-sm-3 padding_left">
            @*<p class="mb_5 mt_5"><a herf="#">[Day]Fowler, Veronica</a></p>*@
        </div>
        <div class="col-sm-9 padding-zero">
            <div class="pull-left">
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.FirstDate')" title="First"><i class="fa fa-angle-double-left next_prev_btn" aria-hidden="true"></i></a>
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.PrevDate')" title="Prev"><i class="fa fa-angle-left next_prev_btn" aria-hidden="true"></i></a>
                @*<a href="#" class="lbl_bg">Dep/Cxl Rule</a>*@
            </div>
            <div class="pull-right">
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.NextDate')" title="Next"><i class="fa fa-angle-right next_prev_btn" aria-hidden="true"></i></a>
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.LastDate')" title="Last"><i class="fa fa-angle-double-right next_prev_btn" aria-hidden="true"></i></a>
            </div>
        </div>
    </div>
}
else
{
    <div class="col-xs-12 padding-zero m-t text-center">
        <h5>No data available.</h5>
    </div>
}

<script type="text/javascript">
    $(function () {
        $('.tblRoomPlan td span.item').draggable({
            revert: true,
            proxy: 'clone'
        });

        $('.tblRoomPlan td.drop').droppable({
            onDragEnter: function () {
                $(this).addClass('over');
            },
            onDragLeave: function () {
                $(this).removeClass('over');
            },
            onDrop: function (e, source) {
                $(this).removeClass('over');

                //Get current row <tr>.
                var $row = $(this).closest("td").closest("tr");
                var $sourceRow = $(source).closest("td").closest("tr");

                //Get date of dropped td element by index (NOTE : find('thead tr').eq(1) => select second header from the table.
                var $th = $(this).closest('table').find('thead tr').eq(1).find('th').eq($(this).index());
                var date = $($th).attr("data-date");

                var currentDraggableElement = $(source);

                if ($(source).hasClass('assigned')) {
                    $(this).append(source);
                } else {
                    var c = $(source).clone().addClass('assigned');
                    $(this).empty().append(c);
                    $(this).closest("td").addClass("assigned");
                    //$(this).closest("td").removeClass("drop");

                    c.draggable(
                        {
                            revert: true
                        });

                    $(source).closest("td").addClass("drop1");
                    //$(source).closest("td").removeClass("assigned");
                    bindDroppableEventToAssignedReservation();

                    $(source).remove();

                }

                if ($row) {
                    var reservationId = $(currentDraggableElement).attr("data-reservationid");
                    var roomId = $row.attr("data-roomid");
                    var roomTypeId = $row.attr("data-roomtypeid");
                    var trIdToScroll = $row.attr("data-tr-id");

                    $('#hdnRoomTableRowIdToScroll').val(trIdToScroll);

                    ChangeRoomAndReservationMapping(reservationId, roomId, roomTypeId, date, $sourceRow, $row);
                }

            }
        });

    });

    function bindDroppableEventToAssignedReservation() {
        $('.tblRoomPlan td.drop1').droppable({
            accept: '.assigned',
            onDragEnter: function (e, source) {
                $(source).addClass('trash');
            },
            onDragLeave: function (e, source) {
                $(source).removeClass('trash');
            },
            onDrop: function (e, source) {
                $(this).removeClass('over');

                //Get current row <tr>.
                var $row = $(this).closest("td").closest("tr");
                var $sourceRow = $(source).closest("td").closest("tr");

                //Get date of dropped td element by index (NOTE : find('thead tr').eq(1) => select second header from the table.
                var $th = $(this).closest('table').find('thead tr').eq(1).find('th').eq($(this).index());
                var date = $($th).attr("data-date");

                var currentDraggableElement = $(source);

                if ($(source).hasClass('assigned')) {
                    $(this).append(source);
                } else {
                    var c = $(source).clone().addClass('assigned');
                    $(this).empty().append(c);
                    $(this).closest("td").addClass("assigned");
                    //$(this).closest("td").removeClass("drop");

                    c.draggable({
                        revert: true
                    });

                    $(source).closest("td").addClass("drop1");
                    //$(source).closest("td").removeClass("assigned");
                    bindDroppableEventToAssignedReservation();

                    $(source).remove();
                }

                if ($row) {
                    var reservationId = $(currentDraggableElement).attr("data-reservationid");
                    var roomId = $row.attr("data-roomid");
                    var roomTypeId = $row.attr("data-roomtypeid");
                    var trIdToScroll = $row.attr("data-tr-id");

                    $('#hdnRoomTableRowIdToScroll').val(trIdToScroll);

                    ChangeRoomAndReservationMapping(reservationId, roomId, roomTypeId, date, $sourceRow, $row);
                }
            }
        });
    }

    function ChangeRoomAndReservationMapping(reservationId, roomId, roomTypeId, date, sourceRow, destinationRow) {

        if (!IsNullOrEmpty(reservationId) && !IsNullOrEmpty(roomId) && !IsNullOrEmpty(roomTypeId)) {
            //Ajax request to change room mapping.
            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Room/ChangeRoomAndReservationMapping")',
                type: 'POST',
                data: { reservationId: reservationId, roomId: roomId, roomTypeId: roomTypeId, date: date },
                success: function (response) {
                    if (response.IsSuccess == false) {
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                    else {
                        showToaster('Room allocation changed successfully.', ToasterType.SUCCESS);
                        //
                        //if (!IsNullOrEmpty(sourceRow) && !IsNullOrEmpty(destinationRow)) {
                        //    var sourceRowTDStatus = $(sourceRow).find("td.tdRoomStatus");
                        //    var destinationRowTDStatus = $(destinationRow).find("td.tdRoomStatus");

                        //    var sourceRowRoomStatusColor = "", destinationRowRoomStatusColor = "";
                        //    var sourceRowRoomStatus = "", destinationRowRoomStatus = "";

                        //    sourceRowRoomStatusColor = $(sourceRowTDStatus).attr("data-background-color");
                        //    destinationRowRoomStatusColor = $(destinationRowTDStatus).attr("data-background-color");

                        //    sourceRowRoomStatus = $(sourceRowTDStatus).attr("data-room-status");
                        //    destinationRowRoomStatus = $(destinationRowTDStatus).attr("data-room-status");

                        //    $(sourceRow).find("td.tdRoomStatus").css({ "background-color": destinationRowRoomStatusColor }).html(destinationRowRoomStatus);
                        //    $(destinationRow).find("td.tdRoomStatus").css({ "background-color": sourceRowRoomStatusColor }).html(sourceRowRoomStatus);
                        //}

                        searchRoomPlan($('#StartDate').val());
                    }
                }
            });
        }
    }

    function GotoReservationEdit(Id) {
        var url = '@Url.Content("~/Reservation/Edit/")' + Id + "?source=RoomPlan";
        redirectTo(url);
    }
</script>

