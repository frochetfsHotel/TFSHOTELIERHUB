@using SuccessHotelierHub.Models;
@using SuccessHotelierHub.Repository;
@{
    ReservationRepository reservationRepository = new ReservationRepository();

    var roomDetail = (List<RoomPlanRoomVM>)ViewBag.RoomDetail;

    var dates = (List<RoomPlanDateRangeVM>)ViewBag.Dates;

    var firstHeaderRowHtml = "";
    var secondHeaderRowHtml = "";

    var startDate = "";
    var endDate = "";

    if (dates != null)
    {
        firstHeaderRowHtml += "<th colspan='3'>";

        secondHeaderRowHtml += "<th>Room#</th>";
        secondHeaderRowHtml += "<th>Room Status</th>";
        secondHeaderRowHtml += "<th>Room Type</th>";

        startDate = dates[0].Date.Value.ToString("MM/dd/yyyy");
        endDate = dates[dates.Count - 1].Date.Value.ToString("MM/dd/yyyy");

        foreach (var date in dates)
        {
            firstHeaderRowHtml += string.Format("<th>{0}</th>", date.DayOfTheWeek);
            secondHeaderRowHtml += string.Format("<th data-date='{1}'>{0}</th>", date.DateString, date.Date);
        }

        firstHeaderRowHtml += "</th>";
        secondHeaderRowHtml += "</th>";
    }
}

<style type="text/css">
    td.drop {
        background: #fff;
        width: 100px;
    }

    td.over {
        background: #FBEC88;
    }
    .assigned {
          background: #fafafa;
          color: #444;
    }

    .trash {
        background-color: red;
    }
</style>

@if (roomDetail != null && roomDetail.Count > 0)
{
    <div class="col-xs-12 padding-zero m-t tbl_max_height ">
        <div class="table-responsive">
            <table class="table table-bordered mb_5 tblRoomPlan">
                <thead>
                    <tr>
                        @Html.Raw(firstHeaderRowHtml)
                    </tr>
                    <tr>
                        @Html.Raw(secondHeaderRowHtml)
                    </tr>
                </thead>
                <tbody>
                    @foreach (var room in roomDetail)
                    {
                        var statusBGColor = "#fff";
                        if (!string.IsNullOrWhiteSpace(room.RoomStatusColor))
                        {
                            statusBGColor = room.RoomStatusColor;
                        }

                        var reservationDetail = reservationRepository.GetReservationDetailsForRoomPlan(room.Id, startDate, endDate);

                        <tr data-roomid="@(room.Id)" data-roomtypeid="@(room.RoomTypeId)" data-roomtypecode="@(room.RoomTypeCode)" data-roomno="@(room.RoomNo)">
                            <td>@room.RoomNo</td>
                            <td style="background-color:@statusBGColor; color:#fff">@room.RoomStatus</td>
                            <td>@room.RoomTypeCode</td>

                            @if (reservationDetail != null && reservationDetail.Count > 0)
                            {
                                int cardColspan = 0;
                                for (int intI = 0; intI < dates.Count;)
                                {
                                    cardColspan = 0;
                                    //var reservationInfo = reservationDetail.Where(i => i.CheckInDateString == dates[intI].DateString).FirstOrDefault();
                                    var reservationInfo = reservationDetail.Where(i => (i.CheckInDate.Value.Date <= dates[intI].Date.Value.Date) && (i.CheckOutDate.Value.Date >= dates[intI].Date.Value.Date)).FirstOrDefault();
                                    if (reservationInfo != null)
                                    {
                                        //cardColspan = reservationInfo.NoOfNight > 1 ? (reservationInfo.NoOfNight + 1) : reservationInfo.NoOfNight;
                                        cardColspan = (reservationInfo.NoOfNight + 1);

                                        @*<td colspan="@(cardColspan)" class="text-center cursor-move bg-orange spnReservation"  id="@("tdReservation_" + reservationInfo.ReservationId)">*@
                                        @*<td class="text-center cursor-move bg-orange spnReservation" id="@("tdReservation_" + reservationInfo.ReservationId)" data-reservationid="@(reservationInfo.ReservationId)">
                                                <button type="button" class="btn btn-xs bg-orange m-r-xs" id="@("spnReservation_" + reservationInfo.ReservationId)">
                                                    @(string.Format("{0} {1} ({2})", reservationInfo.LastName, reservationInfo.FirstName, reservationInfo.NoOfNight))
                                                </button>
                                            </td>*@

                                        <td class="text-center cursor-move assigned">
                                            <span class="btn item btn-xs bg-orange m-r-xs spnReservation" id="@("spnReservation_" + reservationInfo.ReservationId)" data-reservationid="@(reservationInfo.ReservationId)">
                                                @(string.Format("{0} {1} ({2})", reservationInfo.LastName, reservationInfo.FirstName, reservationInfo.NoOfNight))
                                            </span>
                                        </td>

                                        //intI = intI + (cardColspan);
                                        intI = intI + 1;
                                    }
                                    else
                                    {
                                        intI++;
                                        <td class="drop"></td>
                                    }
                                }
                            }
                            else
                            {
                                <td class="drop"></td>
                                <td class="drop"></td>
                                <td class="drop"></td>
                                <td class="drop"></td>
                                <td class="drop"></td>
                                <td class="drop"></td>
                                <td class="drop"></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="col-xs-12 padding-zero">
        <div class="col-sm-3 padding_left">
            @*<p class="mb_5 mt_5"><a herf="#">[Day]Fowler, Veronica</a></p>*@
        </div>
        <div class="col-sm-9 padding-zero">
            <div class="pull-left">
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.FirstDate')" title="First"><i class="fa fa-angle-double-left next_prev_btn" aria-hidden="true"></i></a>
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.PrevDate')" title="Prev"><i class="fa fa-angle-left next_prev_btn" aria-hidden="true"></i></a>
                @*<a href="#" class="lbl_bg">Dep/Cxl Rule</a>*@
            </div>
            <div class="pull-right">
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.NextDate')" title="Next"><i class="fa fa-angle-right next_prev_btn" aria-hidden="true"></i></a>
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.LastDate')" title="Last"><i class="fa fa-angle-double-right next_prev_btn" aria-hidden="true"></i></a>
            </div>
        </div>
    </div>
}
else
{
    <div class="col-xs-12 padding-zero m-t text-center">
        <h5>No data available.</h5>
    </div>
}

<script type="text/javascript">
    $(function () {

        $('.tblRoomPlan td span.item').draggable({
            revert: true,
            proxy: 'clone'
        });

        $('.tblRoomPlan td.drop').droppable({
            onDragEnter: function () {
                $(this).addClass('over');
            },
            onDragLeave: function () {
                $(this).removeClass('over');
            },
            onDrop: function (e, source) {
                $(this).removeClass('over');

                //Get current row <tr>.
                var $row = $(this).closest("td").closest("tr");

                //Get date of dropped td element by index (NOTE : find('thead tr').eq(1) => select second header from the table.
                var $th = $(this).closest('table').find('thead tr').eq(1).find('th').eq($(this).index());
                var date = $($th).attr("data-date");

                var currentDraggableElement = $(source);

                if ($(source).hasClass('assigned')) {
                    $(this).append(source);
                } else {                    
                    var c = $(source).clone().addClass('assigned');
                    $(this).empty().append(c);
                    $(this).closest("td").addClass("assigned");

                    c.draggable({
                        revert: true
                    });
                                        
                    $(source).closest("td").addClass("drop1");
                    bindDroppableEventToAssignedReservation();

                    $(source).remove();
                    
                }

                if ($row) {
                    var reservationId = $(currentDraggableElement).attr("data-reservationid");
                    var roomId = $row.attr("data-roomid");
                    var roomTypeId = $row.attr("data-roomtypeid");

                    ChangeRoomAndReservationMapping(reservationId, roomId, roomTypeId, date);
                }

            }
        });

    });

    function bindDroppableEventToAssignedReservation() {
        $('.tblRoomPlan td.drop1').droppable({
            accept: '.assigned',
            onDragEnter: function (e, source) {
                $(source).addClass('trash');
            },
            onDragLeave: function (e, source) {
                $(source).removeClass('trash');
            },
            onDrop: function (e, source) {
                $(this).removeClass('over');

                //Get current row <tr>.
                var $row = $(this).closest("td").closest("tr");

                //Get date of dropped td element by index (NOTE : find('thead tr').eq(1) => select second header from the table.
                var $th = $(this).closest('table').find('thead tr').eq(1).find('th').eq($(this).index());
                var date = $($th).attr("data-date");

                var currentDraggableElement = $(source);

                if ($(source).hasClass('assigned')) {
                    $(this).append(source);
                } else {                    
                    var c = $(source).clone().addClass('assigned');
                    $(this).empty().append(c);
                    $(this).closest("td").addClass("assigned");

                    c.draggable({
                        revert: true
                    });
                                        
                    $(source).closest("td").addClass("drop1");
                    bindDroppableEventToAssignedReservation();

                    $(source).remove();
                }

                if ($row) {
                    var reservationId = $(currentDraggableElement).attr("data-reservationid");
                    var roomId = $row.attr("data-roomid");
                    var roomTypeId = $row.attr("data-roomtypeid");

                    ChangeRoomAndReservationMapping(reservationId, roomId, roomTypeId, date);
                }
            }
        });
    }

    function ChangeRoomAndReservationMapping(reservationId, roomId, roomTypeId, date) {

        if (!IsNullOrEmpty(reservationId) && !IsNullOrEmpty(roomId) && !IsNullOrEmpty(roomTypeId)) {
            //Ajax request to change room mapping.
            $.ajax({
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Room/ChangeRoomAndReservationMapping")',
                type: 'POST',
                data: { reservationId: reservationId, roomId: roomId, roomTypeId: roomTypeId, date: date },
                success: function (response) {
                    if (response.IsSuccess == false) {
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                    else {
                        showToaster('Room allocation changed successfully.', ToasterType.SUCCESS);

                        searchRoomPlan($('#StartDate').val());
                    }
                }
            });
        }
    }
</script>
