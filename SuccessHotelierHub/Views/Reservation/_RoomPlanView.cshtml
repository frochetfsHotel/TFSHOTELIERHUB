@using SuccessHotelierHub.Models;
@using SuccessHotelierHub.Repository;
@{
    ReservationRepository reservationRepository = new ReservationRepository();

    var roomDetail = (List<RoomPlanRoomVM>)ViewBag.RoomDetail;

    var dates = (List<RoomPlanDateRangeVM>)ViewBag.Dates;

    var firstHeaderRowHtml = "";
    var secondHeaderRowHtml = "";

    var startDate = "";
    var endDate = "";

    if (dates != null)
    {
        firstHeaderRowHtml += "<th colspan='3'>";

        secondHeaderRowHtml += "<th>Room#</th>";
        secondHeaderRowHtml += "<th>Room Status</th>";
        secondHeaderRowHtml += "<th>Room Type</th>";

        startDate = dates[0].Date.Value.ToString("MM/dd/yyyy");
        endDate = dates[dates.Count - 1].Date.Value.ToString("MM/dd/yyyy");

        foreach (var date in dates)
        {
            firstHeaderRowHtml += string.Format("<th>{0}</th>", date.DayOfTheWeek);
            secondHeaderRowHtml += string.Format("<th>{0}</th>", date.DateString);
        }

        firstHeaderRowHtml += "</th>";
        secondHeaderRowHtml += "</th>";
    }
}

@if (roomDetail != null && roomDetail.Count > 0)
{
    <div class="col-xs-12 padding-zero m-t tbl_max_height">
        <div class="table-responsive">
            <table class="table table-bordered mb_5">
                <thead>
                    <tr>
                        @Html.Raw(firstHeaderRowHtml)
                    </tr>
                    <tr>
                        @Html.Raw(secondHeaderRowHtml)
                    </tr>
                </thead>
                <tbody>
                    @foreach (var room in roomDetail)
                    {
                        var statusBGColor = "#ff";
                        if (!string.IsNullOrWhiteSpace(room.RoomStatusColor))
                        {
                            statusBGColor = room.RoomStatusColor;
                        }

                        var reservationDetail = reservationRepository.GetReservationDetailsForRoomPlan(room.Id, startDate, endDate);

                        <tr>
                            <td>@room.RoomNo</td>
                            <td style="background-color:@statusBGColor; color:#fff">@room.RoomStatus</td>
                            <td>@room.RoomTypeCode</td>

                            @if (reservationDetail != null && reservationDetail.Count > 0)
                            {
                                int cardColspan = 0;
                                for (int intI = 0; intI < dates.Count;)
                                {
                                    cardColspan = 0;
                                    //var reservationInfo = reservationDetail.Where(i => i.CheckInDateString == dates[intI].DateString).FirstOrDefault();
                                    var reservationInfo = reservationDetail.Where(i => (i.CheckInDate.Value.Date <= dates[intI].Date.Value.Date) && (i.CheckOutDate.Value.Date >= dates[intI].Date.Value.Date)).FirstOrDefault();
                                    if (reservationInfo != null)
                                    {
                                        cardColspan = reservationInfo.NoOfNight > 1 ? (reservationInfo.NoOfNight + 1) : reservationInfo.NoOfNight;

                                        <td colspan="@(cardColspan)" class="text-center  cursor-move bg-orange spnReservation"  id="@("tdReservation_" + reservationInfo.ReservationId)">
                                            <button type="button" class="btn btn-xs bg-orange m-r-xs" id="@("spnReservation_" + reservationInfo.ReservationId)">
                                                @(string.Format("{0} {1} ({2})", reservationInfo.LastName, reservationInfo.FirstName, reservationInfo.NoOfNight))
                                            </button>
                                        </td>

                                        intI = intI + (cardColspan);
                                    }
                                    else
                                    {
                                        intI++;
                                        <td class="droppable"></td>
                                    }
                                }
                            }
                            else
                            {
                                <td class="droppable"></td>
                                <td class="droppable"></td>
                                <td class="droppable"></td>
                                <td class="droppable"></td>
                                <td class="droppable"></td>
                                <td class="droppable"></td>
                                <td class="droppable"></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="col-xs-12 padding-zero">
        <div class="col-sm-3 padding_left">
            @*<p class="mb_5 mt_5"><a herf="#">[Day]Fowler, Veronica</a></p>*@
        </div>
        <div class="col-sm-9 padding-zero">
            <div class="pull-left">
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.FirstDate')" title="First"><i class="fa fa-angle-double-left next_prev_btn" aria-hidden="true"></i></a>
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.PrevDate')" title="Prev"><i class="fa fa-angle-left next_prev_btn" aria-hidden="true"></i></a>
                @*<a href="#" class="lbl_bg">Dep/Cxl Rule</a>*@
            </div>
            <div class="pull-right">
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.NextDate')" title="Next"><i class="fa fa-angle-right next_prev_btn" aria-hidden="true"></i></a>
                <a href="javascript:void(0);" onclick="searchRoomPlan('@ViewBag.LastDate')" title="Last"><i class="fa fa-angle-double-right next_prev_btn" aria-hidden="true"></i></a>
            </div>
        </div>
    </div>
}
else
{
    <div class="col-xs-12 padding-zero m-t text-center">
        <h5>No data available.</h5>
    </div>
}

<script type="text/javascript">
    $(function () {

        //$(".spnReservation").sortable({
        //    connectWith: ".droppable",
        //    cursor: "move",
        //    placeholder: "ui-state-highlight",
        //    items: 'tr',
        //    receive: function (event, ui) {
        //        debugger;
        //        if (typeof ui.item.attr('rowspan') !== 'undefined' && ui.item.attr('rowspan') !== false) {
        //            rowspan = ui.item.attr('rowspan');
        //            $(this).attr('rowspan', rowspan);
        //            ui.sender.attr('rowspan', 0);
        //        }
        //        if (typeof ui.item.attr('colspan') !== 'undefined' && ui.item.attr('colspan') !== false) {
        //            colspan = ui.item.attr('colspan');
        //            $(this).attr('colspan', colspan);
        //            ui.sender.attr('colspan', 0);
        //        }
        //    }

        //});

        $(".spnReservation").draggable({
            connectToSortable: ".droppable",            
            cursor: "move",
            drag: function (event, ui) {
                //$(this).html("Dragged!");                
            },
            stop: handleDragStop
        });

        $(".droppable").droppable({
            //accept: '.spnReservation',
            drop: function (event, ui) {
                console.log("handleDropStop : " + $(this));
                console.log($(this));
                var draggable = ui;
                console.log(draggable);
                console.log('The card with ID "' + ui.draggable.attr('id') + '" was dropped onto me!');

                //$(this).append(ui.draggable.html());
                //$(ui.draggable).remove();

                //$(this)
                //  .addClass("ui-state-highlight")
                //  //.find("td")
                //    .html("Dropped!");
            },
        });
    });

    function handleDragStop(event, ui) {
        console.log("handleDragStop");
        var draggable = ui;
        console.log(draggable);
        var offsetXPos = parseInt(ui.offset.left);
        var offsetYPos = parseInt(ui.offset.top);
        //alert("Drag stopped!\n\nOffset: (" + offsetXPos + ", " + offsetYPos + ")\n");
    }
</script>
