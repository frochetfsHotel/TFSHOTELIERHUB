@model SuccessHotelierHub.Models.SearchReservationCancellationReasonParametersVM
@{
    ViewBag.Title = "Search Reservation Cancellation Reason";
}
@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "ReservationCancellationReasonGrid";
}

<section class="content-header">
    <h1>
        Reservation Cancellation Reason <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Reservation Cancellation Reason</li>
        <li class="active">Search</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search Reservation Cancellation Reason</h3>
            <div class="pull-right box-tools">
                <a href="@Url.Action("Create","ReservationCancellationReason")"
                   class="btn btn-info btn-sm" style="color: #fff">Add Cancellation Reason</a>
            </div>
        </div>
        <form class="frmPreferenceList" enctype="multipart/form-data" method="post">
            <div class="box-body">

                <div class="pt_10 pl_10 pr_10 searchBox_Border">

                    <div class="row">
                        <div class="col-md-4 form-group">
                            @Html.LabelFor(m => m.Code)
                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control", placeholder = "Code" })
                        </div>
                        <div class="col-md-4 form-group">
                            @Html.LabelFor(m => m.Description)
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Description", rows = "3" })
                        </div>
                        
                        <div class="col-md-4 form-group mt_25">
                            <button type="button" id="btnSearch" class="btn btn-success m-r-xs"
                                    onclick="searchReservationCancellationReason()">
                                Search
                            </button>
                            <button type="button" id="btnClear" class="btn btn-danger"
                                    onclick="clearReservationCancellationReason()">
                                Clear
                            </button>
                        </div>
                        
                    </div>
                </div>

                <div class="col-xs-12 padding-zero m-t" id="divMultipleDeleteAction" style="display:none;">
                    <div class="text-left">
                        <button type="button" id="btnDeleteMultipleRecords" class="btn bg-orange btn-sm" onclick="deleteSelected()">Delete Selected</button>
                    </div>
                </div>

                <div class="col-xs-12 padding-zero m-t-md">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblReservationCancellationReason">
                            <thead>
                                <tr>
                                    <th class="width_5"></th>
                                    <th class="width_20">Code</th>
                                    <th class="width_40">Description</th>
                                    <th class="width_10">Status</th>
                                    <th class="width_25">Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM() { TokenForEnableDisableButtons = PagerName, PageChangeMethod = "ReservationCancellationReasonGridPageChange" })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>


<script type="text/javascript">

    var currentPage = 1;
    var grdReservationCancellationReason;
    var selectedReservationCancellationReasonIds = [];

    $(document).ready(function () {
        setTimeout(InitializeReservationCancellationReasonGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });
    });


    function SearchReservationCancellationReasonParameters(d) {
        var code = $('#Code').val();
        var description = $('#Description').val();

        d.PageNum = currentPage;
        d.Code = code;
        d.Description = description;
    }

    function ReservationCancellationReasonGridDataBound(response) {
        if (response.IsSuccess == true) {
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);

            if (response.data.length > 0) {
                $('#divMultipleDeleteAction').show();
            } else {
                ClearReservationCancellationReasonIdsArray();
                $('#divMultipleDeleteAction').hide();
            }

            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadReservationCancellationReasonGrid() {
        grdReservationCancellationReason.ajax.url("@Url.Content("~/ReservationCancellationReason/Search")").load();
    }

    function ReservationCancellationReasonGridPageChange(cPage) {
        currentPage = cPage;
        ReloadReservationCancellationReasonGrid();
    }


    function InitializeReservationCancellationReasonGrid() {
        grdReservationCancellationReason = $('#tblReservationCancellationReason').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    hideLoader();
                    BindCheckBoxReservationCancellationReasonChangeEvent();
                },
                url: '@Url.Content("~/ReservationCancellationReason/Search")',
                data: SearchReservationCancellationReasonParameters,
                dataSrc: ReservationCancellationReasonGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "CreatedOn",
                orderable: false,
                render: function (data, type, full, meta) {
                    var chkBox = "";
                    var checked = "";
                    if (selectedReservationCancellationReasonIds != null && selectedReservationCancellationReasonIds.length > 0) {
                        if (arrayContains(full.Id, selectedReservationCancellationReasonIds) == true) {
                            checked = "checked";
                        }
                    }

                    chkBox += "<label class='container1' for='chkReservationCancellationReason_" + full.Id + "'>";
                    chkBox += "<input type='checkbox' class='chkReservationCancellationReasonItem' id='chkReservationCancellationReason_" + full.Id + "' name='chkReservationCancellationReason_" + full.Id + "' value='" + full.Id + "' " + checked + "/>";
                    chkBox += "<span class='checkmark'></span> </label>";
                    return chkBox;
                }
            },
            {
                targets: 1,
                data: "Code",
                orderable: true
            },
            {
                targets: 2,
                data: "Description",
                orderable: true
            },
            {
                targets: 3,
                data: "IsActive",
                orderable: false,
                render: function (data, type, full, meta) {
                    var isActive = full.IsActive;
                    if (isActive == true) {
                        return "Active";
                    } else {
                        return "In Active";
                    }
                }
            },
            {
                targets: 4,
                data: "Id",
                orderable: false,
                className: "text-center",
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoReservationCancellationReasonEdit(\'' + full.Id + '\')" '
                        + ' class="btn btn-success btn-xs m-r-xs">Edit</a> '
                        + ' <button type="button" class="btn btn-danger btn-xs"'
                        + ' onclick="deleteReservationCancellationReason(this,event,\'' + full.Id + '\')">Delete</button>';
                }
            }
            ],
            order: [[1, "asc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }

    function GotoReservationCancellationReasonEdit(Id) {
        var url = '@Url.Content("~/ReservationCancellationReason/Edit/")' + Id;
        redirectTo(url);
    }

    function searchReservationCancellationReason() {
        currentPage = 1;
        ClearReservationCancellationReasonIdsArray();
        ReloadReservationCancellationReasonGrid();
    }

    function clearReservationCancellationReason() {
        $('#Code').val('');
        $('#Description').val('');

        searchReservationCancellationReason();
    }

    function deleteReservationCancellationReason(item, e, id) {

        swal({
            title: 'Are you sure you want to delete?',
            type: 'warning',
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    beforeSend: function (xhr) {
                        showLoader();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        ShowErrorMessage(jqXHR.status, errorThrown);
                    },
                    complete: function () {
                        hideLoader();
                    },
                    url: '@Url.Content("~/ReservationCancellationReason/Delete")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.IsSuccess == true) {

                            var tr = $('#tblReservationCancellationReason  tbody tr#' + id)
                            var row = grdReservationCancellationReason.row(tr);
                            var rowNode = row.node();
                            row.remove();
                            grdReservationCancellationReason.draw();

                            showToaster("Record deleted successfully", ToasterType.SUCCESS);
                        }
                        else {
                            showToaster(response.errorMessage, ToasterType.ERROR);
                        }
                    }
                });
            }
        });
    }

    function BindCheckBoxReservationCancellationReasonChangeEvent() {
        $(".chkReservationCancellationReasonItem").change(function () {
            if (this.checked) {
                AddReservationCancellationReasonIdIntoArray($(this).val());
            } else {
                RemoveReservationCancellationReasonIdFromArray($(this).val());
            }
        });
    }

    function AddReservationCancellationReasonIdIntoArray(id) {
        if (!IsNullOrEmpty(id)) {
            selectedReservationCancellationReasonIds.push(id);
        }
    }

    function RemoveReservationCancellationReasonIdFromArray(id) {
        if (!IsNullOrEmpty(id)) {
            selectedReservationCancellationReasonIds = RemoveArrayItemByValue(id, selectedReservationCancellationReasonIds);
        }
    }

    function ClearReservationCancellationReasonIdsArray() {
        selectedReservationCancellationReasonIds = [];
    }

    function deleteSelected() {

        if (selectedReservationCancellationReasonIds != null && selectedReservationCancellationReasonIds.length > 0) {
            swal({
                title: 'Are you sure you want to delete selected records?',
                type: 'warning',
                showCancelButton: true,
                showCloseButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        beforeSend: function (xhr) {
                            showLoader();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            ShowErrorMessage(jqXHR.status, errorThrown);
                        },
                        complete: function () {
                            hideLoader();
                        },
                        url: '@Url.Content("~/ReservationCancellationReason/DeleteSelected")',
                        type: 'POST',
                        data: { ids: selectedReservationCancellationReasonIds },
                        success: function (response) {
                            if (response.IsSuccess == true) {
                                ClearReservationCancellationReasonIdsArray();

                                searchReservationCancellationReason();

                                showToaster("Records deleted successfully", ToasterType.SUCCESS);
                            }
                            else {
                                showToaster(response.errorMessage, ToasterType.ERROR);
                            }
                        }
                    });
                }
            });
        } else {
            showToaster("Please select at least one checkbox to delete record.", ToasterType.ERROR);
        }
    }
</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}