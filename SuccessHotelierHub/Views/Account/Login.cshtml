@model SuccessHotelierHub.Models.LoginViewModel
@using SuccessHotelierHub.Models
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}
<div id="image-head" class="image-head grandParentContaniner">
    <div class="centering-hack parentContainer">
        <div class="login-box">
            <div class="login-logo">
                @*<a href="#"><b>Hotelier</b>Hub</a>*@
            </div>
            <!-- /.login-logo -->
            <div class="login-box-body">
                <p class="login-box-msg">Sign in</p>
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "frmLogin", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "Password", type = "password" })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="row">
                        <div class="col-xs-5">
                            <label class="container1" for="RememberMe">
                                Remember Me
                                @Html.CheckBoxFor(m => m.RememberMe)
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <!-- /.col -->
                        <div class="col-xs-7 text-right">
                            <button type="button" class="btn btn-primary btn-flat" id="btnLogin" onclick="Login();">Sign In</button>
                        </div>
                        <!-- /.col -->
                    </div>
                }
                @*<a href="@Url.Action("Register", "Account")" class="text-center">Register with Hotelier Hub</a>*@
            </div>
            <!-- /.login-box-body -->
        </div>
        <!-- /.login-box -->
    </div>
</div>

<script type="text/javascript">
    function validateLogin() {

        var errorMessage = "";
        var blnValid = true;


        if ($("#frmLogin").valid() == false) {
            showToaster("Please fill all the required field", ToasterType.ERROR);
            blnValid = false;
        }

        return blnValid;
    }


    function Login() {

        if (validateLogin()) {
            $.ajax({
                beforeSend: function (xhr) {
                    $('#btnLogin').html('<span>Processing <i class="fa fa-spinner fa-spin" aria-hidden="true"></i></span>');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ShowErrorMessage(jqXHR.status, errorThrown);
                },
                complete: function () {
                    $('#btnLogin').html('Login');
                },
                url: '@Url.Content("~/Account/Login")',
                type: 'POST',
                data: $('#frmLogin').serialize(),
                success: function (response) {
                    if (response.IsSuccess == false) {
                        showToaster(response.errorMessage, ToasterType.ERROR);
                    }
                    else {
                        //Load default dashboard menu.
                        setCurrentMenu('Dashboard', '@Url.Content("~/Home/Index")')
                    }
                }
            });
            return false;
        }
    }
</script>

<script type="text/javascript">
    @*const cats = [
         '@Url.Content("~/Content/img/banner_1.jpg")',
         '@Url.Content("~/Content/img/banner_2.jpg")',
         '@Url.Content("~/Content/img/banner_3.jpg")'
    ]

    const node = document.getElementById("image-head");

    const cycleImages = (images, container, step) => {
        images.forEach((image, index) => (
        setTimeout(() => {
            container.style.backgroundImage = `url(${image})`
        }, step * (index + 1))
      ))
        setTimeout(() => cycleImages(images, container, step), step * images.length)
    }

    cycleImages(cats, node, 5000)*@
</script>