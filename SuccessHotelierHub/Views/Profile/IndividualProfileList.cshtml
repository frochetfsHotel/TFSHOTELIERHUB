@model SuccessHotelierHub.Models.SearchIndividualProfileParametersVM
@{
    ViewBag.Title = "List Individual Profile";
}

@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "ReservationGrid";
}

<section class="content-header">
    <h1>
        Individual Profile <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Individual Profile</li>
        <li class="active">List</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search Individual Profile</h3>
            <div class="pull-right box-tools">
                <a href="@Url.Action("CreateIndividualProfile","Profile")"
                   class="btn btn-info btn-sm" style="color: #fff">New Profile</a>
            </div>
        </div>
        <form class="frmIndividualProfileList" enctype="multipart/form-data" method="post">
            <div class="box-body pb_10">
                <div class="pt_10 pl_10 pr_10 searchBox_Border">
                    <div class="row">
                        <div class="col-md-2 form-group">
                            @Html.LabelFor(m => m.LastName, new { @class = "normal-label" })
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
                        </div>
                        <div class="col-md-2 form-group">
                            @Html.LabelFor(m => m.FirstName, new { @class = "normal-label" })
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.TelephoneNo, new { @class = "normal-label" })
                            @Html.TextBoxFor(m => m.TelephoneNo, new { @class = "form-control", placeholder = "Telephone #" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "normal-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        </div>
                        <div class="col-md-2 form-group text-right m-t-md">
                            <button type="button" id="btnSearch" class="btn btn-success m-r-xs" 
                                    onclick="searchIndividualProfile()">
                                Search
                            </button>
                            <button type="button" id="btnClear" class="btn btn-danger" 
                                    onclick="clearIndividualProfile()">Clear</button>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                
                

                <div class="col-xs-12 padding-zero m-t">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblIndividualProfile">
                            <thead>
                                <tr>
                                    <th>CreatedOn</th>
                                    <th>Last Name</th>
                                    <th>First Name</th>
                                    <th>Telephone #</th>
                                    <th>Email</th>                                    
                                    <th width="35%">Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM()
                       {
                           TokenForEnableDisableButtons = PagerName,
                           PageChangeMethod = "IndividualProfileGridPageChange"
                       })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>


<script type="text/javascript">

    var currentPage = 1;
    var grdIndividualProfile;

    $(document).ready(function () {
        setTimeout(InitializeIndividualProfileGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });
    });


    function SearchIndividualProfileParameters(d) {
        var lastName = $('#LastName').val();
        var firstName = $('#FirstName').val();
        var telephoneNo = $('#TelephoneNo').val();
        var email = $('#Email').val();

        d.PageNum = currentPage;
        d.LastName = lastName;
        d.FirstName = firstName;
        d.TelephoneNo = telephoneNo;
        d.Email = email;
    }

    function IndividualProfileGridDataBound(response) {
        if (response.IsSuccess == true) {
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);
            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadIndividualProfileGrid() {
        grdIndividualProfile.ajax.url("@Url.Content("~/Profile/SearchIndividualProfile")").load();
    }

    function IndividualProfileGridPageChange(cPage) {
        currentPage = cPage;
        ReloadIndividualProfileGrid();
    }


    function InitializeIndividualProfileGrid() {
        grdIndividualProfile = $('#tblIndividualProfile').DataTable({
            serverSide: true,
            ajax: {
                beforeSend: function (xhr) {
                    showLoader();
                },
                error: function (result) {
                    showToaster(result.responseText, ToasterType.ERROR);
                },
                complete: function () {
                    hideLoader();
                },
                url: '@Url.Content("~/Profile/SearchIndividualProfile")',
                data: SearchIndividualProfileParameters,
                dataSrc: IndividualProfileGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "CreatedOn",
                orderable: true,
                "visible": false
            },            
            {
                targets: 1,
                data: "LastName",
                orderable: true,
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoIndividualProfileEdit(\'' + full.Id + '\')" '
                        + ' class="">' + full.LastName + '</a> ';

                }
            },
            {
                targets: 2,
                data: "FirstName",
                orderable: true,
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoIndividualProfileEdit(\'' + full.Id + '\')" '
                        + ' class="">' + full.FirstName + '</a> ';

                }
            },
            {
                targets: 3,
                data: "TelephoneNo",
                orderable: true,
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoIndividualProfileEdit(\'' + full.Id + '\')" '
                        + ' class="">' + full.TelephoneNo + '</a> ';

                }
            },
            {
                targets: 4,
                data: "Email",
                orderable: true,
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoIndividualProfileEdit(\'' + full.Id + '\')" '
                        + ' class="">' + full.Email + '</a> ';

                }
            },
            {
                targets: 5,
                data: "Id",
                orderable: false,
                className: "text-center",
                render: function (data, type, full, meta) {

                    var buttons = "";

                    //Edit
                    buttons += '<a href="javascript:void(0);" onclick="GotoIndividualProfileEdit(\'' + full.Id + '\')" '
                        + ' class="btn btn-success btn-xs m-r-xs">Edit</a> ';

                    //Delete
                    buttons += '<button type="button" class="btn btn-danger btn-xs m-r-xs"'
                        + ' onclick="deleteIndividualProfile(this,event,\'' + full.Id + '\')">Delete</button>';

                    //Create Reservation
                    buttons += '<a href="javascript:void(0);" onclick="GotoRateQuery(\'' + full.Id + '\')" '
                        + ' class="btn btn-warning btn-xs">New Reservation</a> '

                    return buttons;
                }
            }
            ],
            order: [[1, "asc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }

    function GotoIndividualProfileEdit(Id) {
        var url = '@Url.Content("~/Profile/EditIndividualProfile/")' + Id;
        redirectTo(url);
    }

    function GotoRateQuery(Id) {
        var url = '@Url.Content("~/Reservation/RateQuery")' + '?profileid=' + Id;
        redirectTo(url);
    }

    function searchIndividualProfile() {
        currentPage = 1;
        ReloadIndividualProfileGrid();
    }

    function clearIndividualProfile() {
        $('#LastName').val('');
        $('#FirstName').val('');
        $('#TelephoneNo').val('');
        $('#Email').val('');

        searchIndividualProfile();
    }

    function deleteIndividualProfile(item, e, id) {

        swal({
            title: 'Are you sure do you want to delete?',
            type: 'warning',
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    beforeSend: function (xhr) {
                        showLoader();
                    },
                    error: function (result) {
                        showToaster(result.responseText, ToasterType.ERROR);
                    },
                    complete: function () {
                        hideLoader();
                    },
                    url: '@Url.Content("~/Profile/DeleteIndividualProfile")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.IsSuccess == true) {

                            var tr = $('#tblIndividualProfile  tbody tr#' + id)
                            var row = grdIndividualProfile.row(tr);
                            var rowNode = row.node();
                            row.remove();
                            grdIndividualProfile.draw();

                            showToaster("Record deleted successfully", ToasterType.SUCCESS);
                        }
                        else {
                            showToaster(response.errorMessage, ToasterType.ERROR);
                        }
                    }
                });
            }
        });
    }
</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}