@model SuccessHotelierHub.Models.SearchCompanyParametersVM
@{
    ViewBag.Title = "Search Company";
}
@section styles{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/css/AdminLTE/dataTables.bootstrap.min.css" type="text/css" />
}

@{
    var PagerName = "CompanyGrid";
}

<section class="content-header">
    <h1>
        Company <small>List</small>
    </h1>
    <ol class="breadcrumb m-r-xs">
        <li><a href="javascript:void(0);" onclick="setCurrentMenu('Dashboard','@Url.Content("~/Home/Index")');"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="">Company</li>
        <li class="active">Search</li>
    </ol>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Search Company</h3>
            <div class="pull-right box-tools">
                <a href="@Url.Action("Create","Company")"
                   class="btn btn-info btn-sm" style="color: #fff">Add Company</a>
            </div>
        </div>
        <form class="frmCompanyList" enctype="multipart/form-data" method="post">
            <div class="box-body box-body-list">
                <div class="pt_10 pl_10 pr_10 searchBox_Border">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.CompanyName)
                            @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", placeholder = "Company Name" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.CompanyAddress)
                            @Html.TextAreaFor(m => m.CompanyAddress, new { @class = "form-control", placeholder = "Company Address", rows = "3" })
                        </div>
                        <div class="col-md-3 form-group mt_25">
                            <button type="button" id="btnSearch" class="btn btn-success m-r-xs" onclick="searchCompany()">Search</button>
                            <button type="button" id="btnClear" class="btn btn-danger" onclick="clearCompany()">Clear</button>
                        </div>
                    </div>
                </div>



                <div class="col-xs-12 padding-zero m-t-md">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tblCompany">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th class="width_20">Company Name</th>
                                    <th class="width_50">Company Address</th>
                                    <th class="width_5">Status</th>
                                    <th class="width_25">Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="text-left">
                        @Html.Partial("_Pagination", new SuccessHotelierHub.Models.PaginationVM() { TokenForEnableDisableButtons = PagerName, PageChangeMethod = "CompanyGridPageChange" })
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>


<script type="text/javascript">
    var currentPage = 1;
    var grdCompany;

    $(document).ready(function () {
        setTimeout(InitializeCompanyGrid, 200);

        $("input[type='text']").keyup(function (event) {
            if (event.keyCode === 13) {
                $("#btnSearch").click();
            }
        });
    });


    function SearchCompanyParameters(d) {
        var CompanyName = $('#CompanyName').val();
        var CompanyAddress = $('#CompanyAddress').val();

        d.PageNum = currentPage;
        d.CompanyName = CompanyName;
        d.CompanyAddress = CompanyAddress;
    }

    function CompanyGridDataBound(response) {
        AjaxRequestFinish();
        if (response.IsSuccess == true) {
            @("PagerDataBound" + PagerName)(response.CurrentPage, response.PageSize, response.TotalRecords);
            return response.data;
        }
        else {
            showToaster(response.ErrorMsg, ToasterType.ERROR);
        }
    }


    function ReloadCompanyGrid() {
        grdCompany.ajax.url("@Url.Content("~/Company/Search")").load();
    }

    function CompanyGridPageChange(cPage) {
        currentPage = cPage;
        ReloadCompanyGrid();
    }


    function InitializeCompanyGrid() {
        AjaxRequestStart();
        grdCompany = $('#tblCompany').DataTable({
            serverSide: true,
            ajax: {
                url: '@Url.Content("~/Company/Search")',
                data: SearchCompanyParameters,
                dataSrc: CompanyGridDataBound,
                type: "POST"
            },
            scrollCollapse: true,
            serverSide: true,
            processing: true,
            processing: "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'>",
            ordering: true,
            bDestroy: true,
            paging: false,
            searching: false,
            bLengthChange: false,
            info: false,
            columnDefs: [
            {
                targets: 0,
                data: "CreatedOn",
                orderable: true,
                "visible": false
            },
            {
                targets: 1,
                data: "CompanyName",
                orderable: true
            },
            {
                targets: 2,
                data: "CompanyAddress",
                orderable: true
            },
            {
                targets: 3,
                data: "IsActive",
                orderable: false,
                render: function (data, type, full, meta) {
                    var isActive = full.IsActive;
                    if (isActive == true) {
                        return "Active";
                    } else {
                        return "In Active";
                    }
                }
            },
            {
                targets: 4,
                data: "Id",
                orderable: false,
                className: "text-center",
                render: function (data, type, full, meta) {
                    return '<a href="javascript:void(0);" onclick="GotoCompanyEdit(\'' + full.Id + '\')" '
                        + ' class="btn btn-success btn-xs m-r-xs">Edit</a> '
                        + ' <button type="button" class="btn btn-danger btn-xs"'
                        + ' onclick="deleteCompany(this,event,\'' + full.Id + '\')">Delete</button>';
                }
            }
            ],
            order: [[2, "asc"]],
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('ID', aData.ID)
            }
        })
    }

    function GotoCompanyEdit(Id) {
        var url = '@Url.Content("~/Company/Edit/")' + Id;
        redirectTo(url);
    }

    function searchCompany() {
        currentPage = 1;
        ReloadCompanyGrid();
    }

    function clearCompany() {
        $('#CompanyName').val('');
        $('#CompanyAddress').val('');

        searchCompany();
    }

    function deleteCompany(item, e, id) {

        swal({
            title: 'Are you sure you want to delete?',
            type: 'warning',
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: '@Url.Content("~/Company/Delete")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.IsSuccess == true) {

                            var tr = $('#tblCompany  tbody tr#' + id)
                            var row = grdCompany.row(tr);
                            var rowNode = row.node();
                            row.remove();
                            grdCompany.draw();

                            showToaster("Record deleted successfully", ToasterType.SUCCESS);
                        }
                        else {
                            showToaster(response.errorMessage, ToasterType.ERROR);
                        }
                    }
                });
            }
        });


    }
</script>


@section scripts {
    <script src="~/Scripts/AdminLTE/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/AdminLTE/dataTables.bootstrap.min.js"></script>
}