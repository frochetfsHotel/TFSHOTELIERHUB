Name : Nilesh
Date : 03-JAN-2018

/************************************************************************************************************************ 
	SP Name : GetRateSheetDetail
	Comment : Added IsShowWeekEndPrice paramenter
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetRateSheetDetail]    Script Date: 1/3/2018 4:05:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRateSheetDetail] 
		@RateTypeId = '0853E143-6F2B-48CC-B322-4714142D9A00',
		@RoomTypeId = '488FE9ED-4AA6-45D9-88F6-67FE6D5886D6',
		@IsShowWeekEndPrice = 0
*/
ALTER PROCEDURE [dbo].[GetRateSheetDetail]
	@RateTypeId				UNIQUEIDENTIFIER,
	@RoomTypeId				UNIQUEIDENTIFIER,
	@IsShowWeekEndPrice		BIT = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Amount AS DECIMAL(10,2)
	SET @Amount = 0

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
		Id				UNIQUEIDENTIFIER	NULL,
		RoomTypeId		UNIQUEIDENTIFIER	NULL,
		RateTypeId		UNIQUEIDENTIFIER	NULL,
		Amount			DECIMAL(18,2)		NULL,
		[Description]	NVARCHAR(1000)		NULL
	) 

	IF ISNULL(@IsShowWeekEndPrice,0) = 0
	BEGIN
		--1.) Get amount from mapping table. (Show WeekDay Price)

		--IF EXISTS (SELECT * FROM [RoomTypeRateTypeMapping] RTRTM 
		--			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
		--					AND RTRTM.RateTypeId = @RateTypeId 
		--					AND RTRTM.RoomTypeId = @RoomTypeId)
		--BEGIN
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, RTRTM.[Description]
			FROM [RoomTypeRateTypeMapping] RTRTM 
			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
					AND RTRTM.RateTypeId = @RateTypeId 
					AND RTRTM.RoomTypeId = @RoomTypeId
			ORDER BY CreatedOn DESC
		--END
	END
	ELSE
	BEGIN
		--IF ISNULL((SELECT COUNT(*) FROM #tempRoomTypeRateTypeMapping),0) = 0 
		--BEGIN

			--2.) Show Amount from RateType table. (Show WeekEnd Price)
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 NULL, NULL, Id AS RateTypeId, ISNULL(Amount,0) AS Amount, [Description]
			FROM RateType
			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
					AND Id = @RateTypeId
			ORDER BY CreatedOn DESC

		--END
	END


	SELECT * FROM #tempRoomTypeRateTypeMapping
END


/************************************************************************************************************************ 
	SP Name : AddReservationRoomMapping
	Comment : Rename SP "AddReservationRoomMapping" to "AddUpdateReservationRoomMapping"
	
***********************************************************************************************************************/ 

EXEC sp_rename 'AddReservationRoomMapping','AddUpdateReservationRoomMapping'



/************************************************************************************************************************ 
	SP Name : AddUpdateReservationRoomMapping
	Comment : Added logic for update mapping.
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationRoomMapping]    Script Date: 1/3/2018 4:32:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationRoomMapping]
	@ReservationId		UNIQUEIDENTIFIER			,	
	@RoomId				UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT * FROM [ReservationRoomMapping] 
						WHERE ISNULL(IsDeleted,0) = 0 AND [ReservationId] = @ReservationId AND [RoomId] = @RoomId)
	BEGIN
		DECLARE @Id UNIQUEIDENTIFIER
		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationRoomMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[RoomId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@RoomId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationRoomMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [RoomId] = @RoomId
	END
			
	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : GetReservationRoomMapping
	Comment : Create SP.
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetReservationRoomMapping]    Script Date: 1/3/2018 4:35:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationRoomMapping] 		
		@ReservationId = NULL,
		@RoomId = NULL
*/
CREATE PROCEDURE [dbo].[GetReservationRoomMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL,
	@RoomId			UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT *,R.RoomNo AS RoomNo,R.[Description] AS RoomDescription,R.StatusId
			,ISNULL(RS.[Name],'') AS RoomStatusName,ISNULL(RS.[Code],'') AS RoomStatusCode
			,ISNULL(RS.[ColorCode],'') AS RoomStatusColorCode
	 FROM [dbo].[ReservationRoomMapping] RRM
			INNER JOIN [dbo].[Room] R ON R.Id = RRM.RoomId 
				AND ISNULL(R.IsDeleted,0) = 0
			LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = R.StatusId
				AND ISNULL(RS.IsDeleted,0) = 0
		WHERE	ISNULL(RRM.IsDeleted,0) = 0
				AND (@ReservationId IS NULL OR RRM.ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RRM.RoomId = @RoomId)
		ORDER BY RRM.CreatedOn

END


/*********************** Comment : Remove RoomId Column from Reservation Table ***************/

ALTER TABLE Reservation DROP COLUMN RoomId 
GO

	
/************************************************************************************************************************ 
	SP Name : AddReservation
	Comment : Remove RoomId Parameter from the SP : AddReservation
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 1/3/2018 6:15:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountReasonId]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountReasonId	
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    ,@ConfirmationNumber	
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END
	
	
/************************************************************************************************************************ 
	SP Name : UpdateReservation
	Comment : Remove RoomId Parameter from the SP : UpdateReservation
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 1/3/2018 6:16:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountReasonId]		=	@DiscountReasonId
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Name : Nilesh
Date : 04-JAN-2018

	
/************************************************************************************************************************ 
	SP Name : GetPreferenceGroupById
	Comment : Create SP : GetPreferenceGroupById
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetPreferenceGroupById]    Script Date: 1/4/2018 3:55:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPreferenceGroupById]	
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PreferenceGroup]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END

	
/************************************************************************************************************************ 
	SP Name : AddPreferenceGroup
	Comment : Create SP : AddPreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddPreferenceGroup]    Script Date: 1/4/2018 3:56:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddPreferenceGroup]	
	@Name				NVARCHAR(500),
	@Description		NVARCHAR(MAX),
	@IsActive			BIT,	
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].PreferenceGroup
           ([Id]		   
           ,[Name]
           ,[Description]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Description
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : UpdatePreferenceGroup
	Comment : Create SP : UpdatePreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[UpdatePreferenceGroup]    Script Date: 1/4/2018 3:58:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdatePreferenceGroup]
	@Id					UNIQUEIDENTIFIER,
	@Name				NVARCHAR(500),
	@Description		NVARCHAR(MAX),
	@IsActive			BIT,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[PreferenceGroup] 
		SET	[Name] = @Name
           ,[Description]	= @Description
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeletePreferenceGroup
	Comment : Create SP : DeletePreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeletePreferenceGroup]    Script Date: 1/4/2018 3:59:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeletePreferenceGroup]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[PreferenceGroup] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/************************************************************************************************************************ 
	SP Name : SearchPreferenceGroup
	Comment : Create SP : SearchPreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchPreferenceGroup]    Script Date: 1/4/2018 4:00:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPreferenceGroup] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchPreferenceGroup]		
	@Name			NVARCHAR(500)	=	NULL,
	@Description	NVARCHAR(MAX)	=	NULL,
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPreferenceGroup
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL
		,	[Name]					NVARCHAR(500)		NOT NULL		
		,   [Description]			NVARCHAR(MAX)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PreferenceGroup] PG
						WHERE	ISNULL(PG.IsDeleted,0) = 0
								AND (ISNULL(@Name,'') = '' OR PG.[Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR PG.[Description] LIKE '%'+ @Description +'%')	
						)


		INSERT INTO #tempPreferenceGroup ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN PG.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN PG.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN PG.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN PG.[Name] END DESC,

						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN PG.[Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN PG.[Description] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN PG.[Name] END ASC

				) AS RowNum,
				PG.[ID],
				PG.[Name],				
				PG.[Description],
				PG.[CreatedOn],
				PG.[IsActive]
			FROM [dbo].[PreferenceGroup] PG
			WHERE	ISNULL(PG.IsDeleted,0) = 0
					AND (ISNULL(@Name,'') = '' OR PG.[Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Description,'') = '' OR PG.[Description] LIKE '%'+ @Description +'%')		

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[Name],			
			temp.[Description],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPreferenceGroup AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Name : Nilesh
Date : 05-JAN-2018

/*********** Create Table : CheckInCheckOutDetail ***********/



/****** Object:  Table [dbo].[CheckInCheckOutDetail]    Script Date: 1/5/2018 3:23:20 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CheckInCheckOutDetail](
	[Id] [uniqueidentifier] NOT NULL,
	[ReservationId] [uniqueidentifier] NOT NULL,
	[ProfileId] [uniqueidentifier] NOT NULL,
	[CheckInDate] [datetime] NOT NULL,
	[CheckInTime] [time](7) NULL,
	[CheckOutDate] [datetime] NULL,
	[CheckOutTime] [time](7) NULL,
	[IsActive] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_CheckInCheckOutDetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[CheckInCheckOutDetail]  WITH CHECK ADD  CONSTRAINT [FK_CheckInCheckOutDetail_Reservation] FOREIGN KEY([ReservationId])
REFERENCES [dbo].[Reservation] ([Id])
GO

ALTER TABLE [dbo].[CheckInCheckOutDetail] CHECK CONSTRAINT [FK_CheckInCheckOutDetail_Reservation]
GO


/************* Add IsCheckIn and IsCheckOut Flag in Reservation Table **********************/

ALTER TABLE Reservation ADD IsCheckIn BIT NULL
GO

ALTER TABLE Reservation ADD IsCheckOut BIT NULL
GO


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Create SP : SearchArrivals
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/5/2018 3:11:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT				NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 0
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
					AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomNumbers]
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : AddCheckInDetail
	Comment : Create SP : AddCheckInDetail
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCheckInDetail]    Script Date: 1/5/2018 4:05:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCheckInDetail]	
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId		UNIQUEIDENTIFIER	=	NULL	,
	@CheckInDate	DATETIME						,
	@CheckInTime	TIME(7)				=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@CreatedBy		INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[CheckInCheckOutDetail]
           ([Id]
           ,[ReservationId]
           ,[ProfileId]
		   ,[CheckInDate]
		   ,[CheckInTime]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@ReservationId
			   ,@ProfileId
			   ,@CheckInDate
			   ,@CheckInTime
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : UpdateReservationCheckInFlag
	Comment : Create SP : UpdateReservationCheckInFlag
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCheckInFlag]    Script Date: 1/5/2018 4:48:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationCheckInFlag]
	@Id				UNIQUEIDENTIFIER	,
	@IsCheckIn		BIT					,
	@UpdatedBy		INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Reservation] 
		SET	[IsCheckIn] = @IsCheckIn           
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateRoomOccupiedFlag
	Comment : Create SP : UpdateRoomOccupiedFlag
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomOccupiedFlag]    Script Date: 1/5/2018 4:48:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomOccupiedFlag]
	@Id				UNIQUEIDENTIFIER	,
	@IsOccupied		BIT					,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[IsOccupied]	= @IsOccupied           
		   ,[UpdatedBy]		= @UpdatedBy		   
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Added IsOccupied flag condition & Added paramenter IsShowCheckedInReservation.
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 1/5/2018 7:57:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	0,
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)	
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)							
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)														

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Name : Nilesh
Date : 08-JAN-2018

/*********************	 Create Table AdditionalCharges **************/


/****** Object:  Table [dbo].[AdditionalCharges]    Script Date: 1/8/2018 1:13:48 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[AdditionalCharges](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](25) NOT NULL,
	[Description] [nvarchar](1000) NOT NULL,
	[Price] [decimal](18, 2) NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_AdditionalCharges] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddAdditionalCharges
	Comment : Create SP : AddAdditionalCharges
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddAdditionalCharges]    Script Date: 1/8/2018 1:17:04 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddAdditionalCharges]	
	@Code				NVARCHAR(25),
	@Description		NVARCHAR(1000),
	@Price				DECIMAL(18,2),
	@IsActive			BIT,	
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[AdditionalCharges]
           ([Id]		   
           ,[Code]
           ,[Description]
		   ,[Price]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Code
			   ,@Description
			   ,@Price
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : UpdateAdditionalCharges
	Comment : Create SP : UpdateAdditionalCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateAdditionalCharges]    Script Date: 1/8/2018 1:19:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateAdditionalCharges]
	@Id					UNIQUEIDENTIFIER,
	@Code				NVARCHAR(25),
	@Description		NVARCHAR(1000),
	@Price				DECIMAL(18,2),
	@IsActive			BIT,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[AdditionalCharges] 
		SET	[Code]			=	@Code
           ,[Description]	=	@Description
		   ,[Price]			=	@Price
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteAdditionalCharges
	Comment : Create SP : DeleteAdditionalCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAdditionalCharges]    Script Date: 1/8/2018 1:20:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteAdditionalCharges]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[AdditionalCharges] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetAdditionalChargesById
	Comment : Create SP : GetAdditionalChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesById]    Script Date: 1/8/2018 1:21:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAdditionalChargesById]
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Description]
END


/*******************************************************************************************************************
	SP Name : GetAdditionalCharges
	Comment : Create SP : GetAdditionalCharges
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetAdditionalCharges]    Script Date: 1/8/2018 1:22:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAdditionalCharges]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Description]
END



/*******************************************************************************************************************
	SP Name : SearchAdditionalCharges
	Comment : Create SP : SearchAdditionalCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdditionalCharges]    Script Date: 1/8/2018 1:22:59 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdditionalCharges] '', '', 0, 1, 10
*/

CREATE PROCEDURE [dbo].[SearchAdditionalCharges]		
	@Code			NVARCHAR(25)	=	NULL,
	@Description	NVARCHAR(1000)	=	NULL,
	@Price			DECIMAL(10,2)	=	NULL,
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempAdditionalCharges
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]					NVARCHAR(25)		NULL
		,   [Description]			NVARCHAR(1000)		NOT NULL
		,	[Price]					DECIMAL(18,2)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[AdditionalCharges] AC							
						WHERE	ISNULL(AC.IsDeleted,0) = 0
								AND (ISNULL(@Code,'') = '' OR AC.Code LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Description,'') = '' OR AC.[Description] LIKE '%'+ @Description +'%')	
								AND (ISNULL(@Price,0) = 0 OR AC.Price = @Price)  
						)


		INSERT INTO #tempAdditionalCharges ([RowNum], [Id], [Code], [Description], [Price], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN AC.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN AC.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN AC.[Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN AC.[Code] END DESC,

						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN AC.[Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN AC.[Description] END DESC,

						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'asc'
							THEN AC.[Price] END ASC,
						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'desc'
							THEN AC.[Price] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN AC.[Description] END ASC

				) AS RowNum,
				AC.[ID],				
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn],
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC							
			WHERE	ISNULL(AC.IsDeleted,0) = 0
					AND (ISNULL(@Code,'') = '' OR AC.Code LIKE '%'+ @Code +'%')  
					AND (ISNULL(@Description,'') = '' OR AC.[Description] LIKE '%'+ @Description +'%')	
					AND (ISNULL(@Price,0) = 0 OR AC.Price = @Price) 	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],
			temp.[Description],
			temp.[Price],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempAdditionalCharges AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : CheckAdditionalChargeCodeAvailable
	Comment : Create SP : CheckAdditionalChargeCodeAvailable
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[CheckAdditionalChargeCodeAvailable]    Script Date: 1/8/2018 4:01:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckAdditionalChargeCodeAvailable] 
		@Id = NULL,
		@Code = 'COMP'
*/

CREATE PROCEDURE [dbo].[CheckAdditionalChargeCodeAvailable]
	@Id		UNIQUEIDENTIFIER	=	NULL,
	@Code	NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[AdditionalCharges] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY Code 
END



/*******************************************************************************************************************
	SP Name : GetAdditionalChargesByCode
	Comment : Create SP : GetAdditionalChargesByCode
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesByCode]    Script Date: 1/8/2018 1:21:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAdditionalChargesByCode]
	@Code NVARCHAR(25) NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Code = @Code
		ORDER BY [Description]
END


/********************** Create New Table : ReservationCharges ***************************/


/****** Object:  Table [dbo].[ReservationCharges]    Script Date: 1/8/2018 5:33:58 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationCharges](
	[Id] [uniqueidentifier] NOT NULL,
	[ReservationId] [uniqueidentifier] NULL,
	[AdditionalChargeId] [uniqueidentifier] NULL,	
	[TransactionDate] [datetime] NULL,
	[Amount] [decimal](18, 2) NULL,
	[Qty] [int] NULL,
	[Supplement] [nvarchar](255) NULL,
	[Reference] [nvarchar](500) NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_ReservationCharges] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[ReservationCharges]  WITH CHECK ADD  CONSTRAINT [FK_ReservationCharges_AdditionalCharges] FOREIGN KEY([AdditionalChargeId])
REFERENCES [dbo].[AdditionalCharges] ([Id])
GO

ALTER TABLE [dbo].[ReservationCharges] CHECK CONSTRAINT [FK_ReservationCharges_AdditionalCharges]
GO

ALTER TABLE [dbo].[ReservationCharges]  WITH CHECK ADD  CONSTRAINT [FK_ReservationCharges_Reservation] FOREIGN KEY([ReservationId])
REFERENCES [dbo].[Reservation] ([Id])
GO

ALTER TABLE [dbo].[ReservationCharges] CHECK CONSTRAINT [FK_ReservationCharges_Reservation]
GO


/*******************************************************************************************************************
	SP Name : AddReservationCharges
	Comment : Create SP : AddReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationCharges]    Script Date: 1/8/2018 5:35:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationCharges]
           ([Id]		   
           ,[ReservationId]
           ,[AdditionalChargeId]
		   ,[TransactionDate]
		   ,[Amount]
		   ,[Qty]
		   ,[Supplement]
		   ,[Reference]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@AdditionalChargeId
			   ,@TransactionDate
			   ,@Amount
			   ,@Qty
			   ,@Supplement
			   ,@Reference
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : UpdateReservationCharges
	Comment : Create SP : UpdateReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCharges]    Script Date: 1/8/2018 5:40:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationCharges]
	@Id						UNIQUEIDENTIFIER				,
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[ReservationId]			=	@ReservationId
           ,[AdditionalChargeId]	=	@AdditionalChargeId
		   ,[TransactionDate]		=	@TransactionDate
		   ,[Amount]				=	@Amount
		   ,[Qty]					=	@Qty
		   ,[Supplement]			=	@Supplement
		   ,[Reference]				=	@Reference
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationCharges
	Comment : Create SP : DeleteReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationCharges]    Script Date: 1/8/2018 5:44:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationCharges]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment : Create SP : GetReservationChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 1/8/2018 5:45:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationChargesById]
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY CreatedOn
END

/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment : Create SP : GetReservationCharges
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 1/8/2018 5:45:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR AdditionalChargeId = @AdditionalChargeId)
		ORDER BY CreatedOn
END



/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Create SP : SearchGuest
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/8/2018 6:26:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	NULL,
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

CREATE PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]			
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,
							
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,
							
						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[Rate] AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,NULL AS ReservationStatusId
				,'' AS ReservationStatusName
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED
END



/************************************************************************************************************************************/

Name : Nilesh
Date : 09-JAN-2018


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Changes in SearchArrivals SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/9/2018 11:03:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT				NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 0
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
					AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/******************** Add TotalPrice & TotalBalance Amount in Reservation Table.  *************/

ALTER TABLE Reservation Add TotalPrice DECIMAL(18,2) NULL
GO

ALTER TABLE Reservation Add TotalBalance DECIMAL(18,2) NULL
GO

/*******************************************************************************************************************
	SP Name : AddReservation
	Comment : Added two new parameter TotalPrice & TotalBalance AddReservation SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 1/9/2018 12:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountReasonId]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]
		   ,[TotalBalance]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountReasonId	
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice
				, @TotalBalance
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END



/*******************************************************************************************************************
	SP Name : UpdateReservation
	Comment : Added two new parameter TotalPrice & TotalBalance UpdateReservation SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 1/9/2018 12:06:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountReasonId]		=	@DiscountReasonId
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice
		,[TotalBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END


/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Changes in SearchGuest SP.
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/9/2018 12:13:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'7',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]			
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,NULL AS ReservationStatusId
				,'' AS ReservationStatusName
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment : Changes in GetReservationCharges SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 1/9/2018 12:38:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
		ORDER BY RC.CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment : Changes in GetReservationChargesById SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 1/9/2018 12:40:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationChargesById]
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
		FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (RC.Id = @Id)							
		ORDER BY RC.CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceAdditionalCharge
	Comment : Create SearchAdvanceAdditionalCharge SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceAdditionalCharge]    Script Date: 1/9/2018 3:29:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceAdditionalCharge]
			@Code	= ''			
*/

CREATE PROCEDURE [dbo].[SearchAdvanceAdditionalCharge]
	@Code		NVARCHAR(50)	=	NULL
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  AC.[Code] ASC

				) AS RowNum,
				AC.[Id], 
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn], 
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC					
				WHERE	ISNULL(IsActive,0)  = 1 AND ISNULL(AC.IsDeleted,0) = 0
						AND (
								ISNULL(@Code,'') = '' OR 
								(AC.[Code] LIKE '%'+ @Code +'%' 
									OR AC.[Description] LIKE '%'+ @Code +'%')
							)
						


END


/******************** Add Code & Description column in ReservationCharges Table ************/

ALTER TABLE ReservationCharges ADD [Code] [nvarchar](25) NULL
GO

ALTER TABLE ReservationCharges ADD [Description] [nvarchar](1000) NULL
GO




/*******************************************************************************************************************
	SP Name : AddReservationCharges
	Comment : Added Code & Description Parameter in AddReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationCharges]    Script Date: 1/8/2018 5:35:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@Code					NVARCHAR(25)		=	NULL	,
	@Description			NVARCHAR(1000)		=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationCharges]
           ([Id]		   
           ,[ReservationId]
           ,[AdditionalChargeId]
		   ,[Code]
		   ,[Description]
		   ,[TransactionDate]
		   ,[Amount]
		   ,[Qty]
		   ,[Supplement]
		   ,[Reference]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@AdditionalChargeId
			   ,@Code
			   ,@Description
			   ,@TransactionDate
			   ,@Amount
			   ,@Qty
			   ,@Supplement
			   ,@Reference
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : UpdateReservationCharges
	Comment : Added Code & Description Parameters in  UpdateReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCharges]    Script Date: 1/8/2018 5:40:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTEr PROCEDURE [dbo].[UpdateReservationCharges]
	@Id						UNIQUEIDENTIFIER				,
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@Code					NVARCHAR(25)		=	NULL	,
	@Description			NVARCHAR(1000)		=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[ReservationId]			=	@ReservationId
           ,[AdditionalChargeId]	=	@AdditionalChargeId
		   ,[Code]					=	@Code
		   ,[Description]			=	@Description
		   ,[TransactionDate]		=	@TransactionDate
		   ,[Amount]				=	@Amount
		   ,[Qty]					=	@Qty
		   ,[Supplement]			=	@Supplement
		   ,[Reference]				=	@Reference
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : UpdateReservationTotalBalance
	Comment : Create SP :  UpdateReservationTotalBalance
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationTotalBalance]    Script Date: 1/9/2018 4:50:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationTotalBalance]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,	
	@TotalBalance			DECIMAL(18,2)		=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET
		[TotalBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				

END

/*** Add required data in AdditionalCharges table *****/

INSERT INTO [dbo].[AdditionalCharges] ([Id],[Code],[Description], [Price], [CreatedBy], [CreatedOn], [IsActive]) 
	VALUES (NEWID(), '1000' ,'Room Rent', 0, 1, GETDATE(), 1)
INSERT INTO [dbo].[AdditionalCharges] ([Id],[Code],[Description], [Price], [CreatedBy], [CreatedOn], [IsActive]) 
	VALUES (NEWID(), '9004' ,'Check Out', 0, 1, GETDATE(), 1)
	

/*** Added Check Out Reference Column in CheckInCheckOutDetail Table ******/

ALTER TABLE CheckInCheckOutDetail Add CheckOutReference NVARCHAR(1000) NULL
GO
	
	
/*******************************************************************************************************************
	SP Name : GetCheckInDetails
	Comment : Create SP :  GetCheckInDetails
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCheckInDetails]    Script Date: 1/9/2018 5:37:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetCheckInDetails]
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId		UNIQUEIDENTIFIER	=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CheckInCheckOutDetail]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId
				AND ProfileId = @ProfileId
		ORDER BY CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : UpdateCheckOutDetail
	Comment : Create SP :  UpdateCheckOutDetail
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCheckOutDetail]    Script Date: 1/9/2018 5:27:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCheckOutDetail]	
	@Id					UNIQUEIDENTIFIER				,
	@ReservationId		UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId			UNIQUEIDENTIFIER	=	NULL	,
	@CheckOutDate		DATETIME						,
	@CheckOutTime		TIME(7)				=	NULL	,
	@CheckOutReference	NVARCHAR(1000)		=	NULL	,
	@IsActive			BIT					=	NULL	,	
	@UpdatedBy			INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;


	UPDATE [dbo].[CheckInCheckOutDetail]
           SET		CheckOutDate		=	@CheckOutDate
				,	CheckOutTime		=	@CheckOutTime
				,	CheckOutReference	=	@CheckOutReference
				,	UpdatedBy			=	@UpdatedBy
				,	UpdatedOn			=	GETDATE()
		   WHERE	ISNULL(IsDeleted,0) = 0
					AND Id = @Id


		SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : UpdateReservationCheckOutFlag
	Comment : Create SP : UpdateReservationCheckOutFlag
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCheckOutFlag]    Script Date: 1/5/2018 4:48:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationCheckOutFlag]
	@Id				UNIQUEIDENTIFIER	,
	@IsCheckOut		BIT					,
	@UpdatedBy		INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Reservation] 
		SET	[IsCheckOut] = @IsCheckOut           
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment : Changes in SP SearchReservation
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 1/9/2018 7:17:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	0,
		@IsShowCheckedOutReservation	=	0,
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)	
								AND (
										@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,0)
									)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)							
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)	
								AND (
										@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,0)
									)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)														

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/**++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++**/

Name : Nilesh
Date : 10-JAN-2018

/*******************************************************************************************************************
	SP Name : SearchAdvanceAdditionalCharge
	Comment : Changes in SP SearchAdvanceAdditionalCharge
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceAdditionalCharge]    Script Date: 1/10/2018 11:33:49 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceAdditionalCharge]
			@Code	= ''			
*/
ALTER PROCEDURE [dbo].[SearchAdvanceAdditionalCharge]
	@Code		NVARCHAR(50)	=	NULL
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  AC.[Code] ASC

				) AS RowNum,
				AC.[Id], 
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn], 
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC					
				WHERE	ISNULL(IsActive,0)  = 1 AND ISNULL(AC.IsDeleted,0) = 0
						AND (
								ISNULL(@Code,'') = '' OR 
								(AC.[Code] LIKE '%'+ @Code +'%' 
									OR AC.[Description] LIKE '%'+ @Code +'%')
							)

						--Avoid Room Rent and CheckOut
						AND ISNULL(AC.[Code],'') NOT IN ('1000','9004')
						


END


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Added RoomNumber, IsShowCheckIn search paramenter in SP SearchArrivals
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/10/2018 11:46:25 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=1, 
		@RoomNumber						=	'',
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0								
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0					
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Added DepartureDate, IsShowCheckedOut search paramenter in SP SearchGuest
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/10/2018 1:00:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=1,
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
								AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,NULL AS ReservationStatusId
				,'' AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
					AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END

/**** DROP City Table *****/

DROP TABLE [dbo].[City]
GO


/**** DROP State Table *****/

DROP TABLE [dbo].[State]
GO

/*** Drop FK_Reservation_Country Constraint  ***/

ALTER TABLE [dbo].[Reservation] DROP CONSTRAINT [FK_Reservation_Country]
GO


/**** DROP Country Table *****/

DROP TABLE [dbo].[Country]
GO


/*** Create Country Table ***/


/****** Object:  Table [dbo].[Country]    Script Date: 1/10/2018 4:17:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Country](
	[Id] [int]  NOT NULL,
	[Code] [nvarchar](10) NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_Country] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/**** Create State Table ****/


/****** Object:  Table [dbo].[State]    Script Date: 1/10/2018 4:17:35 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[State](
	[Id] [int] NOT NULL,
	[CountryId] [int] NOT NULL,
	[Code] [nvarchar](10) NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_State] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[State]  WITH CHECK ADD  CONSTRAINT [FK_State_Country] FOREIGN KEY([CountryId])
REFERENCES [dbo].[Country] ([Id])
GO

ALTER TABLE [dbo].[State] CHECK CONSTRAINT [FK_State_Country]
GO


/****  Create City Table ****/


/****** Object:  Table [dbo].[City]    Script Date: 1/10/2018 4:17:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[City](
	[Id] [int] NOT NULL,
	[StateId] [int] NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_City] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[City]  WITH CHECK ADD  CONSTRAINT [FK_City_State] FOREIGN KEY([StateId])
REFERENCES [dbo].[State] ([Id])
GO

ALTER TABLE [dbo].[City] CHECK CONSTRAINT [FK_City_State]
GO



/*******************************************************************************************************************
	SP Name : AddCountry
	Comment : Create SP AddCountry
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCountry]    Script Date: 1/10/2018 5:10:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCountry]
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM Country)

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[Country]
           ([Id]
           ,[Code]
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@Code
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateCountry
	Comment : Create SP UpdateCountry
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCountry]    Script Date: 1/10/2018 5:10:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCountry]
	@Id				INT						,
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Country]
		SET [Code]	=	@Code
           ,[Name]	=	@Name		   
		   ,[UpdatedBy]	=	@UpdatedBy
		   ,[UpdatedOn]	=	GETDATE()
		   ,[IsActive]	=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteCountry
	Comment : Create SP DeleteCountry
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteCountry]    Script Date: 1/10/2018 5:29:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteCountry]
	@Id			INT,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Country] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : GetCountryById
	Comment : Create SP GetCountryById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCountryById]    Script Date: 1/10/2018 5:31:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].GetCountryById
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Country]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END

/*******************************************************************************************************************
	SP Name : SearchCountry
	Comment : Create SP SearchCountry
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchCountry]    Script Date: 1/10/2018 5:32:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCountry] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchCountry]		
	@Code			NVARCHAR(20)	=	NULL	,
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempCountry
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,   [Code]			NVARCHAR(20)		NOT NULL
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Country]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempCountry ([RowNum], [Id], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],
				[Code],
				[Name],
				[CreatedOn],
				[IsActive]
			FROM [dbo].[Country]
				WHERE	ISNULL(IsDeleted,0) = 0
						AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
						AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[Code],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempCountry AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/***++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++***/

Name : Nilesh
Date : 11-JAN-2018


/*******************************************************************************************************************
	SP Name : AddState
	Comment : Create SP AddState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddState]    Script Date: 1/10/2018 7:49:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddState]
	@CountryId		INT						,
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM [dbo].[State])

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[State]
           ([Id]
		   ,[CountryId]
           ,[Code]
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@CountryId
			   ,@Code
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateState
	Comment : Create SP UpdateState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateState]    Script Date: 1/10/2018 7:51:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateState]
	@Id				INT						,
	@CountryId		INT						,
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[State]
		SET	[CountryId]		=	@CountryId 
		   ,[Code]			=	@Code
           ,[Name]			=	@Name		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteState
	Comment : Create SP DeleteState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteState]    Script Date: 1/10/2018 8:02:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteState]
	@Id			INT,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[State] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetStateById
	Comment : Create SP GetStateById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetStateById]    Script Date: 1/10/2018 7:52:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetStateById]
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[State]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchState
	Comment : Create SP SearchState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchState]    Script Date: 1/10/2018 7:53:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchState] NULL, '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchState]		
	@CountryId		INT				=	NULL	,
	@Code			NVARCHAR(20)	=	NULL	,
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempState
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,	[CountryId]		INT					NULL
		,   [CountryName]	NVARCHAR(255)		NULL
		,   [Code]			NVARCHAR(20)		NOT NULL
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[State]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@CountryId,0) = 0 OR [CountryId] = @CountryId)
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempState ([RowNum], [Id], [CountryId], [CountryName], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN S.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN S.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN S.[Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN S.[Code] END DESC,

						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN S.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN S.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN S.[Name] END ASC

				) AS RowNum,
				S.[ID],
				S.[CountryId],
				C.[Name] AS CountryName,
				S.[Code],
				S.[Name],
				S.[CreatedOn],
				S.[IsActive]
			FROM [dbo].[State] S
					INNER JOIN [dbo].[Country] C ON S.CountryId = C.Id
					AND ISNULL(C.IsDeleted,0) = 0
				WHERE	ISNULL(S.IsDeleted,0) = 0
						AND (ISNULL(@CountryId,0) = 0 OR S.[CountryId] = @CountryId)
						AND (ISNULL(@Code,'') = '' OR S.[Code] LIKE '%'+ @Code +'%')  
						AND (ISNULL(@Name,'') = '' OR S.[Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[CountryId],
			temp.[CountryName],
			temp.[Code],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempState AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : AddCity
	Comment : Create SP AddCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCity]    Script Date: 1/10/2018 8:06:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCity]
	@StateId		INT						,	
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM [dbo].[City])

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[City]
           ([Id]
		   ,[StateId]           
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@StateId			   
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateCity
	Comment : Create SP UpdateCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCity]    Script Date: 1/10/2018 8:08:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCity]
	@Id				INT						,
	@StateId		INT						,	
	@Name			NVARCHAR(255)			,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[City]
		SET	[StateId]		=	@StateId 		   
           ,[Name]			=	@Name		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteCity
	Comment : Create SP DeleteCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteCity]    Script Date: 1/10/2018 8:09:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteCity]
	@Id			INT,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[City] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetCityById
	Comment : Create SP GetCityById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCityById]    Script Date: 1/10/2018 8:10:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetCityById]
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

     SELECT CI.*,S.Id AS StateId,C.Id AS CountryId FROM [dbo].[City] CI
				LEFT JOIN [dbo].[State] S ON S.Id = CI.StateId
					AND ISNULL(S.IsDeleted,0) = 0
				LEFT JOIN [dbo].[Country] C ON C.Id = S.CountryId
					AND ISNULL(C.IsDeleted,0) = 0
		WHERE	ISNULL(CI.IsDeleted,0) = 0 
				AND CI.Id = @Id
		ORDER BY CI.[Name]
END


/*******************************************************************************************************************
	SP Name : SearchCity
	Comment : Create SP SearchCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchCity]    Script Date: 1/10/2018 8:10:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCity] 0, 0, '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchCity]		
	@CountryId		INT				=	NULL	,
	@StateId		INT				=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempCity
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,	[CountryId]		INT					NULL
		,   [CountryName]	NVARCHAR(255)		NULL
		,	[StateId]		INT					NULL
		,   [StateName]	NVARCHAR(255)		NULL		
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT CI.Id) 
						FROM [dbo].[City] CI
								INNER JOIN [dbo].[State] S ON CI.StateId = S.Id
								AND ISNULL(S.IsDeleted,0) = 0
						WHERE	ISNULL(CI.IsDeleted,0) = 0
								AND (ISNULL(@CountryId,0) = 0 OR S.[CountryId] = @CountryId)
								AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
								AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempCity 
		(
			[RowNum], 
			[Id], 
			[CountryId], 
			[CountryName], 
			[StateId], 
			[StateName],
			[Name], 
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN CI.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN CI.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'asc'
							THEN S.[Name] END ASC,
						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'desc'
							THEN S.[Name] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN CI.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN CI.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN CI.[Name] END ASC

				) AS RowNum,
				CI.[ID],
				S.[CountryId],
				C.[Name] AS CountryName,
				CI.[StateId],
				S.[Name] AS StateName,				
				CI.[Name],
				CI.[CreatedOn],
				CI.[IsActive]
			FROM [dbo].[City] CI
					INNER JOIN [dbo].[State] S ON CI.StateId = S.Id
					AND ISNULL(S.IsDeleted,0) = 0
					INNER JOIN [dbo].[Country] C ON S.CountryId = C.Id
					AND ISNULL(C.IsDeleted,0) = 0
			WHERE	ISNULL(CI.IsDeleted,0) = 0
					AND (ISNULL(@CountryId,0) = 0 OR S.[CountryId] = @CountryId)
					AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
					AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[CountryId],
			temp.[CountryName],
			temp.[StateId],
			temp.[StateName],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempCity AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/******************************************************************************************************************************/

Name : Nilesh
Date : 12-JAN-2018

/*******************************************************************************************************************
	SP Name : GetCountries
	Comment : Changes in  GetCountries
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCountries]    Script Date: 1/11/2018 12:06:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetCountries]
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT * FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetStates
	Comment : Changes in  GetStates
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetStates]    Script Date: 1/11/2018 12:07:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetStates]
	@CountryId INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[State]	
		 WHERE	[CountryId] = @CountryId
				AND ISNULL(IsDeleted,0) = 0
				AND ISNULL(IsActive,0) = 1
		 ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetCities
	Comment : Changes in  GetCities
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCities]    Script Date: 1/11/2018 12:08:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetCities]
	@StateId INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[City]	
		 WHERE	[StateId] = @StateId
				AND ISNULL(IsDeleted,0) = 0
				AND ISNULL(IsActive,0) = 1
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : AddNationality
	Comment : Create SP AddNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddNationality]    Script Date: 1/11/2018 12:26:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddNationality]	
	@Name			NVARCHAR(255)			,	
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Nationality]
           ([Id]           
           ,[Name]		   
		   ,[Description]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Description
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateNationality
	Comment : Create SP UpdateNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateNationality]    Script Date: 1/11/2018 12:28:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateNationality]
	@Id				UNIQUEIDENTIFIER		,
	@Name			NVARCHAR(255)			,	
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Nationality]
		SET	[Name]			=	@Name		   
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteNationality
	Comment : Create SP DeleteNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteNationality]    Script Date: 1/11/2018 12:32:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteNationality]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Nationality] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetNationalityById
	Comment : Create SP GetNationalityById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetNationalityById]    Script Date: 1/11/2018 1:20:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetNationalityById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Nationality]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchNationality
	Comment : Create SP SearchNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchNationality]    Script Date: 1/11/2018 1:21:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchNationality] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchNationality]			
	@Name			NVARCHAR(255)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempNationality
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,   [Description]	NVARCHAR(MAX)		NULL	
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Nationality]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  
						)


		INSERT INTO #tempNationality ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN [Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN [Description] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],				
				[Name],
				[Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Nationality]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Name],			
			temp.[Description],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempNationality AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchAdvanceProfile
	Comment : Changes in SP SearchAdvanceProfile
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceProfile]    Script Date: 1/11/2018 1:08:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceProfile]
			@LastName			=	'' ,
			@FirstName			=	'' ,
			@ViewBy				=	NULL ,
			@City				=	'' ,
			@PostalCode			=	'' ,
			@MemberTypeId		=	NULL ,
			@MemberNo			=	'' ,
			@Keyword			=	'' ,
			@Communication		=	'' ,
			@ClientID			=	'' ,
			@CorpNo				=	'' ,
			@IATANo				=	'' ,
			@IsNegRates			=	0 ,
			@IsShowInActive		=	0
*/
ALTER PROCEDURE [dbo].[SearchAdvanceProfile]
	@LastName			NVARCHAR(255)		=	NULL,
	@FirstName			NVARCHAR(255)		=	NULL,
	@ViewBy				UNIQUEIDENTIFIER	=	NULL,
	@City				NVARCHAR(255)		=	NULL,
	@PostalCode			NVARCHAR(255)		=	NULL,
	@MemberTypeId		UNIQUEIDENTIFIER	=	NULL,
	@MemberNo			NVARCHAR(255)		=	NULL,
	@Keyword			NVARCHAR(255)		=	NULL,
	@Communication		NVARCHAR(255)		=	NULL,
	@ClientID			NVARCHAR(255)		=	NULL,
	@IATANo				NVARCHAR(255)		=	NULL,
	@CorpNo				NVARCHAR(255)		=	NULL,
	@IsNegRates			BIT					=	NULL,
	@IsShowInActive		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  P.[CreatedOn] DESC

				) AS RowNum,
				P.[Id], 
				T.Id AS TitleId,
				ISNULL(T.[Title],'') AS Title, 
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				ISNULL(P.[CountryId],0) AS CountryId,
				ISNULL(P.[StateId],0) AS StateId,
				ISNULL(P.[CityId],0) AS CityId,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@City,'') = '' OR C.[Name] LIKE '%'+ @City +'%')  
						AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')  
						AND (@IsShowInActive IS NULL OR 
								P.IsActive IN  (CASE WHEN @IsShowInActive = 0 THEN 1 ELSE P.IsActive END))


END

/**+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++***/

Name : Nilesh
Date : 15-JAN-2018


/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment : Create SP GetRoomDetailsForRoomPlan
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 1/11/2018 1:08:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@RoomNo				=	'' 
*/
CREATE PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomStatus] RS ON R.StatusId = RS.Id AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END



/*******************************************************************************************************************
	SP Name : UpdateRoomCheckInStatus
	Comment : Create SP UpdateRoomCheckInStatus
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomCheckInStatus]    Script Date: 1/15/2018 3:17:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomCheckInStatus]
	@Id				UNIQUEIDENTIFIER	,
	@StatusId		UNIQUEIDENTIFIER	,
	@IsOccupied		BIT					,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[IsOccupied]	=	@IsOccupied   
		   ,[StatusId]		=	@StatusId        
		   ,[UpdatedBy]		=	@UpdatedBy			   	   
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateRoomCheckOutStatus
	Comment : Create SP UpdateRoomCheckOutStatus
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomCheckOutStatus]    Script Date: 1/15/2018 3:17:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomCheckOutStatus]
	@Id				UNIQUEIDENTIFIER	,
	@StatusId		UNIQUEIDENTIFIER	,
	@IsOccupied		BIT					,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[IsOccupied]	=	@IsOccupied   
		   ,[StatusId]		=	@StatusId        
		   ,[UpdatedBy]		=	@UpdatedBy			   	   
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END

/********* Create  Table ReservationLog ************/

/****** Object:  Table [dbo].[ReservationLog]    Script Date: 1/5/2018 3:23:20 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationLog](
	[Id] [uniqueidentifier] NOT NULL,
	[ReservationId] [uniqueidentifier] NOT NULL,
	[ProfileId] [uniqueidentifier] NOT NULL,
	[RoomId] [uniqueidentifier] NOT NULL,
	[RoomStatusId] [uniqueidentifier] NOT NULL,
	[CheckInDate] [datetime] NOT NULL,
	[CheckInTime] [time](7) NULL,
	[CheckOutDate] [datetime] NULL,
	[CheckOutTime] [time](7) NULL,
	[IsActive] [bit] NULL,	
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationLog] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[ReservationLog]  WITH CHECK ADD  CONSTRAINT [FK_ReservationLog_Reservation] FOREIGN KEY([ReservationId])
REFERENCES [dbo].[Reservation] ([Id])
GO

ALTER TABLE [dbo].[ReservationLog] CHECK CONSTRAINT [FK_ReservationLog_Reservation]
GO



/*******************************************************************************************************************
	SP Name : GetReservationLogById
	Comment : Create SP GetReservationLogById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationLogById]    Script Date: 1/15/2018 3:53:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationLogById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationLog]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY CreatedOn DESC
END

/*******************************************************************************************************************
	SP Name : AddReservationLog
	Comment : Create SP AddReservationLog
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationLog]    Script Date: 1/15/2018 3:56:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationLog]	
	@ReservationId		UNIQUEIDENTIFIER				,	
	@ProfileId			UNIQUEIDENTIFIER				,	
	@RoomId				UNIQUEIDENTIFIER				,	
	@RoomStatusId		UNIQUEIDENTIFIER	=	NULL	,	
	@CheckInDate		DATETIME			=	NULL	,	
	@CheckInTime		TIME(7)				=	NULL	,	
	@CheckOutDate		DATETIME			=	NULL	,	
	@CheckOutTime		TIME(7)				=	NULL	,	
	@IsActive			BIT					=	NULL	,		
	@CreatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationLog]
           ([Id]           
           ,[ReservationId]		   
		   ,[ProfileId]
		   ,[RoomId]
		   ,[RoomStatusId]
		   ,[CheckInDate]
		   ,[CheckInTime]
		   ,[CheckOutDate]
		   ,[CheckOutTime]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@ProfileId
			   ,@RoomId
			   ,@RoomStatusId
			   ,@CheckInDate
			   ,@CheckInTime
			   ,@CheckOutDate
			   ,@CheckOutTime
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END





/*******************************************************************************************************************
	SP Name : UpdateReservationLog
	Comment : Create SP UpdateReservationLog
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationLog]    Script Date: 1/15/2018 3:56:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationLog]	
	@Id					UNIQUEIDENTIFIER				,	
	@ReservationId		UNIQUEIDENTIFIER				,	
	@ProfileId			UNIQUEIDENTIFIER				,	
	@RoomId				UNIQUEIDENTIFIER				,	
	@RoomStatusId		UNIQUEIDENTIFIER	=	NULL	,	
	@CheckInDate		DATETIME			=	NULL	,	
	@CheckInTime		TIME(7)				=	NULL	,	
	@CheckOutDate		DATETIME			=	NULL	,	
	@CheckOutTime		TIME(7)				=	NULL	,	
	@IsActive			BIT					=	NULL	,		
	@UpdatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog]
		SET		[ReservationId]		   =	@ReservationId
			,	[ProfileId]			   =	@ProfileId
			,	[RoomId]			   =	@RoomId
			,	[RoomStatusId]		   =	@RoomStatusId
			,	[CheckInDate]		   =	@CheckInDate
			,	[CheckInTime]		   =	@CheckInTime
			,	[CheckOutDate]		   =	@CheckOutDate
			,	[CheckOutTime]		   =	@CheckOutTime
			,	[UpdatedBy]			   =	@UpdatedBy
			,	[UpdatedOn]			   =	GETDATE()
			,	[IsActive]			   =	@IsActive
     WHERE		ISNULL(IsDeleted,0) = 0
				AND Id = @Id

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationLog
	Comment : Create SP DeleteReservationLog
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationLog]    Script Date: 1/15/2018 4:06:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationLog]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND Id = @Id

	SELECT @Id AS Id
    
END




/*******************************************************************************************************************
	SP Name : GetReservationLogDetails
	Comment : Create SP GetReservationLogDetails
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationLogDetails]    Script Date: 1/15/2018 3:53:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationLogDetails]
	@ReservationId	UNIQUEIDENTIFIER 	= 	NULL	,
	@RoomId			UNIQUEIDENTIFIER 	= 	NULL	,
	@Id 			UNIQUEIDENTIFIER 	= 	NULL	
	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationLog]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND (@ReservationId IS NULL OR ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RoomId = @RoomId)
				AND (@Id IS NULL OR Id = @Id)
		ORDER BY CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Changes in SP SearchAdvanceRoom
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 1/15/2018 6:28:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	'B86D365C-AAC5-46E9-BFF8-07A9FC6DE7C9'	,
			@ArrivalDate	=	'2018-01-02'	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@Type				NVARCHAR(255)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription
		
				
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1		
					--AND ISNULL(R.IsOccupied,0) = 0				
					AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
						


END




/*******************************************************************************************************************
	SP Name : GetRoomTypeDetailsForRateSheet
	Comment : Create SP GetRoomTypeDetailsForRateSheet
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetRoomTypeDetailsForRateSheet]    Script Date: 1/15/2018 5:43:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeDetailsForRateSheet] '', '2018/01/02'
*/

CREATE PROCEDURE [dbo].[GetRoomTypeDetailsForRateSheet]
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,
	@ArrivalDate	NVARCHAR(25)	=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT	RT.Id,
			ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
			ISNULL(RT.[Description],'') AS [Description],
			ISNULL(RT.RoomCapacity,'') AS [RoomCapacity],
			(ISNULL(RT.NoOfRooms,0) - 
					(SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 
							AND ISNULL(RL.IsDeleted,0) = 0 
							AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = RT.Id)
			)  AS AvailableRooms
		FROM RoomType RT
		WHERE	ISNULL(RT.IsDeleted,0) = 0 
				AND ISNULL(RT.IsActive,0) = 1
				AND (ISNULL(@RoomTypeCode,'') = '' OR RT.RoomTypeCode = @RoomTypeCode)
		ORDER BY RT.RoomTypeCode 
END


/************************************************************************************************************************/

Name: Nilesh
Date: 17-JAN-2018

/****** Drop Constraint FK_City_State **********/

ALTER TABLE [dbo].[City] DROP CONSTRAINT [FK_City_State];

/******** Allow StateId Null into City table ******/

ALTER TABLE [dbo].[City] ALTER COLUMN [StateId] INT NULL;


/******* Add CountryId column into City Table. ********/

ALTER TABLE [dbo].[City]
    ADD [CountryId] INT NULL;


/******** Allow RoomStatusId  Null into ReservationLog table ******/

ALTER TABLE [dbo].[ReservationLog] ALTER COLUMN [RoomStatusId] UNIQUEIDENTIFIER NULL;


	


/**** Create Table Floor *********/

/****** Object:  Table [dbo].[Floor]    Script Date: 1/17/2018 5:48:48 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Floor](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](25) NULL,
	[Name] [nvarchar](255) NOT NULL,
	[IsActive] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Floor] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


	
/******* Add FloorId  column into Room Table. ************/
ALTER TABLE [dbo].[Room]
    ADD [FloorId] UNIQUEIDENTIFIER NULL;

ALTER TABLE [dbo].[Room] WITH NOCHECK
	ADD CONSTRAINT [FK_Room_Floor] FOREIGN KEY ([FloorId]) REFERENCES [dbo].[Floor] ([Id]);
	
	
	
/*******************************************************************************************************************
	SP Name : AddFloor
	Comment : Create SP AddFloor
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[AddFloor]	
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Floor]
           ([Id]           
           ,[Name]		   
		   ,[Code]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Code
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END
GO

/*******************************************************************************************************************
	SP Name : ChangeRoomAllocation
	Comment : Create SP ChangeRoomAllocation
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[ChangeRoomAllocation]
	@ReservationId		UNIQUEIDENTIFIER,	
	@RoomId				UNIQUEIDENTIFIER,	
	@ArrivalDate		DATETIME,
	@DepartureDate		DATETIME,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	--Update Arrival Date & Departure in Reservation Table.
	UPDATE [dbo].[Reservation] 
		SET		[ArrivalDate]		=	 @ArrivalDate
				,[DepartureDate]	=	 @DepartureDate
				,[UpdatedBy]		=	 @UpdatedBy					   
				,[UpdatedOn]		=	GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND  Id = @ReservationId

	--Update RoomId in Room Reservation Mapping Table.
	UPDATE [dbo].[ReservationRoomMapping] 
		SET		[RoomId]		=	 @RoomId				
				,[UpdatedBy]	=	 @UpdatedBy					   
				,[UpdatedOn]	=	GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND  ReservationId = @ReservationId

	--Update CheckIn & CheckOut Date in CheckInCheckOutDetail Table.
	UPDATE [dbo].CheckInCheckOutDetail 
		SET		[CheckInDate]	=	@ArrivalDate
				,[CheckOutDate]	=	@DepartureDate
				,[UpdatedBy]	=	@UpdatedBy					   
				,[UpdatedOn]	=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND  ReservationId = @ReservationId

	--Update RoomId, CheckIn & CheckOut Date in Reservation Log Table.
	UPDATE [dbo].[ReservationLog] 
		SET		[RoomId]		=	@RoomId
				,[CheckInDate]	=	@ArrivalDate
				,[CheckOutDate]	=	@DepartureDate
				,[UpdatedBy]	=	@UpdatedBy					   
				,[UpdatedOn]	=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND  ReservationId = @ReservationId

	SELECT @ReservationId AS Id
    
END
GO


/*******************************************************************************************************************
	SP Name : CheckCountryCodeAvailable
	Comment : Create SP CheckCountryCodeAvailable
	
*******************************************************************************************************************/

/*
	EXEC [CheckCountryCodeAvailable] 
		@Id = NULL,
		@Code = 'IE'
*/

CREATE PROCEDURE [dbo].[CheckCountryCodeAvailable]
	@Id		INT				=	NULL,
	@Code	NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[Country] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY Code 
END
GO




/*******************************************************************************************************************
	SP Name : CheckFloorCodeAvailable
	Comment : Create SP CheckFloorCodeAvailable
	
*******************************************************************************************************************/

/*
	EXEC [CheckFloorCodeAvailable] 
		@Id = NULL,
		@Code = 'COMP'
*/

CREATE PROCEDURE [dbo].[CheckFloorCodeAvailable]
	@Id			UNIQUEIDENTIFIER	=	NULL,
	@Code		NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[Floor]
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY [Name]
END
GO




/*******************************************************************************************************************
	SP Name : DeleteFloor
	Comment : Create SP DeleteFloor
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[DeleteFloor]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Floor] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END
GO


/*******************************************************************************************************************
	SP Name : GetFloorById
	Comment : Create SP GetFloorById
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[GetFloorById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Floor]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END
GO

/*******************************************************************************************************************
	SP Name : GetFloors
	Comment : Create SP GetFloors
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[GetFloors]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Floor]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END
GO



/*******************************************************************************************************************
	SP Name : GetReservationDetailsForRoomPlan
	Comment : Create SP GetReservationDetailsForRoomPlan
	
*******************************************************************************************************************/

/*
	EXEC [GetReservationDetailsForRoomPlan]
			@RoomId				=	'014D170C-97F1-4876-BB45-E1F7FC690217' ,			
			@StartDate			=	'2018/01/01',
			@EndDate			=	'2018/01/07'
*/
CREATE PROCEDURE [dbo].[GetReservationDetailsForRoomPlan]
	@RoomId				UNIQUEIDENTIFIER	=	NULL,	
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT DISTINCT
				RL.ReservationId, 
				RL.ProfileId, 
				ISNULL(RE.FirstName,'') AS FirstName,
				ISNULL(RE.LastName,'') AS LastName,
				ISNULL(RE.NoOfNight,0) AS NoOfNight,
				RL.RoomId, 
				RL.RoomStatusId, 
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				CONVERT(varchar(12),RL.CheckInDate,103) AS CheckInDateString,
				RL.CheckInDate,
				CONVERT(varchar(12),RL.CheckOutDate,103) AS CheckOutDateString,
				RL.CheckOutDate
			FROM ReservationLog RL 
				INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0 
				INNER JOIN Room R ON RL.RoomId = R.Id
					AND ISNULL(R.IsDeleted,0) = 0  AND ISNULL(R.IsActive,0) = 1
				INNER JOIN IndividualProfile IPR ON IPR.Id = RE.ProfileId
					AND ISNULL(IPR.IsDeleted,0) = 0 AND ISNULL(IPR.IsActive,0) = 1
				LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
					AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 


			WHERE ISNULL(RL.IsDeleted,0) = 0 AND ISNULL(RL.IsActive,0) = 1 
				AND RL.RoomId = @RoomId
				AND (
						(CAST(RL.CheckInDate  AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
						OR (CAST(RL.CheckOutDate AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
					) 

			ORDER BY RL.CheckInDate, RL.CheckOutDate ASC

END
GO



/*******************************************************************************************************************
	SP Name : SearchFloor
	Comment : Create SP SearchFloor
	
*******************************************************************************************************************/

/*
	EXEC [SearchFloor] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchFloor]			
	@Code			NVARCHAR(25)	=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempFloor
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]			NVARCHAR(25)		NULL	
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Floor]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
						)


		INSERT INTO #tempFloor ([RowNum], [Id], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],				
				[Code],
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Floor]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],			
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempFloor AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END
GO


/*******************************************************************************************************************
	SP Name : UpdateFloor
	Comment : Create SP UpdateFloor
	
*******************************************************************************************************************/


CREATE PROCEDURE [dbo].[UpdateFloor]
	@Id				UNIQUEIDENTIFIER		,
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Floor]
		SET	[Name]			=	@Name		   
		   ,[Code]			=	@Code
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END
GO


	
/*******************************************************************************************************************
	SP Name : AddCity
	Comment : Changes in SP AddCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCity]    Script Date: 1/17/2018 5:56:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddCity]
	@CountryId		INT						,	
	@StateId		INT				= NULL	,	
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM [dbo].[City])

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[City]
           ([Id]
		   ,[CountryId]
		   ,[StateId]           
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@CountryId
			   ,@StateId			   
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : AddRoom
	Comment : Changes in SP AddRoom
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRoom]    Script Date: 1/17/2018 5:57:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoom]
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RoomNo			NVARCHAR(255)				,
	@Type			NVARCHAR(50)		= NULL	,	
	@Description	NVARCHAR(1000)		= NULL	,	
	@StatusId		UNIQUEIDENTIFIER	= NULL	,	
	@FloorId		UNIQUEIDENTIFIER	= NULL	,	
	@IsOccupied		BIT					= NULL	,	
	@IsActive		BIT					= NULL	,		
	@CreatedBy		INT					= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Room]
           ([Id]
           ,[RoomTypeId]
           ,[RoomNo]
		   ,[Type]
		   ,[Description]
		   ,[StatusId]
		   ,[FloorId]
		   ,[IsOccupied]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeId
			   ,@RoomNo
			   ,@Type
			   ,@Description
			   ,@StatusId
			   ,@FloorId
			   ,@IsOccupied
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : CheckRoomNoAvailable
	Comment : Changes in SP CheckRoomNoAvailable
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckRoomNoAvailable]    Script Date: 1/17/2018 5:57:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckRoomNoAvailable] 
		@Id = NULL,
		@RoomNo = '1'
*/

ALTER PROCEDURE [dbo].[CheckRoomNoAvailable]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@RoomNo			NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[Room] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)				
				AND [RoomNo] = @RoomNo
		ORDER BY [RoomNo] 
END


/*******************************************************************************************************************
	SP Name : GetCities
	Comment : Changes in SP GetCities
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCities]    Script Date: 1/17/2018 5:59:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [GetCities]  4132, 1
**/

ALTER PROCEDURE [dbo].[GetCities]
	@StateId		INT		=	NULL	,
	@CountryId		INT		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[City]	C			
		 WHERE	(ISNULL(@StateId,0) = 0 OR [StateId] = @StateId)
				AND (ISNULL(@CountryId,0) = 0 OR [CountryId] = @CountryId)
				AND ISNULL(IsDeleted,0) = 0
				AND ISNULL(IsActive,0) = 1
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetCityById
	Comment : Changes in SP GetCityById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCityById]    Script Date: 1/17/2018 5:59:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetCityById]
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT CI.*
		FROM [dbo].[City] CI
		WHERE	ISNULL(CI.IsDeleted,0) = 0 
				AND CI.Id = @Id
		ORDER BY CI.[Name]
END


/*******************************************************************************************************************
	SP Name : GetCountries
	Comment : Changes in SP GetCountries
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCountries]    Script Date: 1/17/2018 6:01:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetCountries]
AS
BEGIN
	
	SET NOCOUNT ON;

	--Ireland
	SELECT *, 1 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
				AND [Code] = 'IE'
	UNION

	--United Kingdom
	SELECT *, 2 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
				AND [Code] = 'GB'
	UNION

	--United States
	SELECT *, 3 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
				AND [Code] = 'US'
	UNION

	SELECT *, 4 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
		ORDER BY 
				SortOrder ASC,
				[Name] ASC
END

/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment : Changes in SP GetRoomDetailsForRoomPlan
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 1/17/2018 6:02:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@RoomNo				=	'' ,
			@StartDate			=	'2018/01/01',
			@EndDate			=	'2018/01/07'
*/
ALTER PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND (
												( CAST(RL.CheckInDate  AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
												OR 
												( CAST(RL.CheckOutDate AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
										)
								) AS RL 
						ON RL.RoomId = R.Id
					LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 

			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END




/*******************************************************************************************************************
	SP Name : SearchCity
	Comment : Changes in SP SearchCity
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchCity]    Script Date: 1/17/2018 6:02:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCity] 0, 0, '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchCity]		
	@CountryId		INT				=	NULL	,
	@StateId		INT				=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempCity
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,	[CountryId]		INT					NULL
		,   [CountryName]	NVARCHAR(255)		NULL
		,	[StateId]		INT					NULL
		,   [StateName]	NVARCHAR(255)		NULL		
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT CI.Id) 
						FROM [dbo].[City] CI	
							LEFT JOIN [dbo].[State] S ON CI.StateId = S.Id
								AND ISNULL(S.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] C ON CI.CountryId = C.Id
								AND ISNULL(C.IsDeleted,0) = 0															
						WHERE	ISNULL(CI.IsDeleted,0) = 0
								AND (ISNULL(@CountryId,0) = 0 OR CI.[CountryId] = @CountryId)
								AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
								AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempCity 
		(
			[RowNum], 
			[Id], 
			[CountryId], 
			[CountryName], 
			[StateId], 
			[StateName],
			[Name], 
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN CI.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN CI.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'asc'
							THEN S.[Name] END ASC,
						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'desc'
							THEN S.[Name] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN CI.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN CI.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN CI.[Name] END ASC

				) AS RowNum,
				CI.[ID],
				CI.[CountryId],
				C.[Name] AS CountryName,
				CI.[StateId],
				S.[Name] AS StateName,				
				CI.[Name],
				CI.[CreatedOn],
				CI.[IsActive]
			FROM [dbo].[City] CI
					LEFT JOIN [dbo].[State] S ON CI.StateId = S.Id
					AND ISNULL(S.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Country] C ON CI.CountryId = C.Id
					AND ISNULL(C.IsDeleted,0) = 0
			WHERE	ISNULL(CI.IsDeleted,0) = 0
					AND (ISNULL(@CountryId,0) = 0 OR CI.[CountryId] = @CountryId)
					AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
					AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[CountryId],
			temp.[CountryName],
			temp.[StateId],
			temp.[StateName],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempCity AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : UpdateCity
	Comment : Changes in SP UpdateCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCity]    Script Date: 1/17/2018 6:03:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateCity]
	@Id				INT						,
	@CountryId		INT						,
	@StateId		INT				= NULL	,	
	@Name			NVARCHAR(255)			,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[City]
		SET	[CountryId]		=	@CountryId
		   ,[StateId]		=	@StateId 		   
           ,[Name]			=	@Name		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END





/*******************************************************************************************************************
	SP Name : UpdateRoom
	Comment : Changes in SP UpdateRoom
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoom]    Script Date: 1/17/2018 6:16:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRoom]
	@Id				UNIQUEIDENTIFIER			,
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RoomNo			NVARCHAR(255)				,
	@Type			NVARCHAR(50)		= NULL	,	
	@Description	NVARCHAR(1000)		= NULL	,	
	@StatusId		UNIQUEIDENTIFIER	= NULL	,	
	@FloorId		UNIQUEIDENTIFIER	= NULL	,	
	@IsOccupied		BIT					= NULL	,	
	@IsActive		BIT					= NULL	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[RoomTypeId]	= @RoomTypeId
           ,[RoomNo]		= @RoomNo
		   ,[Type]			= @Type
		   ,[Description]	= @Description
		   ,[StatusId]		= @StatusId
		   ,[FloorId]		= @FloorId
		   ,[IsOccupied]	= @IsOccupied
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : AddRoom
	Comment : Changes in SP AddRoom
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddRoom]    Script Date: 1/17/2018 6:17:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoom]
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RoomNo			NVARCHAR(255)				,
	@Type			NVARCHAR(50)		= NULL	,	
	@Description	NVARCHAR(1000)		= NULL	,	
	@StatusId		UNIQUEIDENTIFIER	= NULL	,	
	@FloorId		UNIQUEIDENTIFIER	= NULL	,	
	@IsOccupied		BIT					= NULL	,	
	@IsActive		BIT					= NULL	,		
	@CreatedBy		INT					= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Room]
           ([Id]
           ,[RoomTypeId]
           ,[RoomNo]
		   ,[Type]
		   ,[Description]
		   ,[StatusId]
		   ,[FloorId]
		   ,[IsOccupied]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeId
			   ,@RoomNo
			   ,@Type
			   ,@Description
			   ,@StatusId
			   ,@FloorId
			   ,@IsOccupied
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/********************************************************************************************************************/

Name : Nilesh
Date : 18-JAN-2018

/************ Add new column IsWeekEndPrice **********/
ALTER TABLE RoomTypeRateTypeMapping ADD IsWeekEndPrice BIT NULL
GO



/*******************************************************************************************************************
	SP Name : AddRoomTypeRateTypeMapping
	Comment : Changes in SP AddRoomTypeRateTypeMapping
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[AddRoomTypeRateTypeMapping]    Script Date: 1/18/2018 1:52:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoomTypeRateTypeMapping]
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RateTypeId		UNIQUEIDENTIFIER			,
	@Description	NVARCHAR(500)		= NULL	,
	@Amount			DECIMAL(18,2)				,	
	@IsWeekEndPrice	BIT					= NULL	,
	@IsActive		BIT					= NULL	,	
	@CreatedBy		INT					= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RoomTypeRateTypeMapping]
           ([Id]
           ,[RoomTypeId]
		   ,[RateTypeId]
           ,[Description]
		   ,[Amount]
		   ,[IsWeekEndPrice]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeId
			   ,@RateTypeId
			   ,@Description
			   ,@Amount
			   ,@IsWeekEndPrice
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : UpdateRoomTypeRateTypeMapping
	Comment : Changes in SP UpdateRoomTypeRateTypeMapping
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomTypeRateTypeMapping]    Script Date: 1/18/2018 1:52:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRoomTypeRateTypeMapping]
	@Id				UNIQUEIDENTIFIER				,
	@RoomTypeId		UNIQUEIDENTIFIER				,
	@RateTypeId		UNIQUEIDENTIFIER				,	
	@Description	NVARCHAR(500)		=	NULL	,	
	@Amount			DECIMAL(18,2)					,	
	@IsWeekEndPrice	BIT					=	NULL	,
	@IsActive		BIT								,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomTypeRateTypeMapping] 
		SET	[RoomTypeId]		=	@RoomTypeId
		   ,[RateTypeId]		=	@RateTypeId
           ,[Description]		=	@Description
		   ,[Amount]			=	@Amount
		   ,[IsWeekEndPrice]	=	@IsWeekEndPrice
		   ,[UpdatedBy]			=	@UpdatedBy
		   ,[IsActive]			=	@IsActive
		   ,[UpdatedOn]			=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchRoomTypeRateTypeMapping
	Comment : Changes in SP SearchRoomTypeRateTypeMapping
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchRoomTypeRateTypeMapping]    Script Date: 1/18/2018 2:01:19 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoomTypeRateTypeMapping] NULL,NULL, NULL, NULL, 1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoomTypeRateTypeMapping]		
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@RateTypeId		UNIQUEIDENTIFIER	=	NULL	,		
	@Amount			DECIMAL(18,2)		=	NULL	,
	@IsWeekEndPrice	BIT					=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,   [RoomTypeCode]	NVARCHAR(50)		NULL
		,	[RateTypeId]	UNIQUEIDENTIFIER	NULL
		,   [RateTypeCode]	NVARCHAR(50)		NULL
		,   [Description]	NVARCHAR(1000)		NULL
		,   [Amount]		DECIMAL(18,2)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT RTRTM.Id) 
						FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
							INNER JOIN [dbo].[RoomType] ROT 
								ON ROT.Id = RTRTM.RoomTypeId AND ISNULL(ROT.IsDeleted,0) = 0
							INNER JOIN [dbo].RateType RAT 
								ON RAT.Id = RTRTM.RateTypeId AND ISNULL(RAT.IsDeleted,0) = 0
						WHERE	ISNULL(RTRTM.IsDeleted,0) = 0
								AND (@RoomTypeId IS NULL OR RTRTM.RoomTypeId = @RoomTypeId)  
								AND (@RateTypeId IS NULL OR RTRTM.RateTypeId = @RateTypeId)  
								AND (ISNULL(@Amount,0) = 0 OR RTRTM.Amount = @Amount)
								AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
						)


		INSERT INTO #tempRoomTypeRateTypeMapping 
				([RowNum], [Id], [RoomTypeId], [RoomTypeCode], [RateTypeId], [RateTypeCode],
					[Description], [Amount], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN RTRTM.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN RTRTM.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN @SortColumn = 'Amount' and @SortDirection = 'asc'
							THEN RTRTM.[Amount] END ASC,
						CASE WHEN @SortColumn = 'Amount' and @SortDirection = 'desc'
							THEN RTRTM.[Amount] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN RTRTM.[CreatedOn] END DESC

				) AS RowNum,
				RTRTM.[ID],
				ROT.Id AS RoomTypeId,
				ROT.[RoomTypeCode],
				RAT.Id AS RateTypeId,
				RAT.[RateTypeCode],
				RTRTM.[Description],
				RTRTM.[Amount],
				RTRTM.[CreatedOn],
				RTRTM.[IsActive]
			FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
				INNER JOIN [dbo].[RoomType] ROT ON ROT.Id = RTRTM.RoomTypeId AND ISNULL(ROT.IsDeleted,0) = 0
				INNER JOIN [dbo].RateType RAT ON RAT.Id = RTRTM.RateTypeId AND ISNULL(RAT.IsDeleted,0) = 0
				WHERE	ISNULL(RTRTM.IsDeleted,0) = 0
						AND (@RoomTypeId IS NULL OR RTRTM.RoomTypeId = @RoomTypeId)  
						AND (@RateTypeId IS NULL OR RTRTM.RateTypeId = @RateTypeId)  
						AND (ISNULL(@Amount,0) = 0 OR RTRTM.Amount = @Amount)
						AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum]		,
			temp.[Id]			,						
			temp.[RoomTypeId]	,
			temp.[RoomTypeCode]	,
			temp.[RateTypeId]	,
			temp.[RateTypeCode]	,
			temp.[Description]	,
			temp.[Amount]		,
			temp.[CreatedOn]	,	
			temp.[IsActive]		,
			@TotalCount AS TotalCount
	FROM	#tempRoomTypeRateTypeMapping AS temp
	WHERE	temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : CheckRoomTypeRateTypeMappingAvailable
	Comment : Changes in SP CheckRoomTypeRateTypeMappingAvailable
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[CheckRoomTypeRateTypeMappingAvailable]    Script Date: 1/18/2018 1:55:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckRoomTypeRateTypeMappingAvailable] 
		@Id = 'DB45342E-A543-41F5-8021-682900548B6F',
		@RoomTypeId = 'E4D83BCE-DAB2-457A-98DA-2250C2ED6081',
		@RateTypeId = '83DC25DC-5D62-4CFB-A05B-8C17C9BF7E65',
		@IsWeekEndPrice	= NULL
		
*/

ALTER PROCEDURE [dbo].[CheckRoomTypeRateTypeMappingAvailable]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RateTypeId		UNIQUEIDENTIFIER			,
	@IsWeekEndPrice	BIT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [RoomTypeRateTypeMapping] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND RoomTypeId = @RoomTypeId
				AND RateTypeId = @RateTypeId
				AND ISNULL(IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
				
		ORDER BY CreatedOn
END


/***************** Add WeekEndPrice Data ****/

INSERT INTO [RoomTypeRateTypeMapping] ([Id],[RoomTypeId],[RateTypeId],[Amount],[IsActive],[CreatedBy],[CreatedOn],[IsWeekEndPrice])

SELECT NEWID() AS Id, RoomTypeId, RateTypeId, Amount, 1 AS [IsActive], 1 AS [CreatedBy], 
GETDATE() AS [CreatedOn], 1 AS [IsWeekEndPrice]
 FROM [RoomTypeRateTypeMapping] WHERE ISNULL(IsDeleted,0) = 0 
AND ISNULL(IsWeekEndPrice,0) = 0


/*******************************************************************************************************************
	SP Name : GetRateSheetDetail
	Comment : Changes in SP GetRateSheetDetail
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRateSheetDetail]    Script Date: 1/18/2018 2:18:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRateSheetDetail] 
		@RateTypeId = '0853E143-6F2B-48CC-B322-4714142D9A00',
		@RoomTypeId = '488FE9ED-4AA6-45D9-88F6-67FE6D5886D6',
		@IsShowWeekEndPrice = 0
*/
ALTER PROCEDURE [dbo].[GetRateSheetDetail]
	@RateTypeId				UNIQUEIDENTIFIER,
	@RoomTypeId				UNIQUEIDENTIFIER,
	@IsShowWeekEndPrice		BIT = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Amount AS DECIMAL(10,2)
	SET @Amount = 0

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
		Id				UNIQUEIDENTIFIER	NULL,
		RoomTypeId		UNIQUEIDENTIFIER	NULL,
		RateTypeId		UNIQUEIDENTIFIER	NULL,
		Amount			DECIMAL(18,2)		NULL,
		[Description]	NVARCHAR(1000)		NULL
	) 

	IF ISNULL(@IsShowWeekEndPrice,0) = 0
	BEGIN
		--1.) Get amount from mapping table. (Show WeekDay Price)
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, RTRTM.[Description]
			FROM [RoomTypeRateTypeMapping] RTRTM 
			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
					AND RTRTM.RateTypeId = @RateTypeId 
					AND RTRTM.RoomTypeId = @RoomTypeId
					AND ISNULL(IsWeekEndPrice,0) = 0
			ORDER BY CreatedOn DESC
		--END
	END
	ELSE
	BEGIN

		--2.) Get amount from mapping table. (Show WeekEnd Price)
		INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
		SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, RTRTM.[Description]
		FROM [RoomTypeRateTypeMapping] RTRTM 
		WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
				AND RTRTM.RateTypeId = @RateTypeId 
				AND RTRTM.RoomTypeId = @RoomTypeId
				AND ISNULL(IsWeekEndPrice,0) = 1
		ORDER BY CreatedOn DESC
		
	END


	SELECT * FROM #tempRoomTypeRateTypeMapping
END


/******************************************************************************/

Name : Nilesh
Date : 18-JAN-2018 03:20 PM

/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment : Changes in SP GetReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 1/18/2018 3:14:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	UNION

	SELECT RC.*, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	ORDER BY SortOrder
END

/*********** Create new table ReservationType ******/


/****** Object:  Table [dbo].[ReservationType]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationType](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationType] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO





/*******************************************************************************************************************
	SP Name : AddReservationType
	Comment : Create SP AddReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationType]    Script Date: 1/18/2018 4:01:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationType]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationType]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateReservationType
	Comment : Create SP UpdateReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationType]    Script Date: 1/18/2018 4:05:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationType]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationType]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : GetReservationTypeById
	Comment : Create SP GetReservationTypeById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationTypeById]    Script Date: 1/18/2018 4:05:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationTypeById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationType]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : DeleteReservationType
	Comment : Create SP DeleteReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationType]    Script Date: 1/18/2018 4:51:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationType]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationType] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchReservationType
	Comment : Create SP SearchReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationType]    Script Date: 1/18/2018 4:51:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationType] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchReservationType]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationType
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationType]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempReservationType ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationType]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : GetReservationTypes
	Comment : Create SP GetReservationTypes
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationTypes]    Script Date: 1/18/2018 4:06:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationTypes]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationType]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/**** Update ReservationTypeId In Existing Data of Reservation Table*******/

-- 1.) Create Reservation Type by Web (Master Screen)

-- Credit Card
UPDATE Reservation SET ReservationTypeId = 
(SELECT TOP 1 Id FROM ReservationType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Credit Card')
WHERE ReservationTypeId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944'


--6pm Courtesy Hold
UPDATE Reservation SET ReservationTypeId = 
(SELECT TOP 1 Id FROM ReservationType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='6pm Courtesy Hold')
WHERE ReservationTypeId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945'


/**** Add Foreign Key of ReservationTypeId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_ReservationType] FOREIGN KEY ([ReservationTypeId]) REFERENCES [dbo].[ReservationType] ([Id]);


/*********** Create new table Package ******/


/****** Object:  Table [dbo].[Package]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Package](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Package] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddPackage
	Comment : Create SP AddPackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPackage]    Script Date: 1/18/2018 5:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddPackage]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Package]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdatePackage
	Comment : Create SP UpdatePackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePackage]    Script Date: 1/18/2018 5:55:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdatePackage]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Package]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeletePackage
	Comment : Create SP DeletePackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeletePackage]    Script Date: 1/18/2018 5:55:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeletePackage]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Package] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetPackageById
	Comment : Create SP GetPackageById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPackageById]    Script Date: 1/18/2018 5:57:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPackageById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Package]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetPackages
	Comment : Create SP GetPackages
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPackages]    Script Date: 1/18/2018 5:58:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPackages]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Package]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchPackage
	Comment : Create SP SearchPackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPackage]    Script Date: 1/18/2018 5:58:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPackage] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchPackage]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPackage
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Package]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempPackage ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Package]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPackage AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/**** Add Foreign Key of PackageId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_Package] FOREIGN KEY ([PackageId]) REFERENCES [dbo].[Package] ([Id]);
	
/*******************************************************************************************************/

/*********** Create new table Market ******/


/****** Object:  Table [dbo].[Market]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Market](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Market] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



/*******************************************************************************************************************
	SP Name : AddMarket
	Comment : Create SP AddMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddMarket]    Script Date: 1/18/2018 6:37:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddMarket]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Market]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateMarket
	Comment : Create SP UpdateMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateMarket]    Script Date: 1/18/2018 6:38:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateMarket]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Market]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteMarket
	Comment : Create SP DeleteMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteMarket]    Script Date: 1/18/2018 6:38:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteMarket]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Market] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetMarketById
	Comment : Create SP GetMarketById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetMarketById]    Script Date: 1/18/2018 6:39:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMarketById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Market]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetMarkets
	Comment : Create SP GetMarkets
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetMarkets]    Script Date: 1/18/2018 6:39:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMarkets]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Market]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : SearchMarket
	Comment : Create SP SearchMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchMarket]    Script Date: 1/18/2018 6:40:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchMarket] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchMarket]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempMarket
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Market]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempMarket ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Market]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempMarket AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/**** Update MarketId In Existing Data of Reservation Table*******/

-- 1.) Create Market by Web (Master Screen)

-- Digital
UPDATE Reservation SET MarketId = 
(SELECT TOP 1 Id FROM Market WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Digital')
WHERE (MarketId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944' OR MarketId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945')



/**** Add Foreign Key of MarketId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_Market] FOREIGN KEY ([MarketId]) REFERENCES [dbo].[Market] ([Id]);
	
/*******************************************************************************************************************
	SP Name : GetAdditionalChargesByCode
	Comment : Changes in SP GetAdditionalChargesByCode
	
*******************************************************************************************************************/
	
	
/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesByCode]    Script Date: 1/18/2018 7:01:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetAdditionalChargesByCode]
	@Code NVARCHAR(25) = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Code = @Code
		ORDER BY [Description]
END

/*******************************************************************************************************************
	SP Name : GetAdditionalChargesById
	Comment : Changes in SP GetAdditionalChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesById]    Script Date: 1/18/2018 7:02:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetAdditionalChargesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Description]
END

/*******************************************************************************************************************
	SP Name : GetIndividualProfileById
	Comment : Changes in SP GetIndividualProfileById
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetIndividualProfileById]    Script Date: 1/18/2018 7:02:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetIndividualProfileById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END



/*******************************************************************************************************************
	SP Name : GetPreferenceById
	Comment : Changes in SP GetPreferenceById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPreferenceById]    Script Date: 1/18/2018 7:03:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetPreferenceById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Preferences]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Description]
END



/*******************************************************************************************************************
	SP Name : GetPreferenceGroupById
	Comment : Changes in SP GetPreferenceGroupById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPreferenceGroupById]    Script Date: 1/18/2018 7:03:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetPreferenceGroupById]	
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PreferenceGroup]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetRateTypeById
	Comment : Changes in SP GetRateTypeById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRateTypeById]    Script Date: 1/18/2018 7:04:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRateTypeById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RateType]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [RateTypeCode]
END



/*******************************************************************************************************************
	SP Name : GetReservationById
	Comment : Changes in SP GetReservationById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationById]    Script Date: 1/18/2018 7:05:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END




/*******************************************************************************************************************
	SP Name : GetReservationCancellationReasonById
	Comment : Changes in SP GetReservationCancellationReasonById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCancellationReasonById]    Script Date: 1/18/2018 7:05:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCancellationReasonById]
	@Id UNIQUEIDENTIFIER =  NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationCancellationReasons]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Code]
END




/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment : Changes in SP GetReservationChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 1/18/2018 7:05:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationChargesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
		FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (RC.Id = @Id)							
		ORDER BY RC.CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : GetRoomById
	Comment : Changes in SP GetRoomById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomById]    Script Date: 1/18/2018 7:06:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRoomById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Room]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY TRY_PARSE([RoomNo] AS INT)
END


/*******************************************************************************************************************
	SP Name : GetRoomTypeById
	Comment : Changes in SP GetRoomTypeById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeById]    Script Date: 1/18/2018 7:08:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRoomTypeById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomType]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [RoomTypeCode]
END

/*******************************************************************************************************************
	SP Name : GetRoomTypeRateTypeMappingId
	Comment : Changes in SP GetRoomTypeRateTypeMappingId
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeRateTypeMappingId]    Script Date: 1/18/2018 7:08:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRoomTypeRateTypeMappingId]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomTypeRateTypeMapping]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [CreatedOn]
END

/****************************************************************************************************************************/

Name : Nilesh
Date : 19-JAN-2018

/************* Create New Table Reservation Source ***************/

/****** Object:  Table [dbo].[ReservationSource]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationSource](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationSource] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddReservationSource
	Comment : Create SP AddReservationSource
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationSource]    Script Date: 1/19/2018 11:59:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationSource]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationSource]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateReservationSource
	Comment : Create SP UpdateReservationSource
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationSource]    Script Date: 1/19/2018 12:01:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationSource]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationSource]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationSource
	Comment : Create SP DeleteReservationSource
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeleteReservationSource]    Script Date: 1/19/2018 12:02:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationSource]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationSource]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetReservationSourceById
	Comment : Create SP GetReservationSourceById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationSourceById]    Script Date: 1/19/2018 12:03:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationSourceById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationSource]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetReservationSources
	Comment : Create SP GetReservationSources
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationSources]    Script Date: 1/19/2018 12:03:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationSources]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationSource]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : SearchReservationSource
	Comment : Create SP SearchReservationSource
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationSource]    Script Date: 1/19/2018 12:04:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationSource] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchReservationSource]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationSource
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationSource]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempReservationSource ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationSource]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationSource AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/**** Update ReservationSourceId In Existing Data of Reservation Table*******/

-- 1.) Create Reservation Source by Web (Master Screen)

-- Guest Direct
UPDATE Reservation SET ReservationSourceId = 
(SELECT TOP 1 Id FROM ReservationSource WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Guest Direct')
WHERE ReservationSourceId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944'


-- CRS
UPDATE Reservation SET ReservationSourceId = 
(SELECT TOP 1 Id FROM ReservationSource WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='CRS')
WHERE ReservationSourceId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945'


/**** Add Foreign Key of ReservationSourceId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_ReservationSource] FOREIGN KEY ([ReservationSourceId]) REFERENCES [dbo].[ReservationSource] ([Id]);

	

/************* Create New Table Payment Method ***************/

/****** Object:  Table [dbo].[PaymentMethod]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PaymentMethod](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_PaymentMethod] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddPaymentMethod
	Comment : Create SP AddPaymentMethod
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPaymentMethod]    Script Date: 1/19/2018 11:59:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddPaymentMethod]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[PaymentMethod]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdatePaymentMethod
	Comment : Create SP UpdatePaymentMethod
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePaymentMethod]    Script Date: 1/19/2018 12:01:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdatePaymentMethod]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeletePaymentMethod
	Comment : Create SP DeletePaymentMethod
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeletePaymentMethod]    Script Date: 1/19/2018 12:02:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeletePaymentMethod]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetPaymentMethodById
	Comment : Create SP GetPaymentMethodById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPaymentMethodById]    Script Date: 1/19/2018 12:03:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPaymentMethodById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PaymentMethod]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetPaymentMethods
	Comment : Create SP GetPaymentMethods
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPaymentMethods]    Script Date: 1/19/2018 12:03:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPaymentMethods]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PaymentMethod]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : SearchPaymentMethod
	Comment : Create SP SearchPaymentMethod
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPaymentMethod]    Script Date: 1/19/2018 12:04:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPaymentMethod] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchPaymentMethod]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPaymentMethod
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PaymentMethod]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempPaymentMethod ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[PaymentMethod]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPaymentMethod AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/**** Update PaymentMethodId In Existing Data of Reservation Table*******/

-- 1.) Create Payment Method by Web (Master Screen)

-- Cash
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Cash')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F946'


-- Visa
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Visa')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944'

-- American Express
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='American Express')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945'

-- Discover
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Discover')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-G95261B0F937'

-- Master Card
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Master Card')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-G95261B0F939'


/**** Add Foreign Key of PaymentMethodId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_PaymentMethod] FOREIGN KEY ([PaymentMethodId]) REFERENCES [dbo].[PaymentMethod] ([Id]);
	
	

/**************************************************************************************************************/

/*************** Create new table UserRole ************/

/****** Object:  Table [dbo].[UserRole]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UserRole](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](25) NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_UserRole] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*************** Create new table UserDetail ************/

/****** Object:  Table [dbo].[UserDetail]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UserDetail](
	[Id] [uniqueidentifier] NOT NULL,
	[UserRoleId] [uniqueidentifier] NULL,
	[Name] [nvarchar](500) NOT NULL,
	[Email] [nvarchar](500) NOT NULL,
	[Password] [nvarchar] (2000) NOT NULL,	
	[UserId]	[int]	NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_UserDetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddUserDetail
	Comment : Create SP AddUserDetail
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[AddUserDetail]    Script Date: 1/19/2018 3:10:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUserDetail]	
	@UserRoleId		UNIQUEIDENTIFIER	=	NULL	,
	@Name			NVARCHAR(500)					,		
	@Email			NVARCHAR(500)					,		
	@Password		NVARCHAR(2000)					,
	@IsActive		BIT					=	NULL	,	
	@CreatedBy		INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	DECLARE @UserId AS INT = 0
	SET @UserId = (SELECT ISNULL(MAX(UserId),0) AS MaxUserId FROM [dbo].[UserDetail])

	SET @UserId = (@UserId + 1)

	INSERT INTO [dbo].[UserDetail]
           ([Id]           
		   ,[UserRoleId]
           ,[Name]		
		   ,[Email]
		   ,[Password]   
		   ,[UserId]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id		
			   ,@UserRoleId	   
			   ,@Name		
			   ,@Email
			   ,@Password
			   ,@UserId	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @UserId AS Id    
END



/*******************************************************************************************************************
	SP Name : GetUserLogin
	Comment : Create SP GetUserLogin
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserLogin]    Script Date: 1/19/2018 3:00:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetUserLogin]		
	@Email			NVARCHAR(500)		,		
	@Password		NVARCHAR(2000)					
	
AS
BEGIN
	SELECT UD.*,UR.Code AS UserRoleCode, UR.[Name] AS UserRoleName
		 FROM [UserDetail] UD	
			LEFT JOIN [UserRole] UR ON UR.Id = UD.UserRoleId
				AND ISNULL(UR.IsDeleted,0) = 0 AND ISNULL(UR.IsActive,0) = 1
		WHERE ISNULL(UD.IsDeleted,0) = 0 AND ISNULL(UD.IsActive,0) = 1
			AND ISNULL(UD.Email,'') = @Email
			AND ISNULL(UD.[Password],'') = @Password
END





/**************** Encryption Key in Web.Config ***********/

<add key="EncryptionKey" value="HotelierHub"/>


/*******************************************************************************************************************
	SP Name : CheckUserEmailExist
	Comment : Create SP CheckUserEmailExist
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckUserEmailExist]    Script Date: 1/19/2018 3:24:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckUserEmailExist] 
		@Id = NULL,
		@Email = ''
*/

CREATE PROCEDURE [dbo].[CheckUserEmailExist]
	@Id			UNIQUEIDENTIFIER	=	NULL,
	@Email		NVARCHAR(500)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[UserDetail]
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Email = @Email
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : AddUserRole
	Comment : Create SP AddUserRole	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddUserRole]    Script Date: 1/19/2018 11:59:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUserRole]	
	@Code			NVARCHAR(25)			,	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UserRole]
           ([Id]           
		   ,[Code]		   		
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id	
			   ,@Code
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateUserRole
	Comment : Create SP UpdateUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUserRole]    Script Date: 1/19/2018 5:00:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateUserRole]
	@Id				UNIQUEIDENTIFIER		,	
	@Code			NVARCHAR(25)			,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRole]
		SET	[Name]			=	@Name		   		   
		   ,[Code]	=	@Code
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteUserRole
	Comment : Create SP DeleteUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteUserRole]    Script Date: 1/19/2018 5:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserRole]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRole] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetUserRoleById
	Comment : Create SP GetUserRoleById	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserRoleById]    Script Date: 1/19/2018 5:02:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserRoleById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UserRole]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetUserRoles
	Comment : Create SP GetUserRoles	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserRoles]    Script Date: 1/19/2018 5:03:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserRoles]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UserRole]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchUserRole
	Comment : Create SP SearchUserRole	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchUserRole]    Script Date: 1/19/2018 5:03:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserRole] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchUserRole]					
	@Code			NVARCHAR(25)	=	NULL	,		
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserRole
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(25)		NOT NULL	
		,   [Name]			NVARCHAR(500)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[UserRole]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%') 								
						)


		INSERT INTO #tempUserRole ([RowNum], [Id], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],		
				[Code],						
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[UserRole]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Code],				
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempUserRole AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*******************************************************************************************************************
	SP Name : CheckUserRoleCodeAvailable
	Comment : Create SP CheckUserRoleCodeAvailable	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckUserRoleCodeAvailable]    Script Date: 1/19/2018 5:05:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckUserRoleCodeAvailable] 
		@Id = NULL,
		@Code = 'COMP'
*/

CREATE PROCEDURE [dbo].[CheckUserRoleCodeAvailable]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@Code			NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM UserRole 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY [Name]
END


/************* Add User Roles ***********/

INSERT [dbo].[UserRole] ([Id], [Code], [Name], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) 
VALUES (N'c959e203-fa02-4507-a59c-8fdcd9613e32', N'ADMIN', N'Admin', 1, CAST(N'2018-01-19T13:19:06.530' AS DateTime), NULL, NULL, 1, NULL)

INSERT [dbo].[UserRole] ([Id], [Code], [Name], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) 
VALUES (N'36c62668-97b6-4b98-867f-b9c153363fc0', N'STUDENT', N'Student', 1, CAST(N'2018-01-19T13:19:06.533' AS DateTime), NULL, NULL, 1, NULL)

INSERT [dbo].[UserRole] ([Id], [Code], [Name], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) 
VALUES (N'0f14eeeb-e9f4-4fcb-9486-bdd9ddc7ebf1', N'TUTOR', N'Tutor', 1, CAST(N'2018-01-19T13:19:06.533' AS DateTime), NULL, NULL, 1, NULL)

/*** Add Admin User Login *****/
	
-- UserDetail
INSERT INTO [dbo].[UserDetail] ([Id],[Name],[Email],[Password],[CreatedOn],[IsActive],[UserId]) 
	VALUES (NEWID(), 'Admin' ,'admin@hotelierhub.com', 'c35n4z3mFEpQSquyRnYzFg==',  GETDATE(), 1, (SELECT (ISNULL(MAX(UserId),0) + 1) FROM UserDetail))

	
/****************************************************************************************************************************************/

Name : Nilesh
Date : 22-JAN-2018

/***** Add FloorNo & NoOfRoom column to [Floor] Table *****/

ALTER TABLE [Floor] ADD FloorNo INT NULL 
GO


ALTER TABLE [Floor] ADD NoOfRoom INT NULL 
GO

ALTER TABLE [Floor] ADD [Description] NVARCHAR(2000) NULL
GO


/*******************************************************************************************************************
	SP Name : AddFloor
	Comment : Changes in SP AddFloor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddFloor]    Script Date: 1/22/2018 2:50:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddFloor]	
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,		
	@FloorNo		INT				= NULL	,
	@NoOfRoom		INT				= NULL	,
	@Description	NVARCHAR(2000)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Floor]
           ([Id]           
           ,[Name]		   
		   ,[Code]
		   ,[FloorNo]
		   ,[NoOfRoom]
		   ,[Description]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Code
			   ,@FloorNo
			   ,@NoOfRoom
			   ,@Description
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateFloor
	Comment : Changes in SP UpdateFloor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateFloor]    Script Date: 1/22/2018 2:51:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateFloor]
	@Id				UNIQUEIDENTIFIER		,
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,	
	@FloorNo		INT				= NULL	,
	@NoOfRoom		INT				= NULL	,
	@Description	NVARCHAR(2000)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Floor]
		SET	[Name]			=	@Name		   
		   ,[Code]			=	@Code
		   ,[FloorNo]		=	@FloorNo
		   ,[NoOfRoom]		=	@NoOfRoom
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : SearchFloor
	Comment : Changes in SP SearchFloor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchFloor]    Script Date: 1/22/2018 2:52:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchFloor] '', '', 1, 10
*/

ALTER PROCEDURE [dbo].[SearchFloor]			
	@Code			NVARCHAR(25)	=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,			
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempFloor
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]			NVARCHAR(25)		NULL	
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[FloorNo]		INT					NULL		
		,	[NoOfRoom]		INT					NULL	
		,	[Description]	NVARCHAR(2000)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Floor]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
						)


		INSERT INTO #tempFloor ([RowNum], [Id], [Code], [Name], [FloorNo], [NoOfRoom], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],				
				[Code],
				[Name],
				[FloorNo],
				[NoOfRoom],
				[Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Floor]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],			
			temp.[Name],		
			temp.[FloorNo],	
			temp.[NoOfRoom],
			temp.[Description],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempFloor AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END


/*******************************************************************************************************************
	SP Name : GetMaxFloorNo
	Comment : Create SP GetMaxFloorNo	
*******************************************************************************************************************/



/****** Object:  StoredProcedure [dbo].[GetMaxFloorNo]    Script Date: 1/22/2018 3:28:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMaxFloorNo]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT MAX(FloorNo) AS FloorNo FROM [dbo].[Floor]
		WHERE	ISNULL(IsDeleted,0) = 0 
END



/*******************************************************************************************************************
	SP Name : SearchRoom
	Comment : Create SP SearchRoom	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchRoom]    Script Date: 1/22/2018 3:51:28 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoom] NULL, NULL, '',1, 10
*/

CREATE PROCEDURE [dbo].[SearchRoom]
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,	
	@FloorId		UNIQUEIDENTIFIER	=	NULL	,	
	@RoomNo			NVARCHAR(255)		=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoom
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]			NVARCHAR(50)		NULL	
		,   [RoomNo]		NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]	NVARCHAR(255)		NULL
		,	[FloorId]		UNIQUEIDENTIFIER	NULL
		,	[FloorName]		NVARCHAR(255)		NULL
		,	[FloorNo]		INT					NULL				
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Room] R
							INNER JOIN [Floor] F ON F.Id = R.FloorId
								AND ISNULL(F.IsDeleted,0) = 0
							INNER JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
								AND ISNULL(RT.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
								AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
								AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  
						)


		INSERT INTO #tempRoom 
		(
			[RowNum]		, 
			[Id]			, 
			[Type]			, 
			[RoomNo]		, 
			[Description]	, 
			[RoomTypeId]	, 
			[RoomTypeCode]	,
			[FloorId]		, 
			[FloorName]		,
			[FloorNo]		,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN R.[Type] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN R.[Type] END DESC,

					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
						THEN R.[RoomNo] END ASC,
					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'desc'
						THEN R.[RoomNo] END DESC,

					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Name] END ASC

			) AS RowNum,
			R.Id,				
			ISNULL(R.[Type],'') AS [Type],
			ISNULL(R.[RoomNo],'') AS [RoomNo],
			ISNULL(R.[Description],'') AS [Description],
			R.RoomTypeId,
			ISNULL(RT.RoomTypeCode,'') AS [RoomTypeCode],
			R.FloorId,
			ISNULL(F.[Name],'') AS [FloorName],
			F.[FloorNo],
			R.[CreatedOn],
			R.[IsActive]
	FROM [dbo].[Room] R
			INNER JOIN [Floor] F ON F.Id = R.FloorId
				AND ISNULL(F.IsDeleted,0) = 0
			LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
				AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
				AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[FloorId],
			temp.[FloorName],
			temp.[FloorNo],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoom AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END

/*******************************************************************************************************************
	SP Name : GetRoomTypeDetailsForRateSheet
	Comment : Changes in SP GetRoomTypeDetailsForRateSheet	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetRoomTypeDetailsForRateSheet]    Script Date: 1/22/2018 5:13:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeDetailsForRateSheet] '', '2018/01/02'
*/

ALTER PROCEDURE [dbo].[GetRoomTypeDetailsForRateSheet]
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,
	@ArrivalDate	NVARCHAR(25)	=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT	RT.Id,
			ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
			ISNULL(RT.[Description],'') AS [Description],
			ISNULL(RT.RoomCapacity,'') AS [RoomCapacity],
			(
				(
					SELECT COUNT(*) As TotalRooms
					FROM Room 
					WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
						AND RoomTypeId = RT.Id
				)
				 - 
				(
					SELECT COUNT(DISTINCT RL.Id) 
					FROM Room R 
					INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
						AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
						AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
					INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
						AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsCheckOut,0) = 1
					WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = RT.Id
				)
			)  AS AvailableRooms
		FROM RoomType RT
		WHERE	ISNULL(RT.IsDeleted,0) = 0 
				AND ISNULL(RT.IsActive,0) = 1
				AND (ISNULL(@RoomTypeCode,'') = '' OR RT.RoomTypeCode = @RoomTypeCode)
		ORDER BY RT.RoomTypeCode 
END


/****** Remove NoOfRooms Column from RoomType Table ***/

ALTER TABLE RoomType DROP COLUMN NoOfRooms


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoomType
	Comment : Changes in SP SearchAdvanceRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoomType]    Script Date: 1/22/2018 5:29:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoomType]
			@RateTypeId		=	NULL	,
			@ArrivalDate	=	NULL	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomTypeCode	=	''	,
			@Description	=	''		,
			@AvailableRooms	=	NULL	,
			@RoomCapacity	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoomType]
	@RateTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomTypeCode		NVARCHAR(25)		=	NULL,
	@Description		NVARCHAR(1000)		=	NULL,
	@AvailableRooms		INT					=	NULL,
	@RoomCapacity		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT * FROM 
	(
		SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  ROT.RoomTypeCode ASC

				) AS RowNum,
				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,				
				ISNULL(ROT.[RoomCapacity],0) AS RoomCapacity,				
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				(
					(
						SELECT COUNT(*) As TotalRooms
						FROM Room 
						WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
							AND RoomTypeId = ROT.Id
					)
					 - 
					(
						SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
							AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
							AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
							AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsCheckOut,0) = 1
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = ROT.Id
					)
				)  AS AvailableRooms,

				RAT.Id AS RateTypeId,
				ISNULL(RAT.RateTypeCode,'') AS RateTypeCode,
				ISNULL(RAT.[Description],'') AS RateTypeDescription,

				RTRTM.[Id] AS [RoomTypeRateTypeMappingId],
				ISNULL(RTRTM.[Amount],0) AS Amount,
				ISNULL(RTRTM.[Description],'') AS	[RoomTypeRateTypeMappingDescription]			
				
			FROM RoomType ROT 
					LEFT JOIN RoomTypeRateTypeMapping RTRTM ON ROT.Id = RTRTM.RoomTypeId 
						AND ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
					LEFT JOIN RateType RAT ON RAT.Id = RTRTM.RateTypeId
						AND ISNULL(RAT.IsDeleted,0) = 0 AND ISNULL(RAT.IsActive,0) = 1
			WHERE	ISNULL(ROT.IsDeleted,0) = 0 AND ISNULL(ROT.IsActive,0) = 1						  
					AND (@RateTypeId IS NULL OR RAT.Id = @RateTypeId)
					AND (ISNULL(@RoomTypeCode,'') = '' OR ROT.RoomTypeCode LIKE '%' + @RoomTypeCode + '%')
					AND (ISNULL(@Description,'') = '' OR ROT.[Description] LIKE '%' + @Description + '%')					
					AND (ISNULL(@RoomCapacity,0) = 0 OR ROT.[RoomCapacity] = @RoomCapacity)
					
		) AS A	
		WHERE ISNULL(@AvailableRooms,0) = 0 OR A.AvailableRooms = @AvailableRooms				
				
END


/*******************************************************************************************************************
	SP Name : AddRoomType
	Comment : Changes in SP AddRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRoomType]    Script Date: 1/22/2018 5:35:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoomType]
	@RoomTypeCode	NVARCHAR(25)			,
	@Description	NVARCHAR(500)	= NULL	,	
	@RoomCapacity	INT				= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RoomType]
           ([Id]
           ,[RoomTypeCode]
           ,[Description]		   
		   ,[RoomCapacity]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeCode
			   ,@Description			   
			   ,@RoomCapacity
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : UpdateRoomType
	Comment : Changes in SP UpdateRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomType]    Script Date: 1/22/2018 5:36:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRoomType]
	@Id				UNIQUEIDENTIFIER			,
	@RoomTypeCode	NVARCHAR(25)				,	
	@Description	NVARCHAR(500)		=	NULL,		
	@RoomCapacity	INT					=	NULL,	
	@IsActive		BIT,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomType] 
		SET	[RoomTypeCode]	= @RoomTypeCode
           ,[Description]	= @Description		   
		   ,[RoomCapacity]	= @RoomCapacity
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : SearchRoomType
	Comment : Changes in SP SearchRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoomType]    Script Date: 1/22/2018 5:36:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoomType] '', 10, 1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoomType]		
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,	
	@RoomCapacity	INT				=	NULL	,
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoomType
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,   [RoomTypeCode]	NVARCHAR(25)		NOT NULL
		,   [Description]	NVARCHAR(500)		NULL		
		,	[RoomCapacity]	INT					NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[RoomType]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@RoomTypeCode,'') = '' OR RoomTypeCode LIKE '%'+ @RoomTypeCode +'%')  								
								AND (ISNULL(@RoomCapacity,0) = 0 OR [RoomCapacity] =  @RoomCapacity)	
						)


		INSERT INTO #tempRoomType ([RowNum], [Id], [RoomTypeCode], [Description], [RoomCapacity], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN [RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN [RoomTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [RoomTypeCode] END ASC

				) AS RowNum,
				[ID],
				[RoomTypeCode],
				[Description],				
				[RoomCapacity],
				[CreatedOn],
				[IsActive]
			FROM [dbo].[RoomType]
				WHERE	ISNULL(IsDeleted,0) = 0
						AND (ISNULL(@RoomTypeCode,'') = '' OR RoomTypeCode LIKE '%'+ @RoomTypeCode +'%')  						
						AND (ISNULL(@RoomCapacity,0) = 0 OR [RoomCapacity] =  @RoomCapacity)	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[RoomTypeCode],
			temp.[Description],			
			temp.[RoomCapacity],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoomType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/****** Create new table ReservationStatus **********/


/****** Object:  Table [dbo].[ReservationStatus]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationStatus](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[Code]	[nvarchar](50) NOT NULL,
	[Description] [nvarchar](1000) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationStatus] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/*********** Add new column ReservationStatusId to Reservation Table ****/


ALTER TABLE Reservation ADD ReservationStatusId UNIQUEIDENTIFIER NULL
GO



/*********** Add Default ReservationStatus data  *****/

INSERT INTO [dbo].[ReservationStatus] ([Id],[Name],[Code],[CreatedBy],[CreatedOn],[IsActive])
VALUES ('FB5C5376-8872-4ED8-9A1C-CBF8BB0716AA','CHECKED IN', 'CHECKEDIN', 1, GETDATE(),1)

INSERT INTO [dbo].[ReservationStatus] ([Id],[Name],[Code],[CreatedBy],[CreatedOn],[IsActive])
VALUES ('C019A362-1A34-4D4F-A793-5182406D4DB3','DUE OUT ', 'DUEOUT', 1, GETDATE(),1)

INSERT INTO [dbo].[ReservationStatus] ([Id],[Name],[Code],[CreatedBy],[CreatedOn],[IsActive])
VALUES ('94488A00-864A-4A4D-B742-68FBB84ED5D9','CHECKED OUT', 'CHECKEDOUT', 1, GETDATE(),1)


/*******************************************************************************************************************
	SP Name : UpdateReservationStatus
	Comment : Create SP UpdateReservationStatus	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[UpdateReservationStatus]    Script Date: 1/22/2018 6:07:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationStatus]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,	
	@ReservationStatusId	UNIQUEIDENTIFIER	=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET
		[ReservationStatusId]	=	@ReservationStatusId
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				

END

/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Changes in SP SearchGuest	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/22/2018 6:25:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
								AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(@DepartureDate,'') <> '' AND ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(@DepartureDate,'') <> '' AND ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
					AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END

/**** Update Reservation Status Id in Reservation Table. *****/

UPDATE Reservation SET ReservationStatusId = (SELECT TOP 1 [Id] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'CHECKEDIN')
WHERE ISNULL(IsCheckIn,0) = 1 AND ISNULL(IsCheckOut,0) = 0


UPDATE Reservation SET ReservationStatusId = (SELECT TOP 1 [Id] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'CHECKEDOUT')
WHERE ISNULL(IsCheckIn,0) = 1 AND ISNULL(IsCheckOut,0) = 1


/*******************************************************************************************************************
	SP Name : GetReservationStatusById
	Comment : Create SP GetReservationStatusById	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationStatusById]    Script Date: 1/22/2018 6:37:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationStatusById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationStatus]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END



/************************************************************************************************************************************/

Name : Nilesh
Date : 23-JAN-2018


/******* Add Description column into ReservationType Table ****/


ALTER TABLE ReservationType ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddReservationType
	Comment : Changes in SP AddReservationType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationType]    Script Date: 1/23/2018 2:20:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationType]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationType]
           ([Id]           
           ,[Name]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateReservationType
	Comment : Changes in SP UpdateReservationType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationType]    Script Date: 1/23/2018 2:20:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationType]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationType]
		SET	[Name]			=	@Name		
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchReservationType
	Comment : Changes in SP SearchReservationType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationType]    Script Date: 1/23/2018 2:21:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationType] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchReservationType]					
	@Name			NVARCHAR(500)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationType
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationType]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 
						)


		INSERT INTO #tempReservationType ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationType]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/******* Add Description column into Package Table ****/


ALTER TABLE Package ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddPackage
	Comment : Changes in SP AddPackage	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPackage]    Script Date: 1/23/2018 2:37:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddPackage]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Package]
           ([Id]           
           ,[Name]		
		   ,[Description]   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdatePackage
	Comment : Changes in SP UpdatePackage	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePackage]    Script Date: 1/23/2018 2:37:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdatePackage]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Package]
		SET	[Name]			=	@Name		
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchPackage
	Comment : Changes in SP SearchPackage	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPackage]    Script Date: 1/23/2018 2:38:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPackage] '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchPackage]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	= 	NULL	,
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPackage
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Package]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  	
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  								
						)


		INSERT INTO #tempPackage ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Package]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPackage AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/******* Add Description column into Market Table ****/


ALTER TABLE Market ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddMarket
	Comment : Changes in SP AddMarket	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddMarket]    Script Date: 1/23/2018 2:48:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddMarket]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Market]
           ([Id]           
           ,[Name]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateMarket
	Comment : Changes in SP UpdateMarket	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateMarket]    Script Date: 1/23/2018 2:49:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateMarket]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Market]
		SET	[Name]			=	@Name
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : SearchMarket
	Comment : Changes in SP SearchMarket	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchMarket]    Script Date: 1/23/2018 2:50:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchMarket] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchMarket]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempMarket
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Market]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempMarket ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Market]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempMarket AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/******* Add Description column into ReservationSource Table ****/


ALTER TABLE ReservationSource ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddReservationSource
	Comment : Changes in SP AddReservationSource	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationSource]    Script Date: 1/23/2018 2:58:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationSource]	
	@Name			NVARCHAR(500)			,		
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationSource]
           ([Id]           
           ,[Name]		
		   ,[Description]   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateReservationSource
	Comment : Changes in SP UpdateReservationSource	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationSource]    Script Date: 1/23/2018 2:59:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationSource]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@Description	NVARCHAR(MAX)		=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationSource]
		SET	[Name]			=	@Name	
		   ,[Description]	=	@Description	   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : SearchReservationSource
	Comment : Changes in SP SearchReservationSource	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationSource]    Script Date: 1/23/2018 3:00:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationSource] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchReservationSource]					
	@Name			NVARCHAR(500)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationSource
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(MAX)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationSource]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  
						)


		INSERT INTO #tempReservationSource ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationSource]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  	
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  				 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationSource AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/******* Add Description column into PaymentMethod Table ****/


ALTER TABLE PaymentMethod ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddPaymentMethod
	Comment : Changes in SP AddPaymentMethod	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPaymentMethod]    Script Date: 1/23/2018 3:10:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddPaymentMethod]	
	@Name			NVARCHAR(500)			,
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[PaymentMethod]
           ([Id]           
           ,[Name]		   		
		   ,[Description]   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdatePaymentMethod
	Comment : Changes in SP UpdatePaymentMethod	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePaymentMethod]    Script Date: 1/23/2018 3:12:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdatePaymentMethod]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@Description	NVARCHAR(MAX)		=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[Name]			=	@Name		
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchPaymentMethod
	Comment : Changes in SP SearchPaymentMethod	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPaymentMethod]    Script Date: 1/23/2018 3:12:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPaymentMethod] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchPaymentMethod]					
	@Name			NVARCHAR(500)	=	NULL	,
	@Description	NVARCHAR(MAX)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPaymentMethod
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(MAX)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PaymentMethod]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempPaymentMethod ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[PaymentMethod]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPaymentMethod AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/******* Add Description column into UserRole Table ****/


ALTER TABLE UserRole ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddUserRole
	Comment : Changes in SP AddUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUserRole]    Script Date: 1/23/2018 3:37:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUserRole]	
	@Code			NVARCHAR(25)				,	
	@Name			NVARCHAR(500)				,
	@Description	NVARCHAR(MAX)	=	NULL	,				
	@IsActive		BIT				=	NULL	,	
	@CreatedBy		INT				=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UserRole]
           ([Id]           
		   ,[Code]		   		
           ,[Name]		
		   ,[Description]   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id	
			   ,@Code
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateUserRole
	Comment : Changes in SP UpdateUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUserRole]    Script Date: 1/23/2018 3:37:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateUserRole]
	@Id				UNIQUEIDENTIFIER			,	
	@Code			NVARCHAR(25)				,	
	@Name			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	NULL	,
	@IsActive		BIT				=	NULL	,	
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRole]
		SET	[Name]			=	@Name		   		   
		   ,[Code]			=	@Code
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchUserRole
	Comment : Changes in SP SearchUserRole	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchUserRole]    Script Date: 1/23/2018 3:38:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserRole] '', '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchUserRole]					
	@Code			NVARCHAR(25)	=	NULL	,		
	@Name			NVARCHAR(500)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserRole
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(25)		NOT NULL	
		,   [Name]			NVARCHAR(500)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[UserRole]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%') 
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')								
						)


		INSERT INTO #tempUserRole ([RowNum], [Id], [Code], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],		
				[Code],						
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[UserRole]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Code],				
			temp.[Name],
			temp.[Description],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempUserRole AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/********************************************************************************************************/


/*********** Create new table RoomFeatures ******/


/****** Object:  Table [dbo].[RoomFeatures]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RoomFeatures](
	[Id] [uniqueidentifier] NOT NULL,	
	[Name] [nvarchar](500) NOT NULL,
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_RoomFeatures] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddRoomFeatures
	Comment : Create SP AddRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRoomFeatures]    Script Date: 1/23/2018 4:04:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddRoomFeatures]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RoomFeatures]
           ([Id]           
           ,[Name]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateRoomFeatures
	Comment : Create SP UpdateRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomFeatures]    Script Date: 1/23/2018 4:06:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomFeatures]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeatures]
		SET	[Name]			=	@Name
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteRoomFeatures
	Comment : Create SP DeleteRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteRoomFeatures]    Script Date: 1/23/2018 4:06:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRoomFeatures]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeatures] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetRoomFeaturesById
	Comment : Create SP GetRoomFeaturesById	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomFeaturesById]    Script Date: 1/23/2018 4:07:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRoomFeaturesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomFeatures]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetRoomFeatures
	Comment : Create SP GetRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomFeatures]    Script Date: 1/23/2018 4:07:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRoomFeatures]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomFeatures]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchRoomFeatures
	Comment : Create SP SearchRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoomFeatures]    Script Date: 1/23/2018 4:08:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoomFeatures] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchRoomFeatures]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoomFeatures
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[RoomFeatures]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempRoomFeatures ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,
						
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN [Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN [Description] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[RoomFeatures]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoomFeatures AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/****************************************************************************************************************/

Name : Nilesh
Date : 24-JAN-2018

/*********** Create new table RoomFeaturesMapping ******/

/****** Object:  Table [dbo].[RoomFeaturesMapping]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RoomFeaturesMapping](
	[Id] [UNIQUEIDENTIFIER] NOT NULL,	
	[RoomId] [UNIQUEIDENTIFIER] NOT NULL,
	[RoomFeatureId] [UNIQUEIDENTIFIER] NOT NULL,	
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_RoomFeaturesMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



/*******************************************************************************************************************
	SP Name : AddUpdateRoomFeaturesMapping
	Comment : Create SP AddUpdateRoomFeaturesMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateRoomFeaturesMapping]    Script Date: 1/24/2018 12:08:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUpdateRoomFeaturesMapping]
	@RoomId				UNIQUEIDENTIFIER			,	
	@RoomFeatureId		UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	IF NOT EXISTS (SELECT * FROM [RoomFeaturesMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [RoomId] = @RoomId 
								AND [RoomFeatureId] = @RoomFeatureId)
	BEGIN		
		INSERT INTO [dbo].[RoomFeaturesMapping]
			   ([Id]
			   ,[RoomId]			   
			   ,[RoomFeatureId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@RoomId					
					,@RoomFeatureId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[RoomFeaturesMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [RoomFeatureId] = @RoomFeatureId 
					AND [RoomId] = @RoomId
	END
			
	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteRoomFeaturesMappingByRoom
	Comment : Create SP DeleteRoomFeaturesMappingByRoom	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteRoomFeaturesMappingByRoom]    Script Date: 1/24/2018 12:11:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRoomFeaturesMappingByRoom]	
	@RoomId			UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeaturesMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND RoomId = @RoomId
	

	SELECT @RoomId AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteRoomFeaturesMapping
	Comment : Create SP DeleteRoomFeaturesMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteRoomFeaturesMapping]    Script Date: 1/24/2018 12:11:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRoomFeaturesMapping]	
	@Id			UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeaturesMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
	

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetRoomFeaturesMapping
	Comment : Create SP GetRoomFeaturesMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomFeaturesMapping]    Script Date: 1/24/2018 12:14:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomFeaturesMapping] 		
		@RoomId = NULL,
		@RoomFeatureId = NULL
*/
CREATE PROCEDURE [dbo].[GetRoomFeaturesMapping]		
	@RoomId			UNIQUEIDENTIFIER = NULL,
	@RoomFeatureId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT RFM.*,R.RoomNo AS RoomNo,R.[Description] AS RoomDescription,
		RF.[Name] AS RoomFeature, RF.[Description] AS RoomFeatureDescription
	 FROM [dbo].[RoomFeaturesMapping] RFM
			INNER JOIN [dbo].[Room] R ON R.Id = RFM.RoomId 
				AND ISNULL(R.IsDeleted,0) = 0
			LEFT JOIN [dbo].[RoomFeatures] RF ON RF.Id = RFM.RoomFeatureId
				AND ISNULL(RF.IsDeleted,0) = 0
		WHERE	ISNULL(RFM.IsDeleted,0) = 0
				AND (@RoomFeatureId IS NULL OR RFM.RoomFeatureId = @RoomFeatureId)
				AND (@RoomId IS NULL OR RFM.RoomId = @RoomId)
		ORDER BY RFM.CreatedOn
END



/*******************************************************************************************************************
	SP Name : SearchRoom
	Comment : Changes in SP SearchRoom	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoom]    Script Date: 1/24/2018 1:08:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoom] NULL, NULL, '118',1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoom]
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,	
	@FloorId		UNIQUEIDENTIFIER	=	NULL	,	
	@RoomNo			NVARCHAR(255)		=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoom
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]			NVARCHAR(50)		NULL	
		,   [RoomNo]		NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]	NVARCHAR(255)		NULL
		,	[FloorId]		UNIQUEIDENTIFIER	NULL
		,	[FloorName]		NVARCHAR(255)		NULL
		,	[FloorNo]		INT					NULL
		,	[RoomFeatures]	NVARCHAR(MAX)		NULL				
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Room] R
							INNER JOIN [Floor] F ON F.Id = R.FloorId
								AND ISNULL(F.IsDeleted,0) = 0
							LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
								AND ISNULL(RT.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
								AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
								AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  
						)


		INSERT INTO #tempRoom 
		(
			[RowNum]		, 
			[Id]			, 
			[Type]			, 
			[RoomNo]		, 
			[Description]	, 
			[RoomTypeId]	, 
			[RoomTypeCode]	,
			[FloorId]		, 
			[FloorName]		,
			[FloorNo]		,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN R.[Type] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN R.[Type] END DESC,

					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
						THEN R.[RoomNo] END ASC,
					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'desc'
						THEN R.[RoomNo] END DESC,

					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Name] END ASC

			) AS RowNum,
			R.Id,				
			ISNULL(R.[Type],'') AS [Type],
			ISNULL(R.[RoomNo],'') AS [RoomNo],
			ISNULL(R.[Description],'') AS [Description],
			R.RoomTypeId,
			ISNULL(RT.RoomTypeCode,'') AS [RoomTypeCode],
			R.FloorId,
			ISNULL(F.[Name],'') AS [FloorName],
			F.[FloorNo],
			R.[CreatedOn],
			R.[IsActive]
	FROM [dbo].[Room] R
			INNER JOIN [Floor] F ON F.Id = R.FloorId
				AND ISNULL(F.IsDeleted,0) = 0
			LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
				AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
				AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Room Features by comma seprated.
	UPDATE temp
		SET [RoomFeatures] = (STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM
						INNER JOIN Room R ON R.Id = RFM.RoomId
							AND ISNULL(R.IsDeleted,0) = 0
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
							AND RFM.RoomId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempRoom temp 	


	-- PAGING STARTED
	SELECT 
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[FloorId],
			temp.[FloorName],
			temp.[FloorNo],
			temp.[RoomFeatures],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoom AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END


/***********************************************************************************************/

/****** Create function split strings ***/

/****** Object:  UserDefinedFunction [dbo].[SplitStrings]    Script Date: 1/24/2018 2:47:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [DBO].[SplitStrings] (
     @INPUT NVARCHAR(MAX),
		@CHARACTER CHAR(1)
)
		RETURNS @OUTPUT TABLE (
		ITEM NVARCHAR(1000)
		)

AS
BEGIN
  DECLARE @STARTINDEX INT, @ENDINDEX INT
  SET @STARTINDEX = 1
  IF SUBSTRING(@INPUT, LEN(@INPUT) - 1, LEN(@INPUT)) <> @CHARACTER
  BEGIN
        SET @INPUT = @INPUT + @CHARACTER
  END

  WHILE CHARINDEX(@CHARACTER, @INPUT) > 0
  BEGIN
        SET @ENDINDEX = CHARINDEX(@CHARACTER, @INPUT)

        INSERT INTO @OUTPUT(ITEM)
        SELECT SUBSTRING(@INPUT, @STARTINDEX, @ENDINDEX - 1)

        SET @INPUT = SUBSTRING(@INPUT, @ENDINDEX + 1, LEN(@INPUT))
  END

	DELETE	@OUTPUT
	WHERE	ISNULL(ITEM,'') = ''

  RETURN

END -- END FUNCTION
GO


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Changes in SP SearchAdvanceRoom	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 1/24/2018 2:42:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	''		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	'1E918B53-B6B5-4EB7-B3F0-BE53CD44E86F'		,
			@IsClean		=	NULL	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(255)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[Id]					, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
							AND RFM.RoomId = R.Id						
			FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures

		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
					LEFT JOIN RoomFeaturesMapping RFM ON RFM.RoomId = R.Id
						AND ISNULL(RFM.IsDeleted,0) = 0  AND ISNULL(RFM.IsActive,0) = 1 
					LEFT JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
						AND ISNULL(RF.IsDeleted,0) = 0  AND ISNULL(RF.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND RS.[Name] = (CASE WHEN ISNULL(@IsClean,0) = 1 THEN  'Clean' ELSE RS.[Name] END)
					AND RS.[Name] = (CASE WHEN ISNULL(@IsDirty,0) = 1 THEN  'Dirty' ELSE RS.[Name] END)										
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.Id
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 


END


/*******************************************************************************************************************
	SP Name : GetTitlebyId
	Comment : Create SP GetTitlebyId	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetTitlebyId]    Script Date: 1/24/2018 5:54:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTitlebyId]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Title]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END


/***************************************************************************************************/

Name : Nilesh
Date : 29-JAN-2018


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Changes in SP SearchAdvanceRoom	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 1/29/2018 2:16:04 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	''		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	''		,
			@IsClean		=	NULL	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(255)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
		,	[ReservationId]			UNIQUEIDENTIFIER	NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[RoomId]				, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			,
			[ReservationId]		
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,				
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
						AND RFM.RoomId = R.Id						
						FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures,
				RL.ReservationId AS ReservationId
		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId, RL.ReservationId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
					LEFT JOIN RoomFeaturesMapping RFM ON RFM.RoomId = R.Id
						AND ISNULL(RFM.IsDeleted,0) = 0  AND ISNULL(RFM.IsActive,0) = 1 
					LEFT JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
						AND ISNULL(RF.IsDeleted,0) = 0  AND ISNULL(RF.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND RS.[Name] = (CASE WHEN ISNULL(@IsClean,0) = 1 THEN  'Clean' ELSE RS.[Name] END)
					AND RS.[Name] = (CASE WHEN ISNULL(@IsDirty,0) = 1 THEN  'Dirty' ELSE RS.[Name] END)										
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[RoomId],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures],
			temp.[ReservationId]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.[RoomId]
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 
END


/*******************************************************************************************************************
	SP Name : GetRoomTypeDetailsForRateSheet
	Comment : Changes in SP GetRoomTypeDetailsForRateSheet	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeDetailsForRateSheet]    Script Date: 1/29/2018 6:35:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeDetailsForRateSheet] '', '2018/01/30'
*/

ALTER PROCEDURE [dbo].[GetRoomTypeDetailsForRateSheet]
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,
	@ArrivalDate	NVARCHAR(25)	=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT	RT.Id,
			ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
			ISNULL(RT.[Description],'') AS [Description],
			ISNULL(RT.RoomCapacity,'') AS [RoomCapacity],
			(
				(
					SELECT COUNT(*) As TotalRooms
					FROM Room 
					WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
						AND RoomTypeId = RT.Id
				)
				 - 
				(
					SELECT COUNT(DISTINCT RL.Id) 
					FROM Room R 
					INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
						AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
						AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
					INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
						AND ISNULL(RE.IsDeleted,0) = 0 
						AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
					WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = RT.Id
				)
			)  AS AvailableRooms
		FROM RoomType RT
		WHERE	ISNULL(RT.IsDeleted,0) = 0 
				AND ISNULL(RT.IsActive,0) = 1
				AND (ISNULL(@RoomTypeCode,'') = '' OR RT.RoomTypeCode = @RoomTypeCode)
		ORDER BY RT.RoomTypeCode 
END

/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment : Changes in SP GetRoomDetailsForRoomPlan	
*******************************************************************************************************************/



/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 1/29/2018 1:06:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@RoomNo				=	'' ,
			@StartDate			=	'2018/01/29',
			@EndDate			=	'2018/01/31'
*/
ALTER PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND (
												( CAST(RL.CheckInDate  AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
												OR 
												( CAST(RL.CheckOutDate AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
										)
								) AS RL 
						ON RL.RoomId = R.Id
					LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 

			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END


/*******************************************************************************************************************
	SP Name : GetReservationDetailsForRoomPlan
	Comment : Changes in SP GetReservationDetailsForRoomPlan	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationDetailsForRoomPlan]    Script Date: 1/29/2018 1:15:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetReservationDetailsForRoomPlan]
			@RoomId				=	'014D170C-97F1-4876-BB45-E1F7FC690217' ,			
			@StartDate			=	'2018/01/01',
			@EndDate			=	'2018/01/07'
*/
ALTER PROCEDURE [dbo].[GetReservationDetailsForRoomPlan]
	@RoomId				UNIQUEIDENTIFIER	=	NULL,	
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT DISTINCT
				RL.ReservationId, 
				RL.ProfileId, 
				ISNULL(RE.FirstName,'') AS FirstName,
				ISNULL(RE.LastName,'') AS LastName,
				ISNULL(RE.NoOfNight,0) AS NoOfNight,
				RL.RoomId, 
				RL.RoomStatusId, 
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				CONVERT(varchar(12),RL.CheckInDate,103) AS CheckInDateString,
				RL.CheckInDate,
				CONVERT(varchar(12),RL.CheckOutDate,103) AS CheckOutDateString,
				RL.CheckOutDate
			FROM ReservationLog RL 
				INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0 
				INNER JOIN Room R ON RL.RoomId = R.Id
					AND ISNULL(R.IsDeleted,0) = 0  AND ISNULL(R.IsActive,0) = 1
				INNER JOIN IndividualProfile IPR ON IPR.Id = RE.ProfileId
					AND ISNULL(IPR.IsDeleted,0) = 0 AND ISNULL(IPR.IsActive,0) = 1
				LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
					AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 


			WHERE ISNULL(RL.IsDeleted,0) = 0 AND ISNULL(RL.IsActive,0) = 1 
				AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
				AND RL.RoomId = @RoomId
				AND (
						(CAST(RL.CheckInDate  AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
						OR (CAST(RL.CheckOutDate AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
					) 

			ORDER BY RL.CheckInDate, RL.CheckOutDate ASC

END


/*******************************************************************************************************************
	SP Name : GetReservationLogByRoom
	Comment : Create SP GetReservationLogByRoom	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationLogByRoom]    Script Date: 1/24/2018 5:54:10 PM ******/

/****** Object:  StoredProcedure [dbo].[GetReservationLogByRoom]    Script Date: 1/24/2018 5:54:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationLogByRoom]
	@RoomId			UNIQUEIDENTIFIER				,
	@RoomStatusId	UNIQUEIDENTIFIER	=	NULL	,
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate	DATETIME			=	NULL	,
	@DepartureDate	DATETIME			=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RL.* FROM [dbo].[ReservationLog] RL 
			INNER JOIN Reservation R ON R.Id = RL.ReservationId
			AND ISNULL(R.IsDeleted,0) = 0 
		WHERE	ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1 
				AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
				AND 
				(
					(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
						OR 
					(ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
				)
				AND RoomId = @RoomId
				AND @RoomStatusId IS NULL OR RL.RoomStatusId = @RoomStatusId
				AND @ReservationId IS NULL OR RL.ReservationId = @ReservationId

END

/*******************************************************************************************************************
	SP Name : ChangeRoomAndReservationMappingDetails
	Comment : Create SP ChangeRoomAndReservationMappingDetails	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[ChangeRoomAndReservationMappingDetails]    Script Date: 1/29/2018 5:33:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ChangeRoomAndReservationMappingDetails]
	@ReservationId	UNIQUEIDENTIFIER				,
	@RoomId			UNIQUEIDENTIFIER				,
	@RoomTypeId		UNIQUEIDENTIFIER				,
	@ArrivalDate	DATETIME			=	NULL	,
	@DepartureDate	DATETIME			=	NULL	,
	@UpdatedBy		INT						
AS
BEGIN
	SET NOCOUNT ON;

	--Update Reservation
		UPDATE [dbo].[Reservation]
		SET	[ArrivalDate] = (CASE WHEN @ArrivalDate IS NOT NULL THEN @ArrivalDate ELSE [ArrivalDate] END)    
		   ,[DepartureDate] = (CASE WHEN @DepartureDate IS NOT NULL THEN @DepartureDate ELSE [DepartureDate] END)
		   ,[RoomTypeId] = @RoomTypeId
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @ReservationId

	--Update ReservationRoomMapping
	UPDATE [dbo].[ReservationRoomMapping]
		SET	[RoomId] = @RoomId      		        
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @ReservationId

	--Update ReservationLog
	UPDATE [dbo].[ReservationLog]
		SET	[RoomId] = @RoomId       
		   ,[CheckInDate] = (CASE WHEN @ArrivalDate IS NOT NULL THEN @ArrivalDate ELSE [CheckInDate] END)    
		   ,[CheckOutDate] = (CASE WHEN @DepartureDate IS NOT NULL THEN @DepartureDate ELSE [CheckOutDate] END)
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @ReservationId


	--Update CheckInCheckOutDetail
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[CheckInDate] = (CASE WHEN @ArrivalDate IS NOT NULL THEN @ArrivalDate ELSE [CheckInDate] END)    
		   ,[CheckOutDate] = (CASE WHEN @DepartureDate IS NOT NULL THEN @DepartureDate ELSE [CheckOutDate] END)
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @ReservationId
	

	SELECT @ReservationId AS Id    
END



/********************************************************************************************************************/

Name : Nilesh
Date : 30-JAN-2018


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoomType
	Comment : Changes in SP SearchAdvanceRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoomType]    Script Date: 1/30/2018 11:20:35 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoomType]
			@RateTypeId		=	'3518A524-6388-4632-80AF-118D2AFBD122'	,
			@ArrivalDate	=	NULL	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomTypeCode	=	'KNGN'	,
			@Description	=	''		,
			@AvailableRooms	=	0		,
			@RoomCapacity	=	NULL	,
			@IsWeekEndPrice =	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoomType]
	@RateTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomTypeCode		NVARCHAR(25)		=	NULL,
	@Description		NVARCHAR(1000)		=	NULL,
	@AvailableRooms		INT					=	NULL,
	@RoomCapacity		INT					=	NULL,
	@IsWeekEndPrice		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT * FROM 
	(
		SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  ROT.RoomTypeCode ASC

				) AS RowNum,
				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,				
				ISNULL(ROT.[RoomCapacity],0) AS RoomCapacity,				
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				(
					(
						SELECT COUNT(*) As TotalRooms
						FROM Room 
						WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
							AND RoomTypeId = ROT.Id
					)
					 - 
					(
						SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
							AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
							--AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
							AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsCheckOut,0) = 1
							AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = ROT.Id
							AND (
									(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
									OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
								)
					)
				)  AS AvailableRooms,

				RAT.Id AS RateTypeId,
				ISNULL(RAT.RateTypeCode,'') AS RateTypeCode,
				ISNULL(RAT.[Description],'') AS RateTypeDescription,

				RTRTM.[Id] AS [RoomTypeRateTypeMappingId],
				ISNULL(RTRTM.[Amount],0) AS Amount,
				ISNULL(RTRTM.[Description],'') AS	[RoomTypeRateTypeMappingDescription]			
				
			FROM RoomType ROT 
					LEFT JOIN RoomTypeRateTypeMapping RTRTM ON ROT.Id = RTRTM.RoomTypeId 
						AND ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
						AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
					LEFT JOIN RateType RAT ON RAT.Id = RTRTM.RateTypeId
						AND ISNULL(RAT.IsDeleted,0) = 0 AND ISNULL(RAT.IsActive,0) = 1
			WHERE	ISNULL(ROT.IsDeleted,0) = 0 AND ISNULL(ROT.IsActive,0) = 1						  
					AND (@RateTypeId IS NULL OR RAT.Id = @RateTypeId)
					AND (ISNULL(@RoomTypeCode,'') = '' OR ROT.RoomTypeCode LIKE '%' + @RoomTypeCode + '%')
					AND (ISNULL(@Description,'') = '' OR ROT.[Description] LIKE '%' + @Description + '%')					
					AND (ISNULL(@RoomCapacity,0) = 0 OR ROT.[RoomCapacity] = @RoomCapacity)
					
		) AS A	
		WHERE ISNULL(@AvailableRooms,0) = 0 OR A.AvailableRooms = @AvailableRooms				
						


END



/*************** Create new Table UserRoleMapping *********/

/****** Object:  Table [dbo].[UserRoleMapping]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UserRoleMapping](
	[Id] [uniqueidentifier] NOT NULL,
	[UserId] [uniqueidentifier] NOT NULL,
	[UserRoleId] [uniqueidentifier] NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_UserRoleMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/*********** Add User Role Mapping data ****************/

-- Add User Role Mapping- Admin
INSERT INTO [dbo].[UserRoleMapping] ([Id],[UserRoleId],[UserId],[CreatedOn],[IsActive],[CreatedBy]) 
	VALUES (NEWID(), (SELECT Id FROM UserRole WHERE Code = 'ADMIN'), (SELECT Id FROM UserDetail WHERE [Name] = 'Admin'), GETDATE(),1,(SELECT UserId FROM UserDetail WHERE [Name] = 'Admin'))
	
	
-- Student
INSERT INTO [dbo].[UserDetail] ([Id],[UserRoleId],[Name],[Email],[Password],[CreatedOn],[IsActive],[UserId]) 
	VALUES (NEWID(), (SELECT Id FROM UserRole WHERE Code = 'STUDENT'), 'Nilesh' ,'nilesh.sonkusare@techavidus.com', 'c35n4z3mFEpQSquyRnYzFg==',  GETDATE(), 1, (SELECT (ISNULL(MAX(UserId),0) + 1) FROM UserDetail))
	
-- Add User Role Mapping - Student
INSERT INTO [dbo].[UserRoleMapping] ([Id],[UserRoleId],[UserId],[CreatedOn],[IsActive],[CreatedBy]) 
	VALUES (NEWID(), (SELECT Id FROM UserRole WHERE Code = 'STUDENT'), (SELECT Id FROM UserDetail WHERE [Name] = 'Nilesh'), GETDATE(),1,(SELECT UserId FROM UserDetail WHERE [Name] = 'Nilesh'))

/*******************************************************************************************************************
	SP Name : GetUserRoleByUserId
	Comment : Create SP GetUserRoleByUserId	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetUserRoleByUserId]    Script Date: 1/30/2018 1:59:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserRoleByUserId]
	@UserId 	UNIQUEIDENTIFIER = NULL		,
	@UserRoleId UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT UR.*,UD.Id AS UserId, UD.[Name] AS UserName, UD.Email AS UserEmail
			FROM [dbo].[UserRole] UR
			INNER JOIN [dbo].[UserRoleMapping] URM ON UR.Id = URM.UserRoleId
				AND ISNULL(URM.IsDeleted,0) = 0  AND ISNULL(URM.IsActive,0) = 1 
			INNER JOIN [dbo].[UserDetail] UD ON UD.Id = URM.UserId
				AND ISNULL(UD.IsDeleted,0) = 0  AND ISNULL(UD.IsActive,0) = 1 
				
		WHERE	ISNULL(UR.IsDeleted,0) = 0  AND ISNULL(UR.IsActive,0) = 1 
				AND (@UserId IS NULL OR URM.UserId = @UserId)
				AND (@UserRoleId IS NULL OR URM.UserRoleId = @UserRoleId)		
END


/*******************************************************************************************************************
	SP Name : SearchIndividualProfile
	Comment : Changes in SP SearchIndividualProfile	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchIndividualProfile]    Script Date: 1/30/2018 3:39:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchIndividualProfile] 
		@FirstName			=	''	, 
		@LastName			=	''	,
		@TelephoneNo		=	''	,
		@Email				=	''	,
		@PageNum			=	1	,
		@PageSize			=	10	,
		@SortColumn			=	''	,
		@SortDirection		=	''	,
		@CreatedBy			=	2	,
		@IsAdminUser		=	1	
*/

ALTER PROCEDURE [dbo].[SearchIndividualProfile]		
	@FirstName		NVARCHAR(255)	=	NULL,
	@LastName		NVARCHAR(255)	=	NULL,
	@TelephoneNo	NVARCHAR(255)	=	NULL,
	@Email			NVARCHAR(255)	=	NULL,		
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL,
	@CreatedBy		INT				=	NULL,
	@IsAdminUser	BIT				=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempIndividualProfile
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,	[Title]			NVARCHAR(50)		NULL
		,   [FirstName]		NVARCHAR(255)		NULL
		,   [LastName]		NVARCHAR(255)		NULL
		,   [TelephoneNo]	NVARCHAR(50)		NULL
		,   [Email]			NVARCHAR(500)		NULL		
		,   [Address]		NVARCHAR(255)		NULL
		,   [City]			NVARCHAR(100)		NULL		
		,   [ZipCode]		NVARCHAR(50)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[IndividualProfile] P
							LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
							LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
							LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
							LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
						WHERE	ISNULL(P.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
								AND (ISNULL(@TelephoneNo,'') = '' OR P.[TelephoneNo] LIKE '%'+ @TelephoneNo +'%')  
								AND (ISNULL(@Email,'') = '' OR P.[Email] LIKE '%'+ @Email +'%')  
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						)


		INSERT INTO #tempIndividualProfile 
		(
			[RowNum], 
			[Id], 
			[Title], 
			[FirstName], 
			[LastName], 
			[TelephoneNo], 
			[Email],   
			[Address],
			[City],
			[ZipCode],
			[CreatedOn], 
			[IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN P.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN P.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Title' and @SortDirection = 'asc'
							THEN T.[Title] END ASC,
						CASE WHEN @SortColumn = 'Title' and @SortDirection = 'desc'
							THEN T.[Title] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN P.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN P.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN P.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN P.[LastName] END DESC,

						CASE WHEN @SortColumn = 'TelephoneNo' and @SortDirection = 'asc'
							THEN P.[TelephoneNo] END ASC,
						CASE WHEN @SortColumn = 'TelephoneNo' and @SortDirection = 'desc'
							THEN P.[TelephoneNo] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN P.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN P.[Email] END DESC,

						CASE WHEN @SortColumn = 'City' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'City' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'ZipCode' and @SortDirection = 'asc'
							THEN P.[ZipCode] END ASC,
						CASE WHEN @SortColumn = 'ZipCode' and @SortDirection = 'desc'
							THEN P.[ZipCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN P.[LastName] END ASC

				) AS RowNum,
				P.[Id], 
				ISNULL(T.[Title],'') AS Title,
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@TelephoneNo,'') = '' OR P.[TelephoneNo] LIKE '%'+ @TelephoneNo +'%')  
						AND (ISNULL(@Email,'') = '' OR P.[Email] LIKE '%'+ @Email +'%')  
						AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id], 
			temp.[Title], 
			temp.[FirstName], 
			temp.[LastName], 
			temp.[TelephoneNo], 
			temp.[Email],   
			temp.[Address],
			temp.[City],
			temp.[ZipCode],
			temp.[CreatedOn], 
			temp.[IsActive], 
			@TotalCount AS TotalCount
	FROM	
		#tempIndividualProfile AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchAdvanceProfile
	Comment : Changes in SP SearchAdvanceProfile	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceProfile]    Script Date: 1/30/2018 3:41:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceProfile]
			@LastName			=	''		,
			@FirstName			=	''		,
			@ViewBy				=	NULL	,
			@City				=	''		,
			@PostalCode			=	''		,
			@MemberTypeId		=	NULL	,
			@MemberNo			=	''		,
			@Keyword			=	''		,
			@Communication		=	''		,
			@ClientID			=	''		,
			@CorpNo				=	''		,
			@IATANo				=	''		,
			@IsNegRates			=	0		,
			@IsShowInActive		=	0		,
			@CreatedBy			=	2		,
			@IsAdminUser		=	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceProfile]
	@LastName			NVARCHAR(255)		=	NULL,
	@FirstName			NVARCHAR(255)		=	NULL,
	@ViewBy				UNIQUEIDENTIFIER	=	NULL,
	@City				NVARCHAR(255)		=	NULL,
	@PostalCode			NVARCHAR(255)		=	NULL,
	@MemberTypeId		UNIQUEIDENTIFIER	=	NULL,
	@MemberNo			NVARCHAR(255)		=	NULL,
	@Keyword			NVARCHAR(255)		=	NULL,
	@Communication		NVARCHAR(255)		=	NULL,
	@ClientID			NVARCHAR(255)		=	NULL,
	@IATANo				NVARCHAR(255)		=	NULL,
	@CorpNo				NVARCHAR(255)		=	NULL,
	@IsNegRates			BIT					=	NULL,
	@IsShowInActive		BIT					=	NULL,
	@CreatedBy			INT					=	NULL,
	@IsAdminUser		BIT					=	NULL

AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  P.[CreatedOn] DESC

				) AS RowNum,
				P.[Id], 
				T.Id AS TitleId,
				ISNULL(T.[Title],'') AS Title, 
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				ISNULL(P.[CountryId],0) AS CountryId,
				ISNULL(P.[StateId],0) AS StateId,
				ISNULL(P.[CityId],0) AS CityId,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@City,'') = '' OR C.[Name] LIKE '%'+ @City +'%')  
						AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')  
						AND (@IsShowInActive IS NULL OR 
								P.IsActive IN  (CASE WHEN @IsShowInActive = 0 THEN 1 ELSE P.IsActive END))
						AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))


END


/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment : Changes in SP SearchReservation	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 1/30/2018 3:50:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	NULL,
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	1,
		@IsShowCheckedOutReservation	=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR R.[IsReservationCancel] = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR R.[IsCheckIn] = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
									)	
								AND (
										@IsShowCheckedOutReservation IS NULL OR R.[IsCheckOut] = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
									)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)							
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
									)	
								AND (
										@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
									)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)														

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Changes in SP SearchArrivals	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/30/2018 4:23:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=	0, 
		@RoomNumber						=	'',
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0								
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0					
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Changes in SP SearchGuest	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/30/2018 4:26:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
								AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(@DepartureDate,'') <> '' AND ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(@DepartureDate,'') <> '' AND ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
					AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END


/****************************************************************************************************************/

/*******************************************************************************************************************
	SP Name : AddUserDetail
	Comment : Changes in SP AddUserDetail	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUserDetail]    Script Date: 1/30/2018 5:51:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUserDetail]		
	@Name			NVARCHAR(500)					,		
	@Email			NVARCHAR(500)					,		
	@Password		NVARCHAR(2000)					,
	@IsActive		BIT					=	NULL	,	
	@CreatedBy		INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	DECLARE @UserId AS INT = 0
	SET @UserId = (SELECT ISNULL(MAX(UserId),0) AS MaxUserId FROM [dbo].[UserDetail])

	SET @UserId = (@UserId + 1)

	INSERT INTO [dbo].[UserDetail]
           ([Id]           		   
           ,[Name]		
		   ,[Email]
		   ,[Password]   
		   ,[UserId]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id					      
			   ,@Name		
			   ,@Email
			   ,@Password
			   ,@UserId	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateUserDetail
	Comment : Create SP UpdateUserDetail	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[UpdateUserDetail]    Script Date: 1/30/2018 5:54:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateUserDetail]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,		
	@Email			NVARCHAR(500)					,			
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserDetail] 
		SET	[Name]			= @Name		   
		   ,[Email]			= @Email
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : DeleteUserDetail
	Comment : Create SP DeleteUserDetail	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteUserDetail]    Script Date: 1/30/2018 5:57:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserDetail]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserDetail] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetUserDetailById
	Comment : Create SP GetUserDetailById	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserDetailById]    Script Date: 1/30/2018 5:57:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserDetailById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT UD.Id,UD.UserId,UD.Name,UD.Email,UD.Password,UD.CreatedBy,UD.CreatedOn,UD.UpdatedBy, UD.UpdatedOn, UD.IsActive,URM.UserRoleId 
		FROM [dbo].[UserDetail] UD 
			INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
				AND ISNULL(URM.IsDeleted,0) = 0
		WHERE	ISNULL(UD.IsDeleted,0) = 0 
				AND Ud.[Id] = @Id		
END

/*******************************************************************************************************************
	SP Name : SearchUserDetail
	Comment : Create SP SearchUserDetail	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchUserDetail]    Script Date: 1/30/2018 5:59:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserDetail] NULL, '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchUserDetail]					
	@UserRoleId		UNIQUEIDENTIFIER	=	NULL	,		
	@Name			NVARCHAR(500)		=	NULL	,	
	@Email			NVARCHAR(500)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserDetail
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(500)		NULL	
		,   [Email]			NVARCHAR(500)		NULL	
		,	[UserRoleId]	UNIQUEIDENTIFIER	NULL		
		,   [UserRoleName]	NVARCHAR(500)		NULL	
		,   [UserRoleCode]	NVARCHAR(255)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UD.Id) 
						FROM [dbo].[UserDetail] UD 
								INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
									AND ISNULL(URM.IsDeleted,0) = 0
								INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
									AND ISNULL(UR.IsDeleted,0) = 0
						WHERE	ISNULL(UD.IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 
								AND (@UserRoleId IS NULL OR URM.[UserRoleId] = @UserRoleId)								
						)


		INSERT INTO #tempUserDetail 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Email], 
			[UserRoleId],
			[UserRoleName], 
			[UserRoleCode],
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UD.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UD.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN UD.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN UD.[Name] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN UD.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN UD.[Email] END DESC,

						CASE WHEN @SortColumn = 'UserRoleName' and @SortDirection = 'asc'
							THEN UR.[Name] END ASC,
						CASE WHEN @SortColumn = 'UserRoleName' and @SortDirection = 'desc'
							THEN UR.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UD.[Id],		
				UD.[Name],
				UD.[Email],
				UR.Id AS [UserRoleId],
				UR.[Name] AS [UserRoleName],
				UR.[Code] AS [UserRoleCode],				
				UD.[CreatedOn],
				UD.[IsActive]
		FROM [dbo].[UserDetail] UD 
				INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0
				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
					AND ISNULL(UR.IsDeleted,0) = 0
		WHERE	ISNULL(UD.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
				AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 
				AND (@UserRoleId IS NULL OR URM.[UserRoleId] = @UserRoleId)	
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Name],				
			temp.[Email],
			temp.[UserRoleId],			
			temp.[UserRoleName],			
			temp.[UserRoleCode],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempUserDetail AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : AddUpdateUserRoleMapping
	Comment : Create SP AddUpdateUserRoleMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateUserRoleMapping]    Script Date: 1/30/2018 6:13:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUpdateUserRoleMapping]
	@UserId				UNIQUEIDENTIFIER			,	
	@UserRoleId			UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	IF NOT EXISTS (SELECT * FROM [UserRoleMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [UserId] = @UserId 
								AND [UserRoleId] = @UserRoleId)
	BEGIN		
		INSERT INTO [dbo].[UserRoleMapping]
			   ([Id]
			   ,[UserId]			   
			   ,[UserRoleId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@UserId					
					,@UserRoleId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[UserRoleMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [UserId] = @UserId 
					AND [UserRoleId] = @UserRoleId
	END
			
	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteUserRoleMappingByUserId
	Comment : Create SP DeleteUserRoleMappingByUserId	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteUserRoleMappingByUserId]    Script Date: 1/30/2018 6:16:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserRoleMappingByUserId]	
	@UserId			UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRoleMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND UserId = @UserId
	

	SELECT @UserId AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteUserRoleMapping
	Comment : Create SP DeleteUserRoleMapping	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[DeleteUserRoleMapping]    Script Date: 1/30/2018 6:16:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserRoleMapping]	
	@Id			UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRoleMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : ChangePassword
	Comment : Create SP ChangePassword	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[ChangePassword]    Script Date: 1/30/2018 5:54:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[ChangePassword]
	@Id				UNIQUEIDENTIFIER	,	
	@Password		NVARCHAR(2000)		,				
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserDetail] 
		SET	[Password]		= @Password		   		   
		   ,[UpdatedBy]		= @UpdatedBy		   
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/******************************************************************************************************/

Name : Nilesh
Date : 31-JAN-2018

/******************* Create new table TutorStudentMapping *************/


/****** Object:  Table [dbo].[TutorStudentMapping]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TutorStudentMapping](
	[Id] [uniqueidentifier] NOT NULL,
	[TutorId] [uniqueidentifier] NOT NULL,
	[StudentId] [uniqueidentifier] NOT NULL,
	[UserId]	[int] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_TutorStudentMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO




/*******************************************************************************************************************
	SP Name : AddUpdateTutorStudentMapping
	Comment : Create SP AddUpdateTutorStudentMapping	
*******************************************************************************************************************/



/****** Object:  StoredProcedure [dbo].[AddUpdateTutorStudentMapping]    Script Date: 1/30/2018 6:13:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUpdateTutorStudentMapping]
	@TutorId			UNIQUEIDENTIFIER				,	
	@StudentId			UNIQUEIDENTIFIER				,
	@UserId				INT					=	NULL	,
	@IsActive			BIT					=	NULL	,
	@CreatedBy			INT					=	NULL	,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	IF NOT EXISTS (SELECT * FROM [TutorStudentMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [TutorId] = @TutorId 
								AND [StudentId] = @StudentId)
	BEGIN		
		INSERT INTO [dbo].[TutorStudentMapping]
			   ([Id]
			   ,[TutorId]			   
			   ,[StudentId]
			   ,[UserId]
			   ,[IsActive]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@TutorId					
					,@StudentId
					,@UserId
					,@IsActive
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[TutorStudentMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [TutorId] = @TutorId 
					AND [StudentId] = @StudentId					
	END
			
	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteTutorStudentMappingByTutor
	Comment : Create SP DeleteTutorStudentMappingByTutor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteTutorStudentMappingByTutor]    Script Date: 1/30/2018 6:16:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteTutorStudentMappingByTutor]	
	@TutorId		UNIQUEIDENTIFIER				,
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[TutorStudentMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND TutorId = @TutorId
	

	SELECT @TutorId AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteTutorStudentMapping
	Comment : Create SP DeleteTutorStudentMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteTutorStudentMapping]    Script Date: 1/30/2018 6:16:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteTutorStudentMapping]	
	@Id			UNIQUEIDENTIFIER				,
	@UpdatedBy	INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[TutorStudentMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : SearchTutorDetail
	Comment : Create SP SearchTutorDetail
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchTutorDetail]    Script Date: 1/31/2018 1:55:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchTutorDetail]  '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchTutorDetail]					
	@Name			NVARCHAR(500)		=	NULL	,	
	@Email			NVARCHAR(500)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempTutorDetail
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(500)		NULL	
		,   [Email]			NVARCHAR(500)		NULL							
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UD.Id) 
						FROM [dbo].[UserDetail] UD 
								INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
									AND ISNULL(URM.IsDeleted,0) = 0
								INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
									AND ISNULL(UR.IsDeleted,0) = 0
									AND UR.[Code] = 'TUTOR'	
						WHERE	ISNULL(UD.IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 								
						)


		INSERT INTO #tempTutorDetail 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Email], 
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UD.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UD.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN UD.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN UD.[Name] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN UD.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN UD.[Email] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UD.[Id],		
				UD.[Name],
				UD.[Email],				
				UD.[CreatedOn],
				UD.[IsActive]
		FROM [dbo].[UserDetail] UD 
				INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0
				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
					AND ISNULL(UR.IsDeleted,0) = 0
					AND UR.[Code] = 'TUTOR'	
		WHERE	ISNULL(UD.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
				AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 				
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Name],				
			temp.[Email],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempTutorDetail AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*******************************************************************************************************************
	SP Name : GetTutorStudentMappingByTutor
	Comment : Create SP GetTutorStudentMappingByTutor	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetTutorStudentMappingByTutor]    Script Date: 1/30/2018 1:59:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTutorStudentMappingByTutor]
	@TutorId 	UNIQUEIDENTIFIER = NULL		,
	@StudentId 	UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT TSM.*,UD.Id AS UserGUID, UD.[Name] AS UserName, UD.Email AS UserEmail
			FROM [dbo].[UserDetail] UD
			INNER JOIN [dbo].[TutorStudentMapping] TSM ON UD.Id = TSM.TutorId
				AND ISNULL(TSM.IsDeleted,0) = 0  			
				
		WHERE	ISNULL(UD.IsDeleted,0) = 0  
				AND (@StudentId IS NULL OR TSM.StudentId = @StudentId)
				AND (@TutorId IS NULL OR TSM.TutorId = @TutorId)		
END


/*******************************************************************************************************************
	SP Name : GetStudentDetailsForTutorMapping
	Comment : Create SP GetStudentDetailsForTutorMapping	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetStudentDetailsForTutorMapping]    Script Date: 1/30/2018 1:59:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetStudentDetailsForTutorMapping]
	@TutorId 	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT UD.Id AS UserGUID, UD.UserId, UD.[Name] AS UserName, UD.Email AS UserEmail,
		CASE WHEN TSM.Id IS NOT NULL THEN 1 ELSE 0 END AS IsMapped,
		TSM.Id AS TutorStudentMappingId
		FROM 	[dbo].[UserDetail] UD
				INNER JOIN [dbo].[UserRoleMapping] URM ON  URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0
				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId 
					AND ISNULL(UR.IsDeleted,0) = 0
					AND UR.[Code] = 'STUDENT'					
				LEFT JOIN [dbo].[TutorStudentMapping] TSM ON UD.Id = TSM.StudentId
					AND ISNULL(TSM.IsDeleted,0) = 0  			
					AND (@TutorId IS NULL OR TSM.TutorId = @TutorId)	
				
		WHERE	ISNULL(UD.IsDeleted,0) = 0  								
					
END




/*******************************************************************************************************************
	SP Name : SearchStudentDetail
	Comment : Create SP SearchStudentDetail
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchStudentDetail]    Script Date: 1/31/2018 1:55:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchStudentDetail]  'D4878B1D-C234-43FB-9D5F-CC4FA40CCAD0','', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchStudentDetail]			
	@TutorId		UNIQUEIDENTIFIER				,
	@Name			NVARCHAR(500)		=	NULL	,	
	@Email			NVARCHAR(500)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempStudentDetail
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(500)		NULL	
		,   [Email]			NVARCHAR(500)		NULL							
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UD.Id) 
						FROM [dbo].[UserDetail] UD 
								INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
									AND ISNULL(URM.IsDeleted,0) = 0									

								INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
									AND ISNULL(UR.IsDeleted,0) = 0
									AND ISNULL(UR.Code,'') = 'STUDENT'

								INNER JOIN [dbo].[TutorStudentMapping] TSM ON TSM.StudentId = UD.Id
									AND ISNULL(TSM.IsDeleted,0) = 0
									AND TSM.TutorId = @TutorId
									
									
						WHERE	ISNULL(UD.IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%')
						)


		INSERT INTO #tempStudentDetail 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Email], 
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UD.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UD.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN UD.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN UD.[Name] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN UD.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN UD.[Email] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UD.[Id],		
				UD.[Name],
				UD.[Email],				
				UD.[CreatedOn],
				UD.[IsActive]
		FROM [dbo].[UserDetail] UD 
				INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0									

				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
					AND ISNULL(UR.IsDeleted,0) = 0
					AND ISNULL(UR.Code,'') = 'STUDENT'

				INNER JOIN [dbo].[TutorStudentMapping] TSM ON TSM.StudentId = UD.Id
					AND ISNULL(TSM.IsDeleted,0) = 0
					AND TSM.TutorId = @TutorId
									
									
		WHERE	ISNULL(UD.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
				AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%')				
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Name],				
			temp.[Email],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempStudentDetail AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/********************** Add new column "IsRecordActivity" to UserDetail Table. **************/

ALTER TABLE UserDetail ADD IsRecordActivity BIT NULL
GO



/*******************************************************************************************************************
	SP Name : AddUserDetail
	Comment : Changes in SP AddUserDetail
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUserDetail]    Script Date: 1/31/2018 4:29:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUserDetail]		
	@Name				NVARCHAR(500)					,		
	@Email				NVARCHAR(500)					,		
	@Password			NVARCHAR(2000)					,
	@IsRecordActivity	BIT					=	NULL	,
	@IsActive			BIT					=	NULL	,	
	@CreatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	DECLARE @UserId AS INT = 0
	SET @UserId = (SELECT ISNULL(MAX(UserId),0) AS MaxUserId FROM [dbo].[UserDetail])

	SET @UserId = (@UserId + 1)

	INSERT INTO [dbo].[UserDetail]
           ([Id]           		   
           ,[Name]		
		   ,[Email]
		   ,[Password]   
		   ,[UserId]	
		   ,[IsRecordActivity]	   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id					      
			   ,@Name		
			   ,@Email
			   ,@Password
			   ,@UserId	   
			   ,@IsRecordActivity
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateUserDetail
	Comment : Changes in SP UpdateUserDetail
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUserDetail]    Script Date: 1/31/2018 4:30:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateUserDetail]
	@Id					UNIQUEIDENTIFIER				,	
	@Name				NVARCHAR(500)					,		
	@Email				NVARCHAR(500)					,
	@IsRecordActivity	BIT					=	NULL	,			
	@IsActive			BIT					=	NULL	,	
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserDetail] 
		SET	[Name]				=	@Name		   
		   ,[Email]				=	@Email
		   ,[IsRecordActivity]	=	@IsRecordActivity
		   ,[UpdatedBy]			=	@UpdatedBy
		   ,[IsActive]			=	@IsActive
		   ,[UpdatedOn]			=	 GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetUserDetailById
	Comment : Changes in SP GetUserDetailById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserDetailById]    Script Date: 1/31/2018 4:33:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetUserDetailById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT UD.Id,UD.UserId,UD.Name,UD.Email,UD.Password,UD.CreatedBy,UD.CreatedOn,UD.UpdatedBy, UD.UpdatedOn, UD.IsActive, UD.IsRecordActivity, URM.UserRoleId 
		FROM [dbo].[UserDetail] UD 
			INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
				AND ISNULL(URM.IsDeleted,0) = 0
		WHERE	ISNULL(UD.IsDeleted,0) = 0 
				AND Ud.[Id] = @Id		
END


/*******************************************************************************************************************
	SP Name : SearchUserDetail
	Comment : Changes in SP SearchUserDetail
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchUserDetail]    Script Date: 1/31/2018 4:37:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserDetail] NULL, '', '', 1, 10
*/

ALTER PROCEDURE [dbo].[SearchUserDetail]					
	@UserRoleId		UNIQUEIDENTIFIER	=	NULL	,		
	@Name			NVARCHAR(500)		=	NULL	,	
	@Email			NVARCHAR(500)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserDetail
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]					NVARCHAR(500)		NULL	
		,   [Email]					NVARCHAR(500)		NULL	
		,	[UserRoleId]			UNIQUEIDENTIFIER	NULL		
		,   [UserRoleName]			NVARCHAR(500)		NULL	
		,   [UserRoleCode]			NVARCHAR(255)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
		,   [IsRecordActivity]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UD.Id) 
						FROM [dbo].[UserDetail] UD 
								INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
									AND ISNULL(URM.IsDeleted,0) = 0
								INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
									AND ISNULL(UR.IsDeleted,0) = 0
						WHERE	ISNULL(UD.IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 
								AND (@UserRoleId IS NULL OR URM.[UserRoleId] = @UserRoleId)								
						)


		INSERT INTO #tempUserDetail 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Email], 
			[UserRoleId],
			[UserRoleName], 
			[UserRoleCode],
			[CreatedOn], 
			[IsActive],
			[IsRecordActivity]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UD.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UD.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN UD.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN UD.[Name] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN UD.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN UD.[Email] END DESC,

						CASE WHEN @SortColumn = 'UserRoleName' and @SortDirection = 'asc'
							THEN UR.[Name] END ASC,
						CASE WHEN @SortColumn = 'UserRoleName' and @SortDirection = 'desc'
							THEN UR.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UD.[Id],		
				UD.[Name],
				UD.[Email],
				UR.Id AS [UserRoleId],
				UR.[Name] AS [UserRoleName],
				UR.[Code] AS [UserRoleCode],				
				UD.[CreatedOn],
				ISNULL(UD.[IsActive],0) AS [IsActive],
				ISNULL(UD.[IsRecordActivity],0) AS  [IsRecordActivity]
		FROM [dbo].[UserDetail] UD 
				INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0
				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
					AND ISNULL(UR.IsDeleted,0) = 0
		WHERE	ISNULL(UD.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
				AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 
				AND (@UserRoleId IS NULL OR URM.[UserRoleId] = @UserRoleId)	
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Name],				
			temp.[Email],
			temp.[UserRoleId],			
			temp.[UserRoleName],			
			temp.[UserRoleCode],			
			temp.[CreatedOn],
			temp.IsActive, 
			temp.IsRecordActivity,
			@TotalCount AS TotalCount
	FROM	
		#tempUserDetail AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchStudentDetail
	Comment : Changes in SP SearchStudentDetail
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchStudentDetail]    Script Date: 1/31/2018 4:46:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchStudentDetail]  'D4878B1D-C234-43FB-9D5F-CC4FA40CCAD0','', '', 1, 10
*/

ALTER PROCEDURE [dbo].[SearchStudentDetail]			
	@TutorId		UNIQUEIDENTIFIER				,
	@Name			NVARCHAR(500)		=	NULL	,	
	@Email			NVARCHAR(500)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempStudentDetail
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]					NVARCHAR(500)		NULL	
		,   [Email]					NVARCHAR(500)		NULL							
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
		,   [IsRecordActivity]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UD.Id) 
						FROM [dbo].[UserDetail] UD 
								INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
									AND ISNULL(URM.IsDeleted,0) = 0									

								INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
									AND ISNULL(UR.IsDeleted,0) = 0
									AND ISNULL(UR.Code,'') = 'STUDENT'

								INNER JOIN [dbo].[TutorStudentMapping] TSM ON TSM.StudentId = UD.Id
									AND ISNULL(TSM.IsDeleted,0) = 0
									AND TSM.TutorId = @TutorId
									
									
						WHERE	ISNULL(UD.IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%')
						)


		INSERT INTO #tempStudentDetail 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Email], 
			[CreatedOn], 
			[IsActive],
			[IsRecordActivity]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UD.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UD.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN UD.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN UD.[Name] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN UD.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN UD.[Email] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UD.[Id],		
				UD.[Name],
				UD.[Email],				
				UD.[CreatedOn],
				ISNULL(UD.[IsActive],0) AS [IsActive],
				ISNULL(UD.[IsRecordActivity],0) AS  [IsRecordActivity]
		FROM [dbo].[UserDetail] UD 
				INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0									

				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
					AND ISNULL(UR.IsDeleted,0) = 0
					AND ISNULL(UR.Code,'') = 'STUDENT'

				INNER JOIN [dbo].[TutorStudentMapping] TSM ON TSM.StudentId = UD.Id
					AND ISNULL(TSM.IsDeleted,0) = 0
					AND TSM.TutorId = @TutorId
									
									
		WHERE	ISNULL(UD.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
				AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%')				
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Name],				
			temp.[Email],			
			temp.[CreatedOn],
			temp.IsActive, 
			temp.IsRecordActivity,
			@TotalCount AS TotalCount
	FROM	
		#tempStudentDetail AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/******************* Create new table UsersActivityLog *************/


/****** Object:  Table [dbo].[UsersActivityLog]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UsersActivityLog](
	[Id] 			[uniqueidentifier] 	NOT NULL	,
	[UserId]		[uniqueidentifier] 	NOT NULL	,		
	[Url]			[nvarchar](1000)	NULL		,
	[PageName]		[nvarchar](500)		NULL		,
	[Description]	[nvarchar](MAX)		NULL		,
	[IpAddress]		[nvarchar](500)		NULL		,
	[RecordedOn]	[datetime]			NULL		,
	[CreatedBy] 	[int] 				NULL		,
	[CreatedOn] 	[datetime] 			NULL		,
	[UpdatedBy] 	[int] 				NULL		,
	[UpdatedOn] 	[datetime] 			NULL		,
	[IsActive] 		[bit] 				NULL		,
	[IsDeleted] 	[bit] 				NULL		,
 CONSTRAINT [PK_UsersActivityLog] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddUsersActivityLog
	Comment : Create SP AddUsersActivityLog
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddUsersActivityLog]    Script Date: 1/31/2018 5:51:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUsersActivityLog]	
	@UserId				UNIQUEIDENTIFIER				,	
	@Url				NVARCHAR(1000)		=	NULL	,		
	@PageName			NVARCHAR(500)		=	NULL	,		
	@Description		NVARCHAR(MAX)		=	NULL	,
	@IpAddress			NVARCHAR(500)		=	NULL	,
	@RecordedOn			DATETIME			=	NULL	,	
	@IsActive			BIT					=	NULL	,	
	@CreatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UsersActivityLog]
           ([Id]           		   
           ,[UserId]		
		   ,[Url]
		   ,[PageName]
		   ,[Description]	
		   ,[IpAddress]	   
		   ,[RecordedOn]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id					      
			   ,@UserId		
			   ,@Url
			   ,@PageName
			   ,@Description	   
			   ,@IpAddress
			   ,@RecordedOn
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : GetUsersActivityLog
	Comment : Create SP GetUsersActivityLog
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUsersActivityLog]    Script Date: 1/31/2018 5:59:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUsersActivityLog]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UsersActivityLog]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY RecordedOn DESC
END



/*******************************************************************************************************************
	SP Name : DeleteUsersActivityLog
	Comment : Create SP DeleteUsersActivityLog
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteUsersActivityLog]    Script Date: 1/31/2018 6:00:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUsersActivityLog]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UsersActivityLog] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchUsersActivityLog
	Comment : Create SP SearchUsersActivityLog
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchUsersActivityLog]    Script Date: 1/31/2018 6:03:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUsersActivityLog] NULL, '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchUsersActivityLog]					
	@UserId			UNIQUEIDENTIFIER	=	NULL	,			
	@ActivityDate	NVARCHAR(50)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempActivityLog
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,	[UserId]				UNIQUEIDENTIFIER	NOT NULL	
		,   [Url]					NVARCHAR(1000)		NULL	
		,   [PageName]				NVARCHAR(500)		NULL	
		,   [Description]			NVARCHAR(MAX)		NULL	
		,   [IpAddress]				NVARCHAR(500)		NULL				
		,	[RecordedOn]			NVARCHAR(50)			NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
		,   [IsRecordActivity]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UAL.Id) 
						FROM [dbo].[UsersActivityLog] UAL
								INNER JOIN [dbo].[UserDetail] UD ON UD.Id = UAL.UserId
									AND ISNULL(UD.IsDeleted,0) = 0
						WHERE	ISNULL(UAL.IsDeleted,0) = 0								
								AND (ISNULL(@ActivityDate,'') = '' OR CAST(UAL.RecordedOn AS DATE) = CAST(@ActivityDate AS DATE)) 								
								AND (@UserId IS NULL OR UAL.[UserId] = @UserId)								
						)


		INSERT INTO #tempActivityLog 
		(
			[RowNum], 
			[Id], 
			[UserId],
			[Url], 
			[PageName], 
			[Description],
			[IpAddress], 
			[RecordedOn],
			[CreatedOn], 
			[IsActive]			
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UAL.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UAL.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Url' and @SortDirection = 'asc'
							THEN UAL.[Url] END ASC,
						CASE WHEN @SortColumn = 'Url' and @SortDirection = 'desc'
							THEN UAL.[Url] END DESC,

						CASE WHEN @SortColumn = 'PageName' and @SortDirection = 'asc'
							THEN UAL.[PageName] END ASC,
						CASE WHEN @SortColumn = 'PageName' and @SortDirection = 'desc'
							THEN UAL.[PageName] END DESC,

						CASE WHEN @SortColumn = 'IpAddress' and @SortDirection = 'asc'
							THEN UAL.[IpAddress] END ASC,
						CASE WHEN @SortColumn = 'IpAddress' and @SortDirection = 'desc'
							THEN UAL.[IpAddress] END DESC,

						CASE WHEN @SortColumn = 'RecordedOn' and @SortDirection = 'asc'
							THEN UAL.[RecordedOn] END ASC,
						CASE WHEN @SortColumn = 'RecordedOn' and @SortDirection = 'desc'
							THEN UAL.[RecordedOn] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UAL.[Id],		
				UAL.[UserId],
				ISNULL(UAL.[Url],'') AS [Url],
				ISNULL(UAL.[PageName],'') AS [PageName],
				ISNULL(UAL.[Description],'') AS [Description],
				ISNULL(UAL.[IpAddress],'') AS [IpAddress],					
				CONVERT(VARCHAR(10), UAL.[RecordedOn], 103) + ' '  + convert(VARCHAR(8), UAL.[RecordedOn], 14) AS [RecordedOn],
				UAL.[CreatedOn],
				ISNULL(UAL.[IsActive],0) AS [IsActive]				
		FROM [dbo].[UsersActivityLog] UAL
				INNER JOIN [dbo].[UserDetail] UD ON UD.Id = UAL.UserId
					AND ISNULL(UD.IsDeleted,0) = 0
		WHERE	ISNULL(UAL.IsDeleted,0) = 0								
				AND (ISNULL(@ActivityDate,'') = '' OR CAST(UAL.RecordedOn AS DATE) = CAST(@ActivityDate AS DATE)) 								
				AND (@UserId IS NULL OR UAL.[UserId] = @UserId)		
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[UserId],	
			temp.[Url],				
			temp.[PageName],
			temp.[Description],			
			temp.[IpAddress],			
			temp.[RecordedOn],			
			temp.[CreatedOn],
			temp.IsActive, 
			temp.IsRecordActivity,
			@TotalCount AS TotalCount
	FROM	
		#tempActivityLog AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*************************************************************************************/

Name : Nilesh
Date : 01-FEB-2018



/*******************************************************************************************************************
	SP Name : GetRateSheetDetail
	Comment   Changes in SP GetRateSheetDetail
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRateSheetDetail]    Script Date: 2/1/2018 1:22:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRateSheetDetail] 
		@RateTypeId = '0853E143-6F2B-48CC-B322-4714142D9A00',
		@RoomTypeId = '488FE9ED-4AA6-45D9-88F6-67FE6D5886D6',
		@IsShowWeekEndPrice = 0
*/
ALTER PROCEDURE [dbo].[GetRateSheetDetail]
	@RateTypeId				UNIQUEIDENTIFIER,
	@RoomTypeId				UNIQUEIDENTIFIER,
	@IsShowWeekEndPrice		BIT = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Amount AS DECIMAL(10,2)
	SET @Amount = 0

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
		Id				UNIQUEIDENTIFIER	NULL,
		RoomTypeId		UNIQUEIDENTIFIER	NULL,
		RateTypeId		UNIQUEIDENTIFIER	NULL,
		Amount			DECIMAL(18,2)		NULL,
		[Description]	NVARCHAR(1000)		NULL
	) 

	IF ISNULL(@IsShowWeekEndPrice,0) = 0
	BEGIN
		--1.) Get amount from mapping table. (Show WeekDay Price)
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, 
					ISNULL(RT.[Description],'') AS [Description]
			FROM [RoomTypeRateTypeMapping] RTRTM 
				INNER JOIN [dbo].[RateType] RT ON RTRTM.RateTypeId = RT.Id 
					AND ISNULL(RT.IsDeleted,0) = 0
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
					AND RTRTM.RateTypeId = @RateTypeId 
					AND RTRTM.RoomTypeId = @RoomTypeId
					AND ISNULL(RTRTM.IsWeekEndPrice,0) = 0
			ORDER BY RTRTM.CreatedOn DESC
		--END
	END
	ELSE
	BEGIN

		--2.) Get amount from mapping table. (Show WeekEnd Price)
		INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
		SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, 
				ISNULL(RT.[Description],'') AS [Description]
		FROM [RoomTypeRateTypeMapping] RTRTM 
				INNER JOIN [dbo].[RateType] RT ON RTRTM.RateTypeId = RT.Id 
					AND ISNULL(RT.IsDeleted,0) = 0
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
					AND RTRTM.RateTypeId = @RateTypeId 
					AND RTRTM.RoomTypeId = @RoomTypeId
					AND ISNULL(RTRTM.IsWeekEndPrice,0) = 1
		ORDER BY RTRTM.CreatedOn DESC
		
	END


	SELECT * FROM #tempRoomTypeRateTypeMapping
END


/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment   Changes in SP GetReservationCharges
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 2/1/2018 2:21:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	UNION

	SELECT RC.*, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
	UNION
		SELECT RC.*, 3 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)


	ORDER BY SortOrder

END

/******************************************************************************************/


/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment   Changes in SP GetRoomDetailsForRoomPlan
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 2/1/2018 5:39:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@FloorId			=	'CF5B413D-BE1F-46EE-9267-DF6AFE5FAACC' ,
			@RoomNo				=	'' ,
			@StartDate			=	'',
			@EndDate			=	''
*/
ALTER PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@FloorId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND (
												( CAST(RL.CheckInDate  AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
												OR 
												( CAST(RL.CheckOutDate AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
										)
								) AS RL 
						ON RL.RoomId = R.Id
					LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 

			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (@FloorId IS NULL OR R.FloorId = @FloorId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END


/*****************************************************************************************************/

Name : Nilesh
Date : 02-FEB-2018


/*******************************************************************************************************************
	SP Name : GetIndividualProfiles
	Comment   Create SP GetIndividualProfiles
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetIndividualProfiles]    Script Date: 2/2/2018 12:00:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetIndividualProfiles]
	@LastName	NVARCHAR(1000)	=	NULL,
	@FirstName	NVARCHAR(1000)	=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
				AND (ISNULL(@LastName,'') = '' OR [LastName] LIKE '%' + @LastName + '%')
				AND (ISNULL(@FirstName,'') = '' OR [FirstName] LIKE '%' + @FirstName + '%')
				
		
END

/*******************************************************************************************************************
	SP Name : GetRateTypeDetailsByRoomType
	Comment   Create SP GetRateTypeDetailsByRoomType
*******************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRateTypeDetailsByRoomType]
	@RoomTypeId			UNIQUEIDENTIFIER				,
	@IsWeekEndPrice		BIT					=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT	RAT.Id AS RateTypeId, RAT.RateTypeCode,ISNULL(RAT.[Description],'') AS RateTypeDescription,
			ISNULL(RTRTM.Amount,0) AS Amount

	FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
		INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
			AND ISNULL(ROT.IsDeleted,0) = 0 
		INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
			AND ISNULL(RAT.IsDeleted,0) = 0 

	WHERE ISNULL(RTRTM.IsDeleted,0) = 0
		AND RTRTM.RoomTypeId = @RoomTypeId
		AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
				
		
END


/******************************************************************************************/

Name : Nilesh
Date : 05-FEB-2018


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoomType
	Comment   Changes in SP SearchAdvanceRoomType
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoomType]    Script Date: 2/5/2018 11:47:38 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoomType]
			@RateTypeId		=	'3518A524-6388-4632-80AF-118D2AFBD122'	,
			@ArrivalDate	=	NULL	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomTypeCode	=	'KNGN'	,
			@Description	=	''		,
			@AvailableRooms	=	0		,
			@RoomCapacity	=	NULL	,
			@IsWeekEndPrice =	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoomType]
	@RateTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomTypeCode		NVARCHAR(25)		=	NULL,
	@Description		NVARCHAR(1000)		=	NULL,
	@AvailableRooms		INT					=	NULL,
	@RoomCapacity		INT					=	NULL,
	@IsWeekEndPrice		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT * FROM 
	(
		SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  ROT.RoomTypeCode ASC

				) AS RowNum,
				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,				
				ISNULL(ROT.[RoomCapacity],0) AS RoomCapacity,				
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				(
					(
						SELECT COUNT(*) As TotalRooms
						FROM Room 
						WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
							AND RoomTypeId = ROT.Id
					)
					 - 
					(
						SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
							AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
							--AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
							AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsActive,0) = 1
							AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = ROT.Id
							AND (
									(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
									OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
								)
					)
				)  AS AvailableRooms,

				RAT.Id AS RateTypeId,
				ISNULL(RAT.RateTypeCode,'') AS RateTypeCode,
				ISNULL(RAT.[Description],'') AS RateTypeDescription,

				RTRTM.[Id] AS [RoomTypeRateTypeMappingId],
				ISNULL(RTRTM.[Amount],0) AS Amount,
				ISNULL(RTRTM.[Description],'') AS	[RoomTypeRateTypeMappingDescription]			
				
			FROM RoomType ROT 
					LEFT JOIN RoomTypeRateTypeMapping RTRTM ON ROT.Id = RTRTM.RoomTypeId 
						AND ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
						AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
					LEFT JOIN RateType RAT ON RAT.Id = RTRTM.RateTypeId
						AND ISNULL(RAT.IsDeleted,0) = 0 AND ISNULL(RAT.IsActive,0) = 1
			WHERE	ISNULL(ROT.IsDeleted,0) = 0 AND ISNULL(ROT.IsActive,0) = 1						  
					AND (@RateTypeId IS NULL OR RAT.Id = @RateTypeId)
					AND (ISNULL(@RoomTypeCode,'') = '' OR ROT.RoomTypeCode LIKE '%' + @RoomTypeCode + '%')
					AND (ISNULL(@Description,'') = '' OR ROT.[Description] LIKE '%' + @Description + '%')					
					AND (ISNULL(@RoomCapacity,0) = 0 OR ROT.[RoomCapacity] = @RoomCapacity)
					
		) AS A	
		WHERE ISNULL(@AvailableRooms,0) = 0 OR A.AvailableRooms = @AvailableRooms				
						


END




/*******************************************************************************************************************
	SP Name : GenerateCalendar
	Comment   Create Function GenerateCalendar
*******************************************************************************************************************/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[GenerateCalendar]
(	
	@month	INT	,
	@year	INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH N(N)AS 
	(SELECT 1 FROM(VALUES(1),(1),(1),(1),(1),(1))M(N)),
	tally(N)AS (SELECT ROW_NUMBER()OVER(ORDER BY N.N)FROM N,N a)
	SELECT N day,datefromparts(@year,@month,N) date FROM tally
	WHERE N <= day(EOMONTH(datefromparts(@year,@month,1)))

)
GO



/*******************************************************************************************************************
	SP Name : GetTotalRoomAvailableByCalendar
	Comment   Create SP GetTotalRoomAvailableByCalendar
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetTotalRoomAvailableByCalendar]    Script Date: 2/2/2018 12:00:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetTotalRoomAvailableByCalendar] 
		@Month	=	1		,
		@Year	=	2018
*/


CREATE PROCEDURE [dbo].[GetTotalRoomAvailableByCalendar]
	@Month	INT	,
	@Year	INT	
AS
BEGIN	
	SET NOCOUNT ON;

	DECLARE @TotalRooms AS INT

	SET @TotalRooms = (SELECT COUNT(*) AS TotalRooms FROM Room WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1)

	SELECT *,
		(
			ISNULL(@TotalRooms,0) - 
			(SELECT DISTINCT COUNT(RL.Id)
				FROM ReservationLog RL 
					INNER JOIN Reservation R ON R.Id = RL.ReservationId
						AND ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1
				WHERE	ISNULL(RL.IsDeleted,0) = 0 
						AND ISNULL(RL.IsActive,0) = 1 
						AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
						AND ( CAST(tbl.[date] AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate AS DATE))
			)
		) As AvailableRooms
	FROM [dbo].[GenerateCalendar](@Month,@Year) tbl	
		
END

/************** Email Config Setting (Add below setting inside "appSettings" tag) ************/

<!-- Email Setting -->    
<add key="mailAccount" value="admin@tfshotelierhub.com" />
<add key="mailPassword" value="123456" />
<add key="SmtpServer" value="mail.tfshotelierhub.com" />
<add key="MailFrom" value="admin@tfshotelierhub.com" />
<add key="Admin" value="nilesh.sonkusare@techavidus.com" />
<!-- Email Setting -->


/****************** Create new table : ErrorLog ****************/

/****** Object:  Table [dbo].[ErrorLog]    Script Date: 2/5/2018 5:54:42 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ErrorLog](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PageUrl]	[nvarchar](max) NULL,
	[MethodName] [nvarchar](max) NULL,
	[ErrorMessage] [nvarchar](max) NULL,
	[TargetSite] [nvarchar](max) NULL,
	[CreatedDateTime] [datetime] NULL,
	[StackTrace] [nvarchar](max) NULL,
	[InnerException] [nvarchar](max) NULL,
 CONSTRAINT [PK_ErrorLog] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[ErrorLog] SET (LOCK_ESCALATION = AUTO)
GO



/*******************************************************************************************************************
	SP Name : AddErrorLog
	Comment   Create SP AddErrorLog
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddErrorLog]    Script Date: 1/31/2018 5:51:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddErrorLog]	
	@PageUrl			NVARCHAR(MAX)		=	NULL	,		
	@MethodName			NVARCHAR(MAX)		=	NULL	,		
	@ErrorMessage		NVARCHAR(MAX)		=	NULL	,
	@TargetSite			NVARCHAR(MAX)		=	NULL	,
	@StackTrace			NVARCHAR(MAX)		=	NULL	,
	@InnerException		NVARCHAR(MAX)		=	NULL	,
	@CreatedDateTime	DATETIME			=	NULL		
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ErrorLog]
           ([PageUrl]           		   
           ,[MethodName]		
		   ,[ErrorMessage]
		   ,[TargetSite]
		   ,[StackTrace]	
		   ,[InnerException]	   
		   ,[CreatedDateTime])
     VALUES
           (
			   @PageUrl					      
			   ,@MethodName		
			   ,@ErrorMessage
			   ,@TargetSite
			   ,@StackTrace	   
			   ,@InnerException
			   ,@CreatedDateTime
           )
		   
   SELECT SCOPE_IDENTITY() AS Id
END


/*******************************************************************************************************************
	SP Name : SearchErroLog
	Comment   Create SP SearchErroLog
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchErroLog]    Script Date: 2/5/2018 6:18:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchErroLog] '', NULL, 1, 10
*/

CREATE PROCEDURE [dbo].[SearchErroLog]			
	@Error			NVARCHAR(MAX)	=	NULL	,	
	@Date			DATETIME	=	NULL	,			
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempErrorLog
	(
			[RowNum]			INT					NOT NULL
		,	[Id]				INT					NULL		
		,   [PageUrl]			NVARCHAR(MAX)		NULL	
		,   [MethodName]		NVARCHAR(MAX)		NULL
		,   [ErrorMessage]		NVARCHAR(MAX)		NULL
		,   [TargetSite]		NVARCHAR(MAX)		NULL
		,   [StackTrace]		NVARCHAR(MAX)		NULL
		,   [InnerException]	NVARCHAR(MAX)		NULL			
		,	[CreatedDateTime]	NVARCHAR(25)		NULL		
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ErrorLog]
						WHERE	 (ISNULL(@Error,'') = '' OR CONCAT([ErrorMessage],[InnerException]) LIKE '%'+ @Error +'%')  
								AND (@Date IS NULL OR CAST([CreatedDateTime] AS DATE)= CAST(@Date AS DATE))  
						)


		INSERT INTO #tempErrorLog 
		(
			[RowNum]			, 
			[Id]				, 
			[PageUrl]			, 
			[MethodName]		,
			[ErrorMessage]		, 
			[TargetSite]		, 
			[StackTrace]		, 
			[InnerException]	, 
			[CreatedDateTime]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedDateTime' and @SortDirection = 'asc'
							THEN [CreatedDateTime] END ASC,
						CASE WHEN @SortColumn = 'CreatedDateTime' and @SortDirection = 'desc'
							THEN [CreatedDateTime] END DESC,

						CASE WHEN @SortColumn = 'PageUrl' and @SortDirection = 'asc'
							THEN [PageUrl] END ASC,
						CASE WHEN @SortColumn = 'PageUrl' and @SortDirection = 'desc'
							THEN [PageUrl] END DESC,

						CASE WHEN @SortColumn = 'MethodName' and @SortDirection = 'asc'
							THEN [MethodName] END ASC,
						CASE WHEN @SortColumn = 'MethodName' and @SortDirection = 'desc'
							THEN [MethodName] END DESC,

						CASE WHEN @SortColumn = 'ErrorMessage' and @SortDirection = 'asc'
							THEN [ErrorMessage] END ASC,
						CASE WHEN @SortColumn = 'ErrorMessage' and @SortDirection = 'desc'
							THEN [ErrorMessage] END DESC,

						CASE WHEN @SortColumn = 'InnerException' and @SortDirection = 'asc'
							THEN [InnerException] END ASC,
						CASE WHEN @SortColumn = 'InnerException' and @SortDirection = 'desc'
							THEN [InnerException] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Id] END DESC

				) AS RowNum,
				[Id]				,								
				[PageUrl]			, 
				[MethodName]		,
				[ErrorMessage]		, 
				[TargetSite]		, 
				[StackTrace]		, 
				[InnerException]	, 
				CONVERT(varchar(12),[CreatedDateTime],103) AS [CreatedDateTime]
		FROM [dbo].[ErrorLog]
			WHERE	 (ISNULL(@Error,'') = '' OR CONCAT([ErrorMessage],[InnerException]) LIKE '%'+ @Error +'%')  
					AND (@Date IS NULL OR CAST([CreatedDateTime] AS DATE)= CAST(@Date AS DATE))  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]				,														
			temp.[PageUrl]			, 
			temp.[MethodName]		,
			temp.[ErrorMessage]		, 
			temp.[TargetSite]		, 
			temp.[StackTrace]		, 
			temp.[InnerException]	, 
			temp.[CreatedDateTime]	,
			@TotalCount AS TotalCount
	FROM	
		#tempErrorLog AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END


/********************************************************************************************************/

Name : Nilesh
Date : 06-FEB-2018

/**********************************************************************************************************/

/*******************************************************************************************************************
	SP Name : UpdateIndividualProfile
	Comment   Changes in SP UpdateIndividualProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateIndividualProfile]    Script Date: 2/6/2018 12:39:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateIndividualProfile]
	@Id						UNIQUEIDENTIFIER				,
	@ProfileTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@TelephoneNo			NVARCHAR(50)		=	NULL	,
	@BusinessTelephoneNo	NVARCHAR(20)		=	NULL	,
	@Email					NVARCHAR(500)		=	NULL	,
	@Address				NVARCHAR(MAX)		=	NULL	,
	@HomeAddress			NVARCHAR(MAX)		=	NULL	,
	@CountryId				INT					=	NULL	,
	@StateId				INT					=	NULL	,
	@CityId					INT					=	NULL	,
	@ZipCode				NVARCHAR(50)		=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@NationalityId			UNIQUEIDENTIFIER	=	NULL	,
	@CarRegistrationNo		NVARCHAR(255)		=	NULL	,
	@PassportNo				NVARCHAR(255)		=	NULL	,
	@DOB					DateTime			=	NULL	,
	@IsMailingList			BIT					=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;


	UPDATE [dbo].[IndividualProfile]
           SET	[ProfileTypeId]				= @ProfileTypeId
				,[FirstName]				= @FirstName
				,[LastName]					= @LastName
				,[TitleId]					= @TitleId
				,[TelephoneNo]				= @TelephoneNo
				,[BusinessTelephoneNo]		= @BusinessTelephoneNo
				,[Email]					= @Email
				,[Address]					= @Address
				,[HomeAddress]				= @HomeAddress
				,[CountryId]				= @CountryId
				,[StateId]					= @StateId
				,[CityId]					= @CityId
				,[ZipCode]					= @ZipCode
				,[VipId]					= @VipId
				,[NationalityId]			= @NationalityId
				,[CarRegistrationNo]		= @CarRegistrationNo
				,[PassportNo]				= @PassportNo
				,[DOB]						= @DOB
				,[IsMailingList]			= @IsMailingList
				,[Remarks]					= @Remarks
				,[UpdatedOn]				= GETDATE()
				,[UpdatedBy]				= @UpdatedBy
				,[IsActive]					= @IsActive
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [Id]= @Id

		SELECT @Id AS ProfileId
    
END


/*******************************************************************************************************************
	SP Name : AddIndividualProfile
	Comment   Changes in SP AddIndividualProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddIndividualProfile]    Script Date: 2/6/2018 12:42:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddIndividualProfile]
	@ProfileTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@TelephoneNo			NVARCHAR(50)		=	NULL	,
	@BusinessTelephoneNo	NVARCHAR(20)		=	NULL	,
	@Email					NVARCHAR(500)		=	NULL	,
	@Address				NVARCHAR(MAX)		=	NULL	,
	@HomeAddress			NVARCHAR(MAX)		=	NULL	,
	@CountryId				INT					=	NULL	,
	@StateId				INT					=	NULL	,
	@CityId					INT					=	NULL	,
	@ZipCode				NVARCHAR(50)		=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@NationalityId			UNIQUEIDENTIFIER	=	NULL	,
	@CarRegistrationNo		NVARCHAR(255)		=	NULL	,
	@PassportNo				NVARCHAR(255)		=	NULL	,
	@DOB					DateTime			=	NULL	,
	@IsMailingList			BIT					=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ProfileId UNIQUEIDENTIFIER
	SET @ProfileId = NEWID()

	INSERT INTO [dbo].[IndividualProfile]
           ([Id]
           ,[ProfileTypeId]
           ,[FirstName]
           ,[LastName]
           ,[TitleId]
           ,[TelephoneNo]
           ,[BusinessTelephoneNo]
           ,[Email]
           ,[Address]
           ,[HomeAddress]
           ,[CountryId]
           ,[StateId]
           ,[CityId]
           ,[ZipCode]
           ,[VipId]
		   ,[NationalityId]
           ,[CarRegistrationNo]
           ,[PassportNo]
           ,[DOB]
           ,[IsMailingList]
		   ,[Remarks]
           ,[CreatedOn]
           ,[CreatedBy]
           ,[IsActive])
     VALUES
           (
			   @ProfileId
			   ,@ProfileTypeId
			   ,@FirstName
			   ,@LastName
			   ,@TitleId
			   ,@TelephoneNo
			   ,@BusinessTelephoneNo
			   ,@Email
			   ,@Address
			   ,@HomeAddress
			   ,@CountryId
			   ,@StateId
			   ,@CityId
			   ,@ZipCode
			   ,@VipId
			   ,@NationalityId
			   ,@CarRegistrationNo
			   ,@PassportNo
			   ,@DOB
			   ,@IsMailingList
			   ,@Remarks
			   ,GETDATE()
			   ,@CreatedBy
			   ,@IsActive
           )

		SELECT @ProfileId AS ProfileId
    
END


/***************** Add CashierNumber column to UserDetail table ****/

ALTER TABLE UserDetail ADD CashierNumber NVARCHAR(255) NULL
GO

/*******************************************************************************************************************
	SP Name : GetMaxUserId
	Comment   Create SP GetMaxUserId
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetMaxUserId]    Script Date: 2/6/2018 12:57:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMaxUserId]	
AS
BEGIN	
	SET NOCOUNT ON;

	DECLARE @UserId AS INT = 0
	SET @UserId = (SELECT ISNULL(MAX(UserId),0) AS MaxUserId FROM [dbo].[UserDetail])

	SELECT @UserId AS Id
END



/*******************************************************************************************************************
	SP Name : AddUserDetail
	Comment   Changes in SP AddUserDetail
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddUserDetail]    Script Date: 2/6/2018 12:55:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUserDetail]		
	@Name				NVARCHAR(500)					,		
	@Email				NVARCHAR(500)					,		
	@Password			NVARCHAR(2000)					,
	@IsRecordActivity	BIT					=	NULL	,
	@UserId				INT					=	NULL	,
	@CashierNumber		NVARCHAR(255)		=	NULL	,
	@IsActive			BIT					=	NULL	,	
	@CreatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UserDetail]
           ([Id]           		   
           ,[Name]		
		   ,[Email]
		   ,[Password]   
		   ,[UserId]	
		   ,[IsRecordActivity]	   
		   ,[CashierNumber]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id					      
			   ,@Name		
			   ,@Email
			   ,@Password
			   ,@UserId	   
			   ,@IsRecordActivity
			   ,@CashierNumber
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateUserDetail
	Comment   Changes in SP UpdateUserDetail
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[UpdateUserDetail]    Script Date: 2/6/2018 1:05:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateUserDetail]
	@Id					UNIQUEIDENTIFIER				,	
	@Name				NVARCHAR(500)					,		
	@Email				NVARCHAR(500)					,
	@IsRecordActivity	BIT					=	NULL	,	
	@CashierNumber		NVARCHAR(255)		=	NULL	,		
	@IsActive			BIT					=	NULL	,	
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserDetail] 
		SET	[Name]				=	@Name		   
		   ,[Email]				=	@Email
		   ,[IsRecordActivity]	=	@IsRecordActivity
		   ,[CashierNumber]		=	@CashierNumber
		   ,[UpdatedBy]			=	@UpdatedBy
		   ,[IsActive]			=	@IsActive
		   ,[UpdatedOn]			=	 GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END





/*******************************************************************************************************************
	SP Name : CheckCashierNumberExist
	Comment   Create SP CheckCashierNumberExist
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckCashierNumberExist]    Script Date: 2/6/2018 1:07:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckCashierNumberExist] 
		@Id				=	NULL,
		@CashierNumber	=	''
*/

CREATE PROCEDURE [dbo].[CheckCashierNumberExist]
	@Id					UNIQUEIDENTIFIER	=	NULL,
	@CashierNumber		NVARCHAR(255)		=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[UserDetail]
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND [CashierNumber] = @CashierNumber
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetUserDetailById
	Comment   Changes in SP GetUserDetailById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserDetailById]    Script Date: 2/6/2018 1:14:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetUserDetailById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT UD.Id,UD.UserId,UD.Name,UD.Email,UD.Password,UD.CreatedBy,UD.CreatedOn,UD.UpdatedBy, UD.UpdatedOn, UD.IsActive, UD.IsRecordActivity,
		ISNULL(UD.CashierNumber,'') AS CashierNumber, URM.UserRoleId 
		FROM [dbo].[UserDetail] UD 
			INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
				AND ISNULL(URM.IsDeleted,0) = 0
		WHERE	ISNULL(UD.IsDeleted,0) = 0 
				AND Ud.[Id] = @Id		
END


/**************** Add FolioNumber column in Reservation table ****************/

ALTER TABLE Reservation ADD FolioNumber BIGINT NULL
GO

/************ Update FolioNumber Of Existing Reservation **********/

UPDATE Reservation SET FolioNumber =  (100 + RIGHT(ConfirmationNumber,3))



/*******************************************************************************************************************
	SP Name : AddReservation
	Comment   Changes in SP AddReservation
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 2/6/2018 2:04:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@FolioNumber			BIGINT				=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountReasonId]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]
		   ,[TotalBalance]
		   ,[FolioNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountReasonId	
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice
				, @TotalBalance
				, @FolioNumber
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END



/********* Add session state time out seeting in web.config ************/

<sessionState timeout="60" mode="InProc"></sessionState>

/************ Add Code Column into PaymentMethod Table ********/

ALTER TABLE PaymentMethod ADD Code NVARCHAR(25) NULL
GO




/*******************************************************************************************************************
	SP Name : AddPaymentMethod
	Comment   Changes in SP AddPaymentMethod
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddPaymentMethod]    Script Date: 2/6/2018 3:15:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddPaymentMethod]	
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(500)			,
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[PaymentMethod]
           ([Id]           
		   ,[Code]
           ,[Name]		   		
		   ,[Description]   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id	
			   ,@Code		   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdatePaymentMethod
	Comment   Changes in SP UpdatePaymentMethod
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[UpdatePaymentMethod]    Script Date: 2/6/2018 3:16:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdatePaymentMethod]
	@Id				UNIQUEIDENTIFIER				,	
	@Code			NVARCHAR(25)		=	NULL	,
	@Name			NVARCHAR(500)					,	
	@Description	NVARCHAR(MAX)		=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[Name]			=	@Name		
		   ,[Code]			=	@Code
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : SearchPaymentMethod
	Comment   Changes in SP SearchPaymentMethod
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPaymentMethod]    Script Date: 2/6/2018 3:17:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPaymentMethod] '', '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchPaymentMethod]					
	@Code			NVARCHAR(25)	=	NULL	,
	@Name			NVARCHAR(500)	=	NULL	,
	@Description	NVARCHAR(MAX)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPaymentMethod
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,	[Code]			NVARCHAR(255)		NULL
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(MAX)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PaymentMethod]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempPaymentMethod 
		(
			[RowNum]		, 
			[Id]			,	 
			[Code]			,
			[Name]			, 
			[Description]	, 
			[CreatedOn]		, 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,
						
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,
						

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],	
				ISNULL([Code],'') AS [Code],					
				ISNULL([Name],'') AS [Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[PaymentMethod]
			WHERE	ISNULL(IsDeleted,0) = 0			
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  					
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Code],
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPaymentMethod AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : AddTitle
	Comment   Create SP AddTitle
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddTitle]    Script Date: 2/6/2018 4:46:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddTitle]	
	@Title			NVARCHAR(100)			,
	@Salutation		NVARCHAR(255)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Title]
           ([Id]           
		   ,[Title]
           ,[Salutation]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id	
			   ,@Title		   
			   ,@Salutation				   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateTitle
	Comment   Create SP UpdateTitle
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateTitle]    Script Date: 2/6/2018 4:48:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateTitle]
	@Id				UNIQUEIDENTIFIER				,	
	@Title			NVARCHAR(100)					,
	@Salutation		NVARCHAR(255)		=	NULL	,	
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Title]
		SET	[Title]			=	@Title		
		   ,[Salutation]	=	@Salutation		      
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : DeleteTitle
	Comment   Create SP DeleteTitle
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteTitle]    Script Date: 2/6/2018 4:49:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteTitle]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Title]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchTitle
	Comment   Create SP SearchTitle
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchTitle]    Script Date: 2/6/2018 5:09:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchTitle]  '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchTitle]					
	@Title			NVARCHAR(100)	=	NULL	,
	@Salutation		NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempTitle
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,	[Title]			NVARCHAR(100)		NULL
		,   [Salutation]	NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Title]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Title,'') = '' OR [Title] LIKE '%'+ @Title +'%')  
								AND (ISNULL(@Salutation,'') = '' OR [Salutation] LIKE '%'+ @Salutation +'%')  								
						)


		INSERT INTO #tempTitle 
		(
			[RowNum]		, 
			[Id]			,	 
			[Title]			,
			[Salutation]	, 
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN [CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN [CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Title' and @SortDirection = 'asc'
						THEN [Title] END ASC,
					CASE WHEN @SortColumn = 'Title' and @SortDirection = 'desc'
						THEN [Title] END DESC,
						
					CASE WHEN @SortColumn = 'Salutation' and @SortDirection = 'asc'
						THEN [Salutation] END ASC,
					CASE WHEN @SortColumn = 'Salutation' and @SortDirection = 'desc'
						THEN [Salutation] END DESC,
						

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Title] END ASC

			) AS RowNum,
			[ID],			
			ISNULL([Title],'') AS [Title],
			ISNULL([Salutation],'') AS [Salutation],
			[CreatedOn],
			[IsActive]
		FROM [dbo].[Title]
		WHERE	ISNULL(IsDeleted,0) = 0								
				AND (ISNULL(@Title,'') = '' OR [Title] LIKE '%'+ @Title +'%')  
				AND (ISNULL(@Salutation,'') = '' OR [Salutation] LIKE '%'+ @Salutation +'%')  								

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Title],
			temp.[Salutation],				
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempTitle AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/***** Remove NOT NULL constraint from Salutation column ***********/


ALTER TABLE Title ALTER COLUMN Salutation NVARCHAR(255) NULL
GO

/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment   Changes in SP SearchAdvanceRoom
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 2/6/2018 5:31:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	''		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	''		,
			@IsClean		=	NULL	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	--- POPULATE ROOM STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]			UNIQUEIDENTIFIER	NOT NULL	,
		[StatusCode]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsClean,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CLEAN'
	END

	IF ISNULL(@IsDirty,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DIRTY'
	END

	IF ISNULL(@IsInspected,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'INSPECTED'
	END

	--- POPULATE ROOM STATUS TEMP TABLE : END

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(255)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
		,	[ReservationId]			UNIQUEIDENTIFIER	NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[RoomId]				, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			,
			[ReservationId]		
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,				
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
						AND RFM.RoomId = R.Id						
						FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures,
				RL.ReservationId AS ReservationId
		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId, RL.ReservationId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
					LEFT JOIN RoomFeaturesMapping RFM ON RFM.RoomId = R.Id
						AND ISNULL(RFM.IsDeleted,0) = 0  AND ISNULL(RFM.IsActive,0) = 1 
					LEFT JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
						AND ISNULL(RF.IsDeleted,0) = 0  AND ISNULL(RF.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND 
					(
						 (SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
						 RS.Id IN (SELECT Id FROM #tempStatus)
					)					
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[RoomId],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures],
			temp.[ReservationId]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.[RoomId]
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 
END



/****************************************************************************************************/

Name : Nilesh
Date : 07-FEB-2018

/*****************************************************************************************************/

/*************** Create New Table Holidays ****************/


/****** Object:  Table [dbo].[Holidays]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Holidays](
	[Id] [uniqueidentifier] NOT NULL,
	[Date]	[datetime]	NOT NULL,
	[Title] [nvarchar](500) NOT NULL,
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Holidays] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddHoliday
	Comment   Create SP AddHoliday
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddHoliday]    Script Date: 2/7/2018 11:32:27 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddHoliday]	
	@Date			DATETIME					,	
	@Title			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@IsActive		BIT				=	NULL	,	
	@CreatedBy		INT				=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Holidays]
           ([Id]           
           ,[Date]
		   ,[Title]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Date
			   ,@Title		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateHoliday
	Comment   Create SP UpdateHoliday
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateHoliday]    Script Date: 2/7/2018 11:34:55 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateHoliday]
	@Id				UNIQUEIDENTIFIER			,	
	@Date			DATETIME					,	
	@Title			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	NULL	,		
	@IsActive		BIT				=	NULL	,	
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Holidays]
		SET	[Date]			=	@Date
		   ,[Title]			=	@Title		   		   
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteHoliday
	Comment   Create SP DeleteHoliday
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteHoliday]    Script Date: 2/7/2018 11:36:39 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteHoliday] 
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Holidays] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetHolidayById
	Comment   Create SP GetHolidayById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetHolidayById]    Script Date: 2/7/2018 11:40:45 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetHolidayById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Holidays]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Title]
END


/*******************************************************************************************************************
	SP Name : SearchHoliday
	Comment   Create SP SearchHoliday
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchHoliday]    Script Date: 2/7/2018 11:42:41 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchHoliday] NULL, '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchHoliday]			
	@Date			DATETIME		=	NULL	,		
	@Title			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempHolidays
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Date]			DATETIME			NOT NULL	
		,   [Title]			NVARCHAR(500)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Holidays]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Title,'') = '' OR [Title] LIKE '%'+ @Title +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
								AND (@Date IS NULL OR CAST([Date] AS DATE) = CAST(@Date AS DATE))
						)


		INSERT INTO #tempHolidays 
		(
			[RowNum]		, 
			[Id]			,	 
			[Date]			, 
			[Title]			,
			[Description]	, 
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN [CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN [CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Date' and @SortDirection = 'asc'
						THEN [Date] END ASC,
					CASE WHEN @SortColumn = 'Date' and @SortDirection = 'desc'
						THEN [Date] END DESC,

					CASE WHEN @SortColumn = 'Title' and @SortDirection = 'asc'
						THEN [Title] END ASC,
					CASE WHEN @SortColumn = 'Title' and @SortDirection = 'desc'
						THEN [Title] END DESC,

					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
						THEN [Description] END ASC,
					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
						THEN [Description] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Title] END ASC

			) AS RowNum,
			[Id],								
			[Date],
			ISNULL([Title], '') AS [Title],
			ISNULL([Description],'') AS [Description],
			[CreatedOn],
			[IsActive]
		FROM [dbo].[Holidays]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Title,'') = '' OR [Title] LIKE '%'+ @Title +'%')  
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
					AND (@Date IS NULL OR CAST([Date] AS DATE) = CAST(@Date AS DATE))
				

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Date],		
			temp.[Title],
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempHolidays AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : GetHolidaysOfCurrentMonth
	Comment   Create SP GetHolidaysOfCurrentMonth
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetHolidaysOfCurrentMonth]    Script Date: 2/7/2018 11:40:45 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetHolidaysOfCurrentMonth]
	@Month 	INT	=	NULL,
	@Year	INT	=	NULL 	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Holidays]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND DATEPART(YEAR,[Date]) 	= @Year 
				AND DATEPART(MONTH,[Date]) 	= @Month
		ORDER BY [Title]
END



/*******************************************************************************************************************
	SP Name : GetReservationLogByRoom
	Comment   Changes in SP GetReservationLogByRoom
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationLogByRoom]    Script Date: 2/7/2018 2:49:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationLogByRoom]
	@RoomId			UNIQUEIDENTIFIER				,
	@RoomStatusId	UNIQUEIDENTIFIER	=	NULL	,
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate	DATETIME			=	NULL	,
	@DepartureDate	DATETIME			=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RL.* FROM [dbo].[ReservationLog] RL 
			INNER JOIN Reservation R ON R.Id = RL.ReservationId
			AND ISNULL(R.IsDeleted,0) = 0 
		WHERE	ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1 
				AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
				AND 
				(
					(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
						OR 
					(ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
				)
				AND RoomId = @RoomId
				AND RL.RoomStatusId = @RoomStatusId
				AND @ReservationId IS NULL OR RL.ReservationId = @ReservationId

END

/***************** Create new table CalendarNotes ***************/

/****** Object:  Table [dbo].[CalendarNotes]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CalendarNotes](
	[Id] [uniqueidentifier] NOT NULL,
	[Date]	[datetime]	NOT NULL,
	[Notes] [nvarchar](MAX) NOT NULL,	
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_CalendarNotes] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



/*******************************************************************************************************************
	SP Name : GetNotesById
	Comment   Create SP GetNotesById
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetNotesById]    Script Date: 2/7/2018 11:40:45 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetNotesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CalendarNotes]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Date]
END



/*******************************************************************************************************************
	SP Name : AddCalendarNotes
	Comment   Create SP AddCalendarNotes
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddCalendarNotes]    Script Date: 2/7/2018 11:32:27 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCalendarNotes]	
	@Date			DATETIME					,		
	@Notes			NVARCHAR(MAX)	=	NULL	,	
	@IsActive		BIT				=	NULL	,	
	@CreatedBy		INT				=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[CalendarNotes]
           ([Id]           
           ,[Date]		   
		   ,[Notes]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Date
			   ,@Notes					   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateCalendarNotes
	Comment   Create SP UpdateCalendarNotes
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCalendarNotes]    Script Date: 2/7/2018 11:34:55 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCalendarNotes]
	@Id				UNIQUEIDENTIFIER			,	
	@Date			DATETIME					,	
	@Notes			NVARCHAR(MAX)	=	NULL	,
	@IsActive		BIT				=	NULL	,	
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[CalendarNotes]
		SET	[Date]			=	@Date		   		   		   
		   ,[Notes]	=	@Notes		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : GetCalendarNotesOfCurrentMonth
	Comment   Create SP GetCalendarNotesOfCurrentMonth
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetCalendarNotesOfCurrentMonth]    Script Date: 2/7/2018 11:40:45 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetCalendarNotesOfCurrentMonth]
	@Month 	INT	=	NULL,
	@Year	INT	=	NULL 	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CalendarNotes]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND DATEPART(YEAR,[Date]) 	= @Year 
				AND DATEPART(MONTH,[Date]) 	= @Month
		ORDER BY [Date]
END



/**********************************************************************************************/

Name : Nilesh
Date : 08-FEB-2018

/************************************************************************************************/

/************** Create new table Pages *****************/

/****** Object:  Table [dbo].[Pages]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Pages](
	[Id] [uniqueidentifier] NOT NULL,
	[PageCode]	[nvarchar] (255) NULL,
	[PageName]	[nvarchar](255)	NOT NULL,	
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Pages] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*********** Add IndividualProfile Page entry to Pages table. *****************/

INSERT INTO [dbo].[Pages] ([Id], [PageCode], [PageName], [Description], [CreatedBy], [CreatedOn], [IsActive])
VALUES (CAST('194887F6-9AE4-456F-8444-786AE7349085' AS UNIQUEIDENTIFIER), 'INDIVIDUALPROFILE', 'Individual Profile', 'Individual Profile', 1, GETDATE(), 1)


/***** Create new table UserPages **************/

/****** Object:  Table [dbo].[UserPages]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UserPages](
	[Id] [uniqueidentifier] NOT NULL,
	[UserId]	[uniqueidentifier]	NOT NULL,	
	[PageId]	[uniqueidentifier]	NOT NULL,	
	[IsAdd]		[BIT] NULL,
	[IsEdit]	[BIT] NULL,
	[IsDelete]	[BIT] NULL,
	[IsView]	[BIT] NULL,
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] 	[bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_UserPages] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : GetPages
	Comment   Create SP GetPages
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPages]    Script Date: 2/8/2018 12:35:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPages]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Pages]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [PageCode]
END


/*******************************************************************************************************************
	SP Name : GetPageById
	Comment   Create SP GetPageById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPageById]    Script Date: 2/8/2018 12:36:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPageById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Pages]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [PageCode]
END


/*******************************************************************************************************************
	SP Name : GetPageDetailByPageCode
	Comment   Create SP GetPageDetailByPageCode
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPageDetailByPageCode]    Script Date: 2/8/2018 12:36:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPageDetailByPageCode]
	@PageCode	NVARCHAR(255)	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Pages]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [PageCode] = @PageCode
		ORDER BY [PageCode]
END


/*******************************************************************************************************************
	SP Name : GetUserPages
	Comment   Create SP GetUserPages
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetUserPages]    Script Date: 2/8/2018 12:35:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserPages]
	@UserId 	UNIQUEIDENTIFIER 	= 	NULL	,
	@PageId 	UNIQUEIDENTIFIER 	= 	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UserPages]
		WHERE 	ISNULL(IsActive,0)  = 1 
				AND ISNULL(IsDeleted,0) = 0 	
				AND (@UserId IS NULL OR [UserId] = @UserId)
				AND (@PageId IS NULL OR [PageId] = @PageId)
		ORDER BY CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : GetUserPageById
	Comment   Create SP GetUserPageById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserPageById]    Script Date: 2/8/2018 12:51:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserPageById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UserPages]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY CreatedOn DESC 
END



/*******************************************************************************************************************
	SP Name : AddUserPages
	Comment   Create SP AddUserPages
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUserPages]    Script Date: 2/8/2018 12:52:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUserPages]	
	@UserId			UNIQUEIDENTIFIER				,
	@PageId			UNIQUEIDENTIFIER				,
	@IsAdd			BIT					=	NULL	,
	@IsEdit			BIT					=	NULL	,
	@IsDelete		BIT					=	NULL	,
	@IsView			BIT					=	NULL	,
	@Description	NVARCHAR(MAX)		=	NULL	,	
	@IsActive		BIT					=	NULL	,	
	@CreatedBy		INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UserPages]
           (
				[Id]           
			,	[UserId]		  
			,	[PageId]
			,	[IsAdd]
			,	[IsEdit]
			,	[IsDelete]
			,	[IsView]
			,	[Description] 		   
			,	[CreatedBy]
			,	[CreatedOn]
			,	[IsActive]
		   )
     VALUES
           (
			   @Id			   
			   ,@UserId
			   ,@PageId
			   ,@IsAdd
			   ,@IsEdit
			   ,@IsDelete
			   ,@IsView		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateUserPages
	Comment   Create SP UpdateUserPages
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUserPages]    Script Date: 2/8/2018 1:33:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateUserPages]
	@Id				UNIQUEIDENTIFIER				,	
	@UserId			UNIQUEIDENTIFIER				,
	@PageId			UNIQUEIDENTIFIER				,
	@IsAdd			BIT					=	NULL	,
	@IsEdit			BIT					=	NULL	,
	@IsDelete		BIT					=	NULL	,
	@IsView			BIT					=	NULL	,
	@Description	NVARCHAR(MAX)		=	NULL	,	
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[UserPages]
		SET	[UserId]		=	@UserId		
		   ,[PageId]		=	@PageId
		   ,[IsAdd]			=	@IsAdd
		   ,[IsEdit]		=	@IsEdit
		   ,[IsDelete]		=	@IsDelete
		   ,[IsView]		=	@IsView
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteUserPage
	Comment   Create SP DeleteUserPage
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteUserPage]    Script Date: 2/8/2018 1:00:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserPage]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserPages] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteUserPageByUserId
	Comment   Create SP DeleteUserPageByUserId
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeleteUserPageByUserId]    Script Date: 2/8/2018 1:00:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserPageByUserId]
	@UserId			UNIQUEIDENTIFIER				,	
	@PageId			UNIQUEIDENTIFIER	=	NULL	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	IF @PageId IS NULL
	BEGIN
		UPDATE [dbo].[UserPages] 
			SET	[IsDeleted] = 1
				,[UpdatedBy] = @UpdatedBy					   
				,[UpdatedOn] = GETDATE()
		 WHERE	ISNULL(IsDeleted,0) = 0 
				AND UserId = @UserId
	END
	ELSE
	BEGIN
		UPDATE [dbo].[UserPages] 
			SET	[IsDeleted] = 1
				,[UpdatedBy] = @UpdatedBy					   
				,[UpdatedOn] = GETDATE()
		 WHERE	ISNULL(IsDeleted,0) = 0 
				AND UserId = @UserId
				AND PageId = @PageId
	END

	SELECT @UserId AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetUserPageAccessRights
	Comment   Create SP GetUserPageAccessRights
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserPageAccessRights]    Script Date: 2/8/2018 1:01:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [GetUserPageAccessRights]
		@UserId		=	'3dee5ce9-afdf-4bb0-b0a1-faae31a5a70b'	,
		@PageCode	=	''
***/

CREATE PROCEDURE [dbo].[GetUserPageAccessRights]
	@UserId		UNIQUEIDENTIFIER				,
	@PageCode	NVARCHAR(255)		=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT UPA.*, P.PageName, P.PageCode, P.[Description] AS PageDescription
		FROM [dbo].[UserPages]	UPA
			INNER JOIN [dbo].[Pages] P ON P.Id = UPA.PageId 
				AND ISNULL(P.IsDeleted,0) = 0
		
		WHERE	ISNULL(UPA.IsDeleted,0) = 0 
				AND UPA.UserId = @UserId
				AND (ISNULL(@PageCode,'') = '' OR P.PageCode = @PageCode)
		ORDER BY UPA.CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : DeleteAllReservation
	Comment   Create SP DeleteAllReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAllReservation]    Script Date: 2/8/2018 1:01:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllReservation]
***/

CREATE PROCEDURE [dbo].[DeleteAllReservation]	
	@UpdatedBy	INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- ReservationRoomMapping	
	UPDATE [dbo].[ReservationRoomMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	
	-- ReservationPreferenceMapping
	DELETE FROM [dbo].[ReservationPreferenceMapping] 	
		
	-- CheckInCheckOutDetail
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- ReservationCharges
	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- ReservationLog
	UPDATE [dbo].[ReservationLog] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- Reservation
	UPDATE [dbo].[Reservation] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
END




/*******************************************************************************************************************
	SP Name : DeleteAllProfile
	Comment   Create SP DeleteAllProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAllProfile]    Script Date: 2/8/2018 1:01:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllProfile]
***/

CREATE PROCEDURE [dbo].[DeleteAllProfile]	
	@UpdatedBy	INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- ProfilePreferenceMapping	
	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		
	-- IndividualProfile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
END



/*******************************************************************************************************************
	SP Name : GetReservationLogByRoom
	Comment   Changes in SP GetReservationLogByRoom
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationLogByRoom]    Script Date: 2/8/2018 3:44:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationLogByRoom]
	@RoomId			UNIQUEIDENTIFIER				,
	@RoomStatusId	UNIQUEIDENTIFIER	=	NULL	,
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate	DATETIME			=	NULL	,
	@DepartureDate	DATETIME			=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RL.* FROM [dbo].[ReservationLog] RL 
			INNER JOIN Reservation R ON R.Id = RL.ReservationId
			AND ISNULL(R.IsDeleted,0) = 0 
		WHERE	ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1 
				AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
				AND 
				(
					(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
						OR 
					(ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
				)
				AND RoomId = @RoomId
				AND RL.RoomStatusId = @RoomStatusId
				AND (@ReservationId IS NULL OR RL.ReservationId != @ReservationId)

END



/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment   Changes in SP SearchGuest
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 2/8/2018 4:33:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : AddAdditionalCharges
	Comment   Changes in SP AddAdditionalCharges
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddAdditionalCharges]    Script Date: 2/8/2018 5:13:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddAdditionalCharges]	
	@Code				NVARCHAR(25)				,	
	@Description		NVARCHAR(1000)				,				
	@Price				DECIMAL(18,2)	=	NULL	,
	@IsActive			BIT							,	
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[AdditionalCharges]
           ([Id]		   
           ,[Code]
           ,[Description]
		   ,[Price]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Code
			   ,@Description
			   ,@Price
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END




/*******************************************************************************************************************
	SP Name : UpdateAdditionalCharges
	Comment   Changes in SP UpdateAdditionalCharges
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateAdditionalCharges]    Script Date: 2/8/2018 5:14:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateAdditionalCharges]
	@Id					UNIQUEIDENTIFIER				,
	@Code				NVARCHAR(25)					,
	@Description		NVARCHAR(1000)					,
	@Price				DECIMAL(18,2)		=	NULL	,
	@IsActive			BIT								,	
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[AdditionalCharges] 
		SET	[Code]			=	@Code
           ,[Description]	=	@Description
		   ,[Price]			=	@Price
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : AddAdditionalCharges
	Comment   Changes in SP AddAdditionalCharges
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationAndRoomMappingByRoom]    Script Date: 2/8/2018 6:43:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationAndRoomMappingByRoom]
	@RoomId			UNIQUEIDENTIFIER				,
	@ReservationId	UNIQUEIDENTIFIER				,
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	--Remove ReservationRoomMapping
	UPDATE RRM 
		SET	RRM.IsDeleted = 1,
			RRM.UpdatedOn = GETDATE(),
			RRM.UpdatedBy = @UpdatedBy
		FROM ReservationRoomMapping RRM
			INNER JOIN Reservation RE ON RRM.ReservationId = RE.Id
				AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RRM.IsDeleted,0) = 0 
				AND RRM.RoomId = @RoomId
				AND RRM.ReservationId <> @ReservationId
				AND ISNULL(RE.IsCheckIn,0) = 0


					
	--Remove ReservationLog
	 UPDATE RL
		SET RL.IsDeleted = 1,
			RL.UpdatedOn = GETDATE(),
			RL.UpdatedBy = @UpdatedBy
		FROM ReservationLog RL
			INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
			AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RL.IsDeleted,0) = 0 
			AND RL.RoomId = @RoomId
			AND RL.ReservationId <> @ReservationId
			AND ISNULL(RE.IsCheckIn,0) = 0
	

	SELECT @RoomId AS Id
    
END




/*******************************************************************************************************************
	SP Name : SearchRoom
	Comment   Changes in SP SearchRoom
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoom]    Script Date: 2/8/2018 7:43:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoom] NULL, NULL, '',1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoom]
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,	
	@FloorId		UNIQUEIDENTIFIER	=	NULL	,	
	@RoomNo			NVARCHAR(255)		=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoom
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]			NVARCHAR(50)		NULL	
		,   [RoomNo]		NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]	NVARCHAR(255)		NULL
		,	[FloorId]		UNIQUEIDENTIFIER	NULL
		,	[FloorName]		NVARCHAR(255)		NULL
		,	[FloorNo]		INT					NULL
		,	[RoomFeatures]	NVARCHAR(MAX)		NULL				
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Room] R
							INNER JOIN [Floor] F ON F.Id = R.FloorId
								AND ISNULL(F.IsDeleted,0) = 0
							LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
								AND ISNULL(RT.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
								AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
								AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  
						)


		INSERT INTO #tempRoom 
		(
			[RowNum]		, 
			[Id]			, 
			[Type]			, 
			[RoomNo]		, 
			[Description]	, 
			[RoomTypeId]	, 
			[RoomTypeCode]	,
			[FloorId]		, 
			[FloorName]		,
			[FloorNo]		,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN R.[Type] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN R.[Type] END DESC,

					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
						THEN R.[RoomNo] END ASC,
					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'desc'
						THEN R.[RoomNo] END DESC,

					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Name] END ASC

			) AS RowNum,
			R.Id,				
			ISNULL(R.[Type],'') AS [Type],
			ISNULL(R.[RoomNo],'') AS [RoomNo],
			ISNULL(R.[Description],'') AS [Description],
			R.RoomTypeId,
			ISNULL(RT.RoomTypeCode,'') AS [RoomTypeCode],
			R.FloorId,
			ISNULL(F.[Name],'') AS [FloorName],
			F.[FloorNo],
			R.[CreatedOn],
			R.[IsActive]
	FROM [dbo].[Room] R
			INNER JOIN [Floor] F ON F.Id = R.FloorId
				AND ISNULL(F.IsDeleted,0) = 0
			LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
				AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
				AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Room Features by comma seprated.
	UPDATE temp
		SET [RoomFeatures] = (STUFF(( SELECT ', '+ CAST(CONCAT(RF.[Name],' - ', RF.[Description])   AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM
						INNER JOIN Room R ON R.Id = RFM.RoomId
							AND ISNULL(R.IsDeleted,0) = 0
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
							AND RFM.RoomId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempRoom temp 	


	-- PAGING STARTED
	SELECT 
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[FloorId],
			temp.[FloorName],
			temp.[FloorNo],
			temp.[RoomFeatures],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoom AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END


/***************************************************************************************************/

Name : Nilesh
Date : 09-FEB-2018

/*****************************************************************************************************/


/*******************************************************************************************************************
	SP Name : UpdateReservationTotalBalance
	Comment   Changes in SP UpdateReservationTotalBalance
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationTotalBalance]    Script Date: 2/9/2018 11:54:08 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationTotalBalance]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,	
	@TotalBalance			DECIMAL(18,2)		=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET
		[TotalBalance]			=	@TotalBalance
		,[GuestBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				

END

/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment   Changes in SP SearchGuest
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 2/9/2018 12:03:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]		
			,[Email]		
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]		
				,ISNULL(P.Email,'') AS [Email]										
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]			
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : DeleteIndividualProfile
	Comment   Changes in SP DeleteIndividualProfile
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[DeleteIndividualProfile]    Script Date: 2/9/2018 12:56:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteIndividualProfile]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ProfileTypeId  UNIQUEIDENTIFIER = NULL

	SET @ProfileTypeId = (SELECT ProfileTypeId 
								FROM [IndividualProfile]  
								WHERE	ISNULL(IsDeleted,0) = 0  
										AND Id = @Id)

	--Delete Profile Preference Mapping
	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		WHERE ProfileId = @Id
			AND ProfileTypeId = @ProfileTypeId

	--UPDATE [dbo].[ProfilePreferenceMapping] 
	--	SET	[IsDeleted] = 1
	--		,[UpdatedBy] = @UpdatedBy					   
	--		,[UpdatedOn] = GETDATE()
	--    WHERE	ProfileId = @Id
	--		AND ProfileTypeId = @ProfileTypeId


	--Delete Individual Profile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  Id = @Id

	

	--Delete Reservation related data of this profile.

	--Reservation 
	UPDATE [dbo].[Reservation]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id

	--CheckInCheckOutDetail 
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id

	--ReservationLog
	UPDATE [dbo].[ReservationLog]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id


	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment   Changes in SP SearchReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 2/9/2018 1:02:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	NULL,
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	1,
		@IsShowCheckedOutReservation	=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	INT				NOT NULL	,
		[Name]	NVARCHAR(500)	NULL		,
	);

	IF ISNULL(@IsShowCancelledReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (1, 'CancelledReservation')
	END

	IF ISNULL(@IsShowCheckedInReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (2, 'CheckedIn')
	END

	IF ISNULL(@IsShowCheckedOutReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (3, 'CheckedOut')
	END

	--- POPULATE STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								
								--AND (
								--		@IsShowCancelledReservation IS NULL OR R.[IsReservationCancel] = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR R.[IsCheckIn] = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR R.[IsCheckOut] = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								
													
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*******************************************************************************************************************

Name : Nilesh
Date : 07-FEB-2018 (V2)

/*******************************************************************************************************************
	SP Name : SearchReservationByUserId
	Comment   Create SP SearchReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationByUserId]    Script Date: 2/9/2018 4:55:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@CreatedOn						=	NULL	,			
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

CREATE PROCEDURE [dbo].[SearchReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@CreatedOn			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL	
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0	
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (@CreatedOn IS NULL OR CAST(R.[CreatedOn] AS DATE) = CAST(@CreatedOn AS DATE))				
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]					
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]								
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0	
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND (@CreatedOn IS NULL OR CAST(R.[CreatedOn] AS DATE) = CAST(@CreatedOn AS DATE))				
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchCheckedOutReservationByUserId
	Comment   Create SP SearchCheckedOutReservationByUserId
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchCheckedOutReservationByUserId]    Script Date: 2/9/2018 4:55:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCheckedOutReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@CreatedOn						=	NULL	,		
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

CREATE PROCEDURE [dbo].[SearchCheckedOutReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@CreatedOn			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (@CreatedOn IS NULL OR CAST(R.[CreatedOn] AS DATE) = CAST(@CreatedOn AS DATE))				
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]					
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]								
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND (@CreatedOn IS NULL OR CAST(R.[CreatedOn] AS DATE) = CAST(@CreatedOn AS DATE))				
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/**********************************************************************************************************************/
Name : Nilesh
Date : 12-FEB-2018

/************************ Add new column IsLeisRateType ***************/

ALTER TABLE RateType ADD IsLeisRateType BIT NULL
GO


/*******************************************************************************************************************
	SP Name : AddRateType
	Comment   Changes in SP AddRateType
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRateType]    Script Date: 2/12/2018 12:52:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRateType]
	@RateTypeCode		NVARCHAR(25)				,
	@Description		NVARCHAR(500)	=	NULL	,
	@Amount				DECIMAL(18,2)				,	
	@IsLeisRateType		BIT				=	NULL	,
	@IsActive			BIT				=	NULL	,	
	@CreatedBy			INT				=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RateType]
           ([Id]
           ,[RateTypeCode]
           ,[Description]
		   ,[Amount]
		   ,[CreatedBy]
		   ,[CreatedOn]
		   ,[IsLeisRateType]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RateTypeCode
			   ,@Description
			   ,@Amount
			   ,@CreatedBy
			   ,GETDATE()
			   ,@IsLeisRateType			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : UpdateRateType
	Comment   Changes in SP UpdateRateType
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRateType]    Script Date: 2/12/2018 12:54:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRateType]
	@Id					UNIQUEIDENTIFIER			,
	@RateTypeCode		NVARCHAR(25)				,
	@Description		NVARCHAR(500)	=	NULL	,	
	@Amount				DECIMAL(18,2)	=	NULL	,
	@IsLeisRateType		BIT				=	NULL	,	
	@IsActive			BIT				=	NULL	,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RateType] 
		SET	[RateTypeCode]		= @RateTypeCode
           ,[Description]		= @Description
		   ,[Amount]			= @Amount
		   ,[UpdatedBy]			= @UpdatedBy
		   ,[IsLeisRateType]	= @IsLeisRateType
		   ,[IsActive]			= @IsActive
		   ,[UpdatedOn]			= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchRateType
	Comment   Changes in SP SearchRateType
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRateType]    Script Date: 2/12/2018 12:55:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRateType] '', 0, 1, 10
*/

ALTER PROCEDURE [dbo].[SearchRateType]		
	@RateTypeCode	NVARCHAR(25)	=	NULL	,
	@Amount			DECIMAL(18,2)	=	NULL	,
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRateType
	(
			[RowNum]			INT					NOT NULL
		,	[Id]				UNIQUEIDENTIFIER	NOT NULL
		,   [RateTypeCode]		NVARCHAR(25)		NOT NULL
		,   [Description]		NVARCHAR(500)		NULL
		,   [Amount]			DECIMAL(18,2)		NULL
		,	[CreatedOn]			DATETIME			NULL
		,	[IsLeisRateType]	BIT				NULL
		,   [IsActive]			BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[RateType]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@RateTypeCode,'') = '' OR RateTypeCode LIKE '%'+ @RateTypeCode +'%')  
								AND (ISNULL(@Amount,0) = 0 OR [Amount] =  @Amount)	
						)


		INSERT INTO #tempRateType 
		(
			[RowNum]			, 
			[Id]				, 
			[RateTypeCode]		, 
			[Description]		, 
			[Amount]			, 
			[CreatedOn]			, 
			[IsLeisRateType]	,
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN [CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN [CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN [RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN [RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Amount' and @SortDirection = 'asc'
						THEN [Amount] END ASC,
					CASE WHEN @SortColumn = 'Amount' and @SortDirection = 'desc'
						THEN [Amount] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [RateTypeCode] END ASC

			) AS RowNum,
			[ID],
			[RateTypeCode],
			[Description],
			[Amount],
			[CreatedOn],
			ISNULL([IsLeisRateType],0) AS [IsLeisRateType],
			ISNULL([IsActive],0) AS [IsActive]
		FROM [RateType] RT              
		WHERE	ISNULL(IsDeleted,0) = 0
			AND (ISNULL(@RateTypeCode,'') = '' OR RateTypeCode LIKE '%'+ @RateTypeCode +'%')  
			AND (ISNULL(@Amount,0) = 0 OR [Amount] =  @Amount)	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[RateTypeCode],
			temp.[Description],
			temp.[Amount],
			temp.[CreatedOn],
			temp.[IsLeisRateType],
			temp.[IsActive], 
			@TotalCount AS TotalCount
	FROM	
		#tempRateType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*******************************************************************************************************************
	SP Name : SearchRoom
	Comment   Changes in SP SearchRoom
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoom]    Script Date: 2/12/2018 1:53:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoom] NULL, NULL, '',1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoom]
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,	
	@FloorId		UNIQUEIDENTIFIER	=	NULL	,	
	@RoomNo			NVARCHAR(255)		=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoom
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]			NVARCHAR(50)		NULL	
		,   [RoomNo]		NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]	NVARCHAR(255)		NULL
		,	[FloorId]		UNIQUEIDENTIFIER	NULL
		,	[FloorName]		NVARCHAR(255)		NULL
		,	[FloorNo]		INT					NULL
		,	[RoomFeatures]	NVARCHAR(MAX)		NULL				
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Room] R
							INNER JOIN [Floor] F ON F.Id = R.FloorId
								AND ISNULL(F.IsDeleted,0) = 0
							LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
								AND ISNULL(RT.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
								AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
								AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  
						)


		INSERT INTO #tempRoom 
		(
			[RowNum]		, 
			[Id]			, 
			[Type]			, 
			[RoomNo]		, 
			[Description]	, 
			[RoomTypeId]	, 
			[RoomTypeCode]	,
			[FloorId]		, 
			[FloorName]		,
			[FloorNo]		,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN R.[Type] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN R.[Type] END DESC,

					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
						THEN R.[RoomNo] END ASC,
					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'desc'
						THEN R.[RoomNo] END DESC,

					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Name] END ASC

			) AS RowNum,
			R.Id,				
			ISNULL(R.[Type],'') AS [Type],
			ISNULL(R.[RoomNo],'') AS [RoomNo],
			ISNULL(R.[Description],'') AS [Description],
			R.RoomTypeId,
			ISNULL(RT.RoomTypeCode,'') AS [RoomTypeCode],
			R.FloorId,
			ISNULL(F.[Name],'') AS [FloorName],
			F.[FloorNo],
			R.[CreatedOn],
			R.[IsActive]
	FROM [dbo].[Room] R
			INNER JOIN [Floor] F ON F.Id = R.FloorId
				AND ISNULL(F.IsDeleted,0) = 0
			LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
				AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
				AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Room Features by comma seprated.
	UPDATE temp
		SET [RoomFeatures] = (STUFF(( SELECT ', '+ CAST(CONCAT(RF.[Name],' - ', RF.[Description])   AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM
						INNER JOIN Room R ON R.Id = RFM.RoomId
							AND ISNULL(R.IsDeleted,0) = 0
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
							AND RFM.RoomId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempRoom temp 	


	-- PAGING STARTED
	SELECT 
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[FloorId],
			temp.[FloorName],
			temp.[FloorNo],
			temp.[RoomFeatures],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoom AS temp
	--WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END



/*******************************************************************************************************************
	SP Name : GetWeekDayPrice
	Comment   Create new SP GetWeekDayPrice
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetWeekDayPrice]    Script Date: 2/12/2018 2:07:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetWeekDayPrice] 
		@RoomTypeId		=	'9B6A0D01-E581-4651-9C73-6A2A45DD8171', 
		@RateTypeId		=	'81C6FAD4-E347-48BF-A55B-0B6322C22B2F'
*/

CREATE PROCEDURE [dbo].[GetWeekDayPrice]
	@RoomTypeId	UNIQUEIDENTIFIER	,
	@RateTypeId	UNIQUEIDENTIFIER	
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * 
		FROM [RoomTypeRateTypeMapping] RTRTM 
		WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
				AND RTRTM.RateTypeId = @RateTypeId 
				AND RTRTM.RoomTypeId = @RoomTypeId
				AND ISNULL(RTRTM.IsWeekEndPrice,0) = 0
		ORDER BY CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment   Changes in SP GetRoomDetailsForRoomPlan
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 2/12/2018 3:01:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@FloorId			=	NULL ,
			@RoomNo				=	'105' ,
			@StartDate			=	'2018/02/08',
			@EndDate			=	'2018/02/14'
*/
ALTER PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@FloorId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
										INNER JOIN IndividualProfile PR ON PR.Id = R.ProfileId
											AND ISNULL(PR.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND (
												( CAST(RL.CheckInDate  AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
												OR 
												( CAST(RL.CheckOutDate AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
										)
								) AS RL 
						ON RL.RoomId = R.Id
					LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 

			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (@FloorId IS NULL OR R.FloorId = @FloorId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END




/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment   Changes in SP SearchAdvanceRoom
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 2/12/2018 3:02:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	''		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	''		,
			@IsClean		=	NULL	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	--- POPULATE ROOM STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]			UNIQUEIDENTIFIER	NOT NULL	,
		[StatusCode]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsClean,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CLEAN'
	END

	IF ISNULL(@IsDirty,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DIRTY'
	END

	IF ISNULL(@IsInspected,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'INSPECTED'
	END

	--- POPULATE ROOM STATUS TEMP TABLE : END

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(255)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
		,	[ReservationId]			UNIQUEIDENTIFIER	NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[RoomId]				, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			,
			[ReservationId]		
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,				
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
						AND RFM.RoomId = R.Id						
						FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures,
				RL.ReservationId AS ReservationId
		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId, RL.ReservationId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
										INNER JOIN IndividualProfile PR ON PR.Id = R.ProfileId
											AND ISNULL(PR.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
					LEFT JOIN RoomFeaturesMapping RFM ON RFM.RoomId = R.Id
						AND ISNULL(RFM.IsDeleted,0) = 0  AND ISNULL(RFM.IsActive,0) = 1 
					LEFT JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
						AND ISNULL(RF.IsDeleted,0) = 0  AND ISNULL(RF.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND 
					(
						 (SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
						 RS.Id IN (SELECT Id FROM #tempStatus)
					)					
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[RoomId],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures],
			temp.[ReservationId]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.[RoomId]
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 
END


/*******************************************************************************************************************
	SP Name : GetReservationDetailsForRoomPlan
	Comment   Changes in SP GetReservationDetailsForRoomPlan
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationDetailsForRoomPlan]    Script Date: 2/12/2018 3:03:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetReservationDetailsForRoomPlan]
			@RoomId				=	'014D170C-97F1-4876-BB45-E1F7FC690217' ,			
			@StartDate			=	'2018/01/01',
			@EndDate			=	'2018/01/07'
*/
ALTER PROCEDURE [dbo].[GetReservationDetailsForRoomPlan]
	@RoomId				UNIQUEIDENTIFIER	=	NULL,	
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT DISTINCT
				RL.ReservationId, 
				RE.ProfileId, 
				ISNULL(RE.FirstName,'') AS FirstName,
				ISNULL(RE.LastName,'') AS LastName,
				ISNULL(RE.NoOfNight,0) AS NoOfNight,
				RL.RoomId, 
				RL.RoomStatusId, 
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				CONVERT(varchar(12),RL.CheckInDate,103) AS CheckInDateString,
				RL.CheckInDate,
				CONVERT(varchar(12),RL.CheckOutDate,103) AS CheckOutDateString,
				RL.CheckOutDate
			FROM ReservationLog RL 
				INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0 
				INNER JOIN Room R ON RL.RoomId = R.Id
					AND ISNULL(R.IsDeleted,0) = 0  AND ISNULL(R.IsActive,0) = 1
				INNER JOIN IndividualProfile IPR ON IPR.Id = RE.ProfileId
					AND ISNULL(IPR.IsDeleted,0) = 0 AND ISNULL(IPR.IsActive,0) = 1
				LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
					AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 


			WHERE ISNULL(RL.IsDeleted,0) = 0 AND ISNULL(RL.IsActive,0) = 1 
				AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
				AND RL.RoomId = @RoomId
				AND (
						(CAST(RL.CheckInDate  AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
						OR (CAST(RL.CheckOutDate AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
					) 

			ORDER BY RL.CheckInDate, RL.CheckOutDate ASC

END


/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment   Changes in SP SearchReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 2/12/2018 4:27:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	NULL,
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	1,
		@IsShowCheckedOutReservation	=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	INT				NOT NULL	,
		[Name]	NVARCHAR(500)	NULL		,
	);

	IF ISNULL(@IsShowCancelledReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (1, 'CancelledReservation')
	END

	IF ISNULL(@IsShowCheckedInReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (2, 'CheckedIn')
	END

	IF ISNULL(@IsShowCheckedOutReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (3, 'CheckedOut')
	END

	--- POPULATE STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								
								--AND (
								--		@IsShowCancelledReservation IS NULL OR R.[IsReservationCancel] = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR R.[IsCheckIn] = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR R.[IsCheckOut] = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								
													
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/***************** Create new table origin ********************/
/****** Object:  Table [dbo].[Origin]    Script Date: 2/12/2018 5:35:23 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Origin](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](500) NOT NULL,
	[Description] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Origin] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddOrigin
	Comment   Create SP AddOrigin
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddOrigin]    Script Date: 2/12/2018 6:07:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddOrigin]	
	@Code			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	 NULL	,	
	@IsActive		BIT				=	 NULL	,	
	@CreatedBy		INT				=	 NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Origin]
           ([Id]           
           ,[Code]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Code		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateOrigin
	Comment   Create SP UpdateOrigin
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateOrigin]    Script Date: 2/12/2018 6:09:04 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateOrigin]
	@Id				UNIQUEIDENTIFIER			,	
	@Code			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@IsActive		BIT				=	NULL	,	
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Origin]
		SET	[Code]			=	@Code
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteOrigin
	Comment   Create SP DeleteOrigin
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteOrigin]    Script Date: 2/12/2018 6:09:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteOrigin]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Origin] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetOriginById
	Comment   Create SP GetOriginById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetOriginById]    Script Date: 2/12/2018 6:10:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetOriginById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Origin]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Code]
END


/*******************************************************************************************************************
	SP Name : GetOrigins
	Comment   Create SP GetOrigins
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetOrigins]    Script Date: 2/12/2018 6:11:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetOrigins]
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Origin]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Code]
END


/*******************************************************************************************************************
	SP Name : SearchOrigin
	Comment   Create SP SearchOrigin
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchOrigin]    Script Date: 2/12/2018 6:12:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchOrigin] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchOrigin]					
	@Code			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempOrigin
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Origin]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempOrigin 
		(
			[RowNum]		, 
			[Id]			, 
			[Code]			, 
			[Description]	,	 
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN [CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN [CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN [Code] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN [Code] END DESC,

					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
						THEN [Description] END ASC,
					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
						THEN [Description] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Code] END ASC

			) AS RowNum,
			[ID],								
			[Code],
			ISNULL([Description],'') AS [Description],
			[CreatedOn],
			[IsActive]
		FROM [dbo].[Origin]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  				 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Code],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempOrigin AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/************* Default Data for Origin Screen **************/

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'35dae353-206e-437b-add3-14db4a9b1a27', N'GM', N'General Manager Approved', 1, CAST(N'2018-02-12T18:29:17.110' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'856f700d-0ba2-4ecc-b6a5-49d57619eb1f', N'RAT', N'Rate Not Loaded', 1, CAST(N'2018-02-12T18:34:36.770' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'68dca049-1159-46f6-9175-5325da1d7e45', N'REV', N'Revenue Manage Approved', 1, CAST(N'2018-02-12T18:33:31.963' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'264b299e-9582-4049-a5ff-59051708cce6', N'DM', N'Duty Manager Approved', 1, CAST(N'2018-02-12T18:33:58.527' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'09363488-0c88-4b1f-997d-7a9efcd520b7', N'FOM', N'Front Office Manager Approved', 1, CAST(N'2018-02-12T18:34:14.320' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'e35f9032-7c69-45cc-af98-8114a5c9645c', N'RES', N'Reservation Manager Approved', 1, CAST(N'2018-02-12T18:33:15.237' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'1d46c337-fcf1-4d0a-bce7-99e7391ab17c', N'COM', N'Commision', 1, CAST(N'2018-02-12T18:35:00.570' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'0118e534-05ec-4ffb-a1c6-a03e0000f3ea', N'EVE', N'Events Manager Approved', 1, CAST(N'2018-02-12T18:34:53.033' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[Origin] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'4367851a-46f0-4824-a943-e70ce71f493e', N'SAL', N'Sales Manager Approved', 1, CAST(N'2018-02-12T18:34:26.340' AS DateTime), 1, CAST(N'2018-02-12T18:35:26.830' AS DateTime), 1, NULL);


/*******************************************************************************************************************
	SP Name : GetMaxRoomNo
	Comment   Create SP GetMaxRoomNo
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetMaxRoomNo]    Script Date: 2/12/2018 6:56:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMaxRoomNo]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT MAX([RoomNo]) AS RoomNo 
		FROM [dbo].[Room]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND TRY_PARSE(ISNULL([RoomNo],0) AS INT) > 0
END


/*******************************************************************************************************************
	SP Name : GetMarketByName
	Comment   Create SP GetMarketByName
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetMarketByName]    Script Date: 2/12/2018 7:55:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMarketByName]
	@Name	NVARCHAR(255)	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Market]
		WHERE	ISNULL(IsDeleted,0) = 0  AND ISNULL(IsActive,0) = 1
				AND [Name] = @Name
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetReservationSourceByName
	Comment   Create SP GetReservationSourceByName
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetReservationSourceByName]    Script Date: 2/12/2018 7:55:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationSourceByName]
	@Name	NVARCHAR(255)	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationSource]
		WHERE	ISNULL(IsDeleted,0) = 0  AND ISNULL(IsActive,0) = 1
				AND [Name] = @Name
		ORDER BY [Name]
END


/*********************************************************************************************/

Name : Nilesh
Date : 13-FEB-2018

/*********** Add City Name & State Name Text box *************/

ALTER TABLE IndividualProfile ADD CityName NVARCHAR(500) NULL
GO

ALTER TABLE IndividualProfile ADD StateName NVARCHAR(500) NULL
GO

/************** Update City Name for existing profile data******/

 UPDATE P SET CityName =  C.[Name]
 FROM IndividualProfile  P INNER JOIN City C ON P.CityId = C.Id
 

/************** Update State Name for existing profile data ******/

UPDATE P SET StateName=  S.[Name]
 FROM IndividualProfile  P INNER JOIN State S ON P.StateID = S.Id


/*******************************************************************************************************************
	SP Name : AddIndividualProfile
	Comment   Changes in  SP AddIndividualProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddIndividualProfile]    Script Date: 2/12/2018 8:38:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddIndividualProfile]
	@ProfileTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@TelephoneNo			NVARCHAR(50)		=	NULL	,
	@BusinessTelephoneNo	NVARCHAR(20)		=	NULL	,
	@Email					NVARCHAR(500)		=	NULL	,
	@Address				NVARCHAR(MAX)		=	NULL	,
	@HomeAddress			NVARCHAR(MAX)		=	NULL	,
	@CountryId				INT					=	NULL	,
	@StateId				INT					=	NULL	,
	@StateName				NVARCHAR(500)		=	NULL	,
	@CityId					INT					=	NULL	,
	@CityName				NVARCHAR(500)		=	NULL	,
	@ZipCode				NVARCHAR(50)		=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@NationalityId			UNIQUEIDENTIFIER	=	NULL	,
	@CarRegistrationNo		NVARCHAR(255)		=	NULL	,
	@PassportNo				NVARCHAR(255)		=	NULL	,
	@DOB					DateTime			=	NULL	,
	@IsMailingList			BIT					=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ProfileId UNIQUEIDENTIFIER
	SET @ProfileId = NEWID()

	INSERT INTO [dbo].[IndividualProfile]
           ([Id]
           ,[ProfileTypeId]
           ,[FirstName]
           ,[LastName]
           ,[TitleId]
           ,[TelephoneNo]
           ,[BusinessTelephoneNo]
           ,[Email]
           ,[Address]
           ,[HomeAddress]
           ,[CountryId]
           ,[StateId]
		   ,[StateName]
           ,[CityId]
		   ,[CityName]
           ,[ZipCode]
           ,[VipId]
		   ,[NationalityId]
           ,[CarRegistrationNo]
           ,[PassportNo]
           ,[DOB]
           ,[IsMailingList]
		   ,[Remarks]
           ,[CreatedOn]
           ,[CreatedBy]
           ,[IsActive])
     VALUES
           (
			   @ProfileId
			   ,@ProfileTypeId
			   ,@FirstName
			   ,@LastName
			   ,@TitleId
			   ,@TelephoneNo
			   ,@BusinessTelephoneNo
			   ,@Email
			   ,@Address
			   ,@HomeAddress
			   ,@CountryId
			   ,@StateId
			   ,@StateName
			   ,@CityId
			   ,@CityName
			   ,@ZipCode
			   ,@VipId
			   ,@NationalityId
			   ,@CarRegistrationNo
			   ,@PassportNo
			   ,@DOB
			   ,@IsMailingList
			   ,@Remarks
			   ,GETDATE()
			   ,@CreatedBy
			   ,@IsActive
           )

		SELECT @ProfileId AS ProfileId
    
END



/*******************************************************************************************************************
	SP Name : UpdateIndividualProfile
	Comment   Changes in  SP UpdateIndividualProfile
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[UpdateIndividualProfile]    Script Date: 2/12/2018 8:40:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateIndividualProfile]
	@Id						UNIQUEIDENTIFIER				,
	@ProfileTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@TelephoneNo			NVARCHAR(50)		=	NULL	,
	@BusinessTelephoneNo	NVARCHAR(20)		=	NULL	,
	@Email					NVARCHAR(500)		=	NULL	,
	@Address				NVARCHAR(MAX)		=	NULL	,
	@HomeAddress			NVARCHAR(MAX)		=	NULL	,
	@CountryId				INT					=	NULL	,
	@StateId				INT					=	NULL	,
	@StateName				NVARCHAR(500)		=	NULL	,
	@CityId					INT					=	NULL	,
	@CityName				NVARCHAR(500)		=	NULL	,
	@ZipCode				NVARCHAR(50)		=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@NationalityId			UNIQUEIDENTIFIER	=	NULL	,
	@CarRegistrationNo		NVARCHAR(255)		=	NULL	,
	@PassportNo				NVARCHAR(255)		=	NULL	,
	@DOB					DateTime			=	NULL	,
	@IsMailingList			BIT					=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;


	UPDATE [dbo].[IndividualProfile]
           SET	[ProfileTypeId]				=	@ProfileTypeId
				,[FirstName]				=	@FirstName
				,[LastName]					=	@LastName
				,[TitleId]					=	@TitleId
				,[TelephoneNo]				=	@TelephoneNo
				,[BusinessTelephoneNo]		=	@BusinessTelephoneNo
				,[Email]					=	@Email
				,[Address]					=	@Address
				,[HomeAddress]				=	@HomeAddress
				,[CountryId]				=	@CountryId
				,[StateId]					=	@StateId
				,[StateName]				=	@StateName
				,[CityId]					=	@CityId
				,[CityName]					=	@CityName
				,[ZipCode]					=	@ZipCode
				,[VipId]					=	@VipId
				,[NationalityId]			=	@NationalityId
				,[CarRegistrationNo]		=	@CarRegistrationNo
				,[PassportNo]				=	@PassportNo
				,[DOB]						=	@DOB
				,[IsMailingList]			=	@IsMailingList
				,[Remarks]					=	@Remarks
				,[UpdatedOn]				=	GETDATE()
				,[UpdatedBy]				=	@UpdatedBy
				,[IsActive]					=	@IsActive
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [Id]= @Id

		SELECT @Id AS ProfileId
    
END


/****************** Add new column NoOfInfant in Reservation Table ***********/

ALTER TABLE Reservation ADD NoOfInfant INT NULL
GO

/*******************************************************************************************************************
	SP Name : AddReservation
	Comment   Changes in  SP AddReservation
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 2/13/2018 9:31:36 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@FolioNumber			BIGINT				=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
		   ,[NoOfInfant]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountReasonId]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]
		   ,[TotalBalance]
		   ,[FolioNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
				, @NoOfInfant
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountReasonId	
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice
				, @TotalBalance
				, @FolioNumber
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END


/*******************************************************************************************************************
	SP Name : UpdateReservation
	Comment   Changes in  SP UpdateReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 2/13/2018 9:34:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfInfant]			=	@NoOfInfant
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountReasonId]		=	@DiscountReasonId
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice
		,[TotalBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END


/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment   Changes in  SP SearchGuest
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 2/13/2018 10:04:25 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]		
			,[Email]		
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]		
				,ISNULL(P.Email,'') AS [Email]										
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],R.[GuestBalance]) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]			
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END

/***************** Create new table DiscountReason ********************/
/****** Object:  Table [dbo].[DiscountReason]    Script Date: 2/12/2018 5:35:23 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[DiscountReason](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](500) NOT NULL,
	[Description] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_DiscountReason] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/************* Default Data for DiscountReason Screen **************/

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'35dae353-206e-437b-add3-14db4a9b1a27', N'GM', N'General Manager Approved', 1, CAST(N'2018-02-12T18:29:17.110' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'856f700d-0ba2-4ecc-b6a5-49d57619eb1f', N'RAT', N'Rate Not Loaded', 1, CAST(N'2018-02-12T18:34:36.770' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'68dca049-1159-46f6-9175-5325da1d7e45', N'REV', N'Revenue Manage Approved', 1, CAST(N'2018-02-12T18:33:31.963' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'264b299e-9582-4049-a5ff-59051708cce6', N'DM', N'Duty Manager Approved', 1, CAST(N'2018-02-12T18:33:58.527' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'09363488-0c88-4b1f-997d-7a9efcd520b7', N'FOM', N'Front Office Manager Approved', 1, CAST(N'2018-02-12T18:34:14.320' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'e35f9032-7c69-45cc-af98-8114a5c9645c', N'RES', N'Reservation Manager Approved', 1, CAST(N'2018-02-12T18:33:15.237' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'1d46c337-fcf1-4d0a-bce7-99e7391ab17c', N'COM', N'Commision', 1, CAST(N'2018-02-12T18:35:00.570' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'0118e534-05ec-4ffb-a1c6-a03e0000f3ea', N'EVE', N'Events Manager Approved', 1, CAST(N'2018-02-12T18:34:53.033' AS DateTime), NULL, NULL, 1, NULL);

INSERT [dbo].[DiscountReason] ([Id], [Code], [Description], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) VALUES (N'4367851a-46f0-4824-a943-e70ce71f493e', N'SAL', N'Sales Manager Approved', 1, CAST(N'2018-02-12T18:34:26.340' AS DateTime), 1, CAST(N'2018-02-12T18:35:26.830' AS DateTime), 1, NULL);




/*******************************************************************************************************************
	SP Name : GetDiscountReasons
	Comment   Create SP GetDiscountReasons
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetDiscountReasons]    Script Date: 2/12/2018 6:11:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetDiscountReasons]
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[DiscountReason]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Code]
END



/*************************************************************************************************/

Name : Nilesh
Date : 14-FEB-2018


/************* Change column name DiscountReasonId to DiscountApprovedBy in Reservation Table **********/

sp_rename 'Reservation.DiscountReasonId', 'DiscountApprovedBy'


/********* Add new column DiscountReason in Reservation Table ************/

ALTER TABLE Reservation ADD DiscountReason NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddReservation
	Comment   Change in SP AddReservation	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 2/14/2018 11:23:40 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@FolioNumber			BIGINT				=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
		   ,[NoOfInfant]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountApprovedBy]
		   ,[DiscountReason]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]
		   ,[TotalBalance]
		   ,[FolioNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
				, @NoOfInfant
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountApprovedBy
				, @DiscountReason
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice
				, @TotalBalance
				, @FolioNumber
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END



/*******************************************************************************************************************
	SP Name : UpdateReservation
	Comment   Change in SP UpdateReservation	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 2/14/2018 11:25:33 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfInfant]			=	@NoOfInfant
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountApprovedBy]	=	@DiscountApprovedBy
		,[DiscountReason]		=	@DiscountReason
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice
		,[TotalBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END


/*********************** Add new Table RTC ****************/

/****** Object:  Table [dbo].[RTC]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RTC](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](255) NOT NULL,
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_RTC] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/********** Add Default Data in RTC *********/

INSERT INTO [dbo].[RTC] (Id,[Code],[Description],[CreatedBy],[CreatedOn], [IsActive])
SELECT NEWID() AS Id, RoomTypeCode AS [Code], [Description], [CreatedBy], GETDATE(), 1 AS [IsActive]
 FROM [dbo].[RoomType] 
 WHERE ISNULL(IsDeleted,0) = 0    


/*******************************************************************************************************************
	SP Name : GetRTC
	Comment   Create SP GetRTC
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetRTC]    Script Date: 2/12/2018 6:11:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRTC]
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RTC]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Code]
END


/*******************************************************************************************************************
	SP Name : SearchFloor
	Comment   Change in SP SearchFloor
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchFloor]    Script Date: 2/14/2018 4:22:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchFloor] '', '', 1, 10
*/

ALTER PROCEDURE [dbo].[SearchFloor]			
	@Code			NVARCHAR(25)	=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,			
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempFloor
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]			NVARCHAR(25)		NULL	
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[FloorNo]		INT					NULL		
		,	[NoOfRoom]		INT					NULL	
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypesInfo]	NVARCHAR(MAX)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Floor] F
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR F.[Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Code,'') = '' OR F.[Code] LIKE '%'+ @Code +'%')  
						)


		INSERT INTO #tempFloor 
		(
			[RowNum]		, 
			[Id]			, 
			[Code]			, 
			[Name]			, 
			[FloorNo]		, 
			[NoOfRoom]		, 
			[Description]	, 
			[RoomTypesInfo]	,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN F.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN F.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN F.[Code] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN F.[Code] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN F.[Name] END ASC

			) AS RowNum,
			F.[ID],				
			F.[Code],
			F.[Name],
			F.[FloorNo],
			F.[NoOfRoom],
			F.[Description],
			ISNULL((STUFF(( 	
				SELECT ', ' + CAST(CONCAT(' ',RT.RoomTypeCode, ' : (', COUNT(*), ')') AS NVARCHAR(MAX))
				FROM Room R INNER JOIN RoomType RT 
				ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
				WHERE ISNULL(R.IsDeleted,0) = 0 AND R.FloorId = F.Id
				GROUP BY R.RoomTypeId, RT.RoomTypeCode
				FOR XMl PATH('')
			),1,1,'')),'') AS [RoomTypesInfo],
			F.[CreatedOn],
			F.[IsActive]
		FROM [dbo].[Floor] F
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR F.[Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Code,'') = '' OR F.[Code] LIKE '%'+ @Code +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],			
			temp.[Name],		
			temp.[FloorNo],	
			temp.[NoOfRoom],
			temp.[Description],
			temp.[RoomTypesInfo],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempFloor AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END

/*******************************************************************************************************************
	SP Name : SearchUsersActivityLog
	Comment   Change in SP SearchUsersActivityLog
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchUsersActivityLog]    Script Date: 2/14/2018 6:54:04 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUsersActivityLog] NULL, '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchUsersActivityLog]					
	@UserId			UNIQUEIDENTIFIER	=	NULL	,			
	@StartDate		DATETIME			=	NULL	,	
	@EndDate		DATETIME			=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempActivityLog
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,	[UserId]				UNIQUEIDENTIFIER	NOT NULL	
		,   [Url]					NVARCHAR(1000)		NULL	
		,   [PageName]				NVARCHAR(500)		NULL	
		,   [Description]			NVARCHAR(MAX)		NULL	
		,   [IpAddress]				NVARCHAR(500)		NULL				
		,	[RecordedOn]			NVARCHAR(50)			NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
		,   [IsRecordActivity]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UAL.Id) 
						FROM [dbo].[UsersActivityLog] UAL
								INNER JOIN [dbo].[UserDetail] UD ON UD.Id = UAL.UserId
									AND ISNULL(UD.IsDeleted,0) = 0
						WHERE	ISNULL(UAL.IsDeleted,0) = 0								
								AND ((@StartDate IS NULL AND @EndDate IS NULL) OR CAST(UAL.RecordedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
								AND (@UserId IS NULL OR UAL.[UserId] = @UserId)								
						)


		INSERT INTO #tempActivityLog 
		(
			[RowNum], 
			[Id], 
			[UserId],
			[Url], 
			[PageName], 
			[Description],
			[IpAddress], 
			[RecordedOn],
			[CreatedOn], 
			[IsActive]			
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UAL.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UAL.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Url' and @SortDirection = 'asc'
							THEN UAL.[Url] END ASC,
						CASE WHEN @SortColumn = 'Url' and @SortDirection = 'desc'
							THEN UAL.[Url] END DESC,

						CASE WHEN @SortColumn = 'PageName' and @SortDirection = 'asc'
							THEN UAL.[PageName] END ASC,
						CASE WHEN @SortColumn = 'PageName' and @SortDirection = 'desc'
							THEN UAL.[PageName] END DESC,

						CASE WHEN @SortColumn = 'IpAddress' and @SortDirection = 'asc'
							THEN UAL.[IpAddress] END ASC,
						CASE WHEN @SortColumn = 'IpAddress' and @SortDirection = 'desc'
							THEN UAL.[IpAddress] END DESC,

						CASE WHEN @SortColumn = 'RecordedOn' and @SortDirection = 'asc'
							THEN UAL.[RecordedOn] END ASC,
						CASE WHEN @SortColumn = 'RecordedOn' and @SortDirection = 'desc'
							THEN UAL.[RecordedOn] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UAL.[Id],		
				UAL.[UserId],
				ISNULL(UAL.[Url],'') AS [Url],
				ISNULL(UAL.[PageName],'') AS [PageName],
				ISNULL(UAL.[Description],'') AS [Description],
				ISNULL(UAL.[IpAddress],'') AS [IpAddress],					
				CONVERT(VARCHAR(10), UAL.[RecordedOn], 103) + ' '  + convert(VARCHAR(8), UAL.[RecordedOn], 14) AS [RecordedOn],
				UAL.[CreatedOn],
				ISNULL(UAL.[IsActive],0) AS [IsActive]				
		FROM [dbo].[UsersActivityLog] UAL
				INNER JOIN [dbo].[UserDetail] UD ON UD.Id = UAL.UserId
					AND ISNULL(UD.IsDeleted,0) = 0
		WHERE	ISNULL(UAL.IsDeleted,0) = 0								
				AND ((@StartDate IS NULL AND @EndDate IS NULL) OR CAST(UAL.RecordedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
				AND (@UserId IS NULL OR UAL.[UserId] = @UserId)		
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[UserId],	
			temp.[Url],				
			temp.[PageName],
			temp.[Description],			
			temp.[IpAddress],			
			temp.[RecordedOn],			
			temp.[CreatedOn],
			temp.IsActive, 
			temp.IsRecordActivity,
			@TotalCount AS TotalCount
	FROM	
		#tempActivityLog AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchReservationByUserId
	Comment   Change in SP SearchReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationByUserId]    Script Date: 2/14/2018 7:10:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,				
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL	
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0	
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]					
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]								
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0	
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchCheckedOutReservationByUserId
	Comment   Change in SP SearchCheckedOutReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchCheckedOutReservationByUserId]    Script Date: 2/14/2018 7:34:40 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCheckedOutReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,		
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchCheckedOutReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]					
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]								
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : AddReservation
	Comment   Change in SP AddReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 2/14/2018 8:07:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@FolioNumber			BIGINT				=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
		   ,[NoOfInfant]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountApprovedBy]
		   ,[DiscountReason]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]		   
		   ,[FolioNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
				, @NoOfInfant
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountApprovedBy
				, @DiscountReason
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice				
				, @FolioNumber
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END




/*******************************************************************************************************************
	SP Name : UpdateReservation
	Comment   Change in SP UpdateReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 2/14/2018 8:07:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfInfant]			=	@NoOfInfant
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountApprovedBy]	=	@DiscountApprovedBy
		,[DiscountReason]		=	@DiscountReason
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice		
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END


/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment   Change in SP SearchGuest
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 2/14/2018 8:08:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]		
			,[Email]		
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]		
				,ISNULL(P.Email,'') AS [Email]										
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[GuestBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]			
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : UpdateReservationTotalBalance
	Comment   Change in SP UpdateReservationTotalBalance
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationTotalBalance]    Script Date: 2/14/2018 8:08:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationTotalBalance]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,	
	@TotalBalance			DECIMAL(18,2)		=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET		
		[GuestBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				

END

/*********** Remove Total Balnce column from Reservation ****/

ALTER TABLE Reservation DROP COLUMN TotalBalance
GO

/****************************************************************************************************/

Name : Nilesh
Date : 15-FEB-2018

/******************************************************************************************************/



/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment   Change in SP SearchReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 2/15/2018 3:51:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	NULL,
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	1,
		@IsShowCheckedOutReservation	=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	INT				NOT NULL	,
		[Name]	NVARCHAR(500)	NULL		,
	);

	IF ISNULL(@IsShowCancelledReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (1, 'CancelledReservation')
	END

	IF ISNULL(@IsShowCheckedInReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (2, 'CheckedIn')
	END

	IF ISNULL(@IsShowCheckedOutReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (3, 'CheckedOut')
	END

	--- POPULATE STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								
								--AND (
								--		@IsShowCancelledReservation IS NULL OR R.[IsReservationCancel] = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR R.[IsCheckIn] = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR R.[IsCheckOut] = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								
													
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]	
			,[Email]			
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]	
				,ISNULL(P.Email,'') AS [Email]						
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]
			,temp.[Email]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchCheckedOutReservationByUserId
	Comment   Change in SP SearchCheckedOutReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchCheckedOutReservationByUserId]    Script Date: 2/15/2018 5:59:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCheckedOutReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,		
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchCheckedOutReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]			
			,	[Email]		
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]	
			,ISNULL(P.[Email],'') AS [Email]							
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : AddRTC
	Comment   Create SP AddRTC
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[AddRTC]    Script Date: 2/15/2018 6:35:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddRTC]	
	@Code			NVARCHAR(255)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RTC]
           ([Id]           
           ,[Code]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Code		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateRTC
	Comment   Create SP UpdateRTC
*******************************************************************************************************************/\
/****** Object:  StoredProcedure [dbo].[UpdateRTC]    Script Date: 2/15/2018 6:36:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRTC]
	@Id				UNIQUEIDENTIFIER		,	
	@Code			NVARCHAR(255)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[RTC]
		SET	[Code]			=	@Code
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteRTC
	Comment   Create SP DeleteRTC
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeleteRTC]    Script Date: 2/15/2018 6:37:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRTC]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RTC] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchRTC
	Comment   Create SP SearchRTC
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchRTC]    Script Date: 2/15/2018 6:37:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRTC] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchRTC]					
	@Code			NVARCHAR(255)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRTC
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[RTC]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempRTC 
		(
			[RowNum]		, 
			[Id]			, 
			[Code]			,
			[Description]	, 
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN [CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN [CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN [Code] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN [Code] END DESC,

					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
						THEN [Description] END ASC,
					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
						THEN [Description] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Code] END ASC

			) AS RowNum,
			[ID],								
			ISNULL([Code],'') AS [Code],
			ISNULL([Description],'') AS [Description],
			[CreatedOn],
			[IsActive]
		FROM [dbo].[RTC]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Code],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRTC AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/************************************************************************************************************************ 
	SP Name : GetRTCById
	Comment : Changes in SP GetRTCById	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetRTCById]    Script Date: 2/15/2018 6:40:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRTCById]
	@Id UNIQUEIDENTIFIER
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RTC]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Code]
END


/***************************************************************************************************************/
Name : Nilesh
Date : 16-FEB-2018
/***************************************************************************************************************/

/************************************************************************************************************************ 
	SP Name : DeleteCalendarNotes
	Comment : Create SP DeleteCalendarNotes	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteCalendarNotes]    Script Date: 2/16/2018 11:57:45 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteCalendarNotes]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[CalendarNotes] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/************************************************************************************************************************ 
	SP Name : DeleteReservationLogByReservation
	Comment : Create SP DeleteReservationLogByReservation	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteReservationLogByReservation]    Script Date: 2/16/2018 1:22:40 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationLogByReservation]
	@ReservationId	UNIQUEIDENTIFIER	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId

	SELECT @ReservationId AS ReservationId
    
END


/************************************************************************************************************************ 
	SP Name : DeleteCheckInCheckOutDetailByReservation
	Comment : Create SP DeleteCheckInCheckOutDetailByReservation	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteCheckInCheckOutDetailByReservation]  Script Date: 2/16/2018 1:22:40 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteCheckInCheckOutDetailByReservation]
	@ReservationId	UNIQUEIDENTIFIER	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId

	SELECT @ReservationId AS ReservationId
    
END





/************************************************************************************************************************ 
	SP Name : DeleteReservationChargesByReservation
	Comment : Create SP DeleteReservationChargesByReservation	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteReservationChargesByReservation]  Script Date: 2/16/2018 1:22:40 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationChargesByReservation]
	@ReservationId	UNIQUEIDENTIFIER	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId

	SELECT @ReservationId AS ReservationId
    
END


/************************************************************************************************************************ 
	SP Name : GetReservationCharges
	Comment : Changes in SP GetReservationCharges	
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 2/16/2018 2:49:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationCharges]
		@ReservationId			=	'8238c78e-b793-40c6-a77b-becf312d7d5a',
		@AdditionalChargeId		=	NULL
*/

ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	UNION

	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
	UNION
		SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		(CASE WHEN CHARINDEX('Cash',RC.Description) > 0 THEN RC.Code ELSE CONCAT('XXXXXXXXXXXX',RIGHT(RE.CreditCardNo, 4)) END )AS Code,
		RC.Description,3 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
				INNER JOIN Reservation RE ON RC.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)


	ORDER BY SortOrder


END



/************************************************************************************************************************ 
	SP Name : GetAvailableRoomInfoByDate
	Comment : Create SP GetAvailableRoomInfoByDate	
***********************************************************************************************************************/ 
/****** Object:  StoredProcedure [dbo].[GetAvailableRoomInfoByDate]    Script Date: 2/15/2018 6:40:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetAvailableRoomInfoByDate] 
		@Date = '2018-02-16'

*/

CREATE PROCEDURE [dbo].[GetAvailableRoomInfoByDate]
	@Date NVARCHAR(255)
AS
BEGIN	
	SET NOCOUNT ON;

   SELECT DISTINCT RT.Id AS RoomTypeId, RT.RoomTypeCode, 
		COUNT(R.Id) AS TotalRoom,
		( 
			COUNT(R.Id) - 
			(
				SELECT DISTINCT COUNT(RL.Id)
				FROM ReservationLog RL 
						INNER JOIN Reservation R ON R.Id = RL.ReservationId
							AND ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1
						INNER JOIN Room RM ON RM.Id = RL.RoomId AND ISNULL(RM.IsDeleted,0) = 0			
				WHERE	ISNULL(RL.IsDeleted,0) = 0 
						AND ISNULL(RL.IsActive,0) = 1 
						AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
						AND RM.RoomTypeId = RT.Id
						AND ( CAST(@Date AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate AS DATE))
			 )
		) AS AvailableRoom

		FROM Room R 
			INNER JOIN RoomType RT ON R.RoomTypeId = RT.Id 
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0 
		GROUP BY RT.Id, RT.RoomTypeCode

END



/************************************************************************************************************************ 
	SP Name : SearchArrivals
	Comment : Changes in SP SearchArrivals	
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 2/16/2018 6:36:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=	1, 
		@RoomNumber						=	'',
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0		
								AND ISNULL(R.IsCheckOut,0) = 0							
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
								AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0	
					AND ISNULL(R.IsCheckOut,0) = 0	
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 
					AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END

/****************************************************************************************/

Name : Nilesh
Date : 19-FEB-2018

/*************************************************************************************/

/********* Update Cancelled Reservation Reason *********************/


UPDATE RE SET RE.[CancellationReasonComment] = RCR.Description
FROM Reservation RE INNER JOIN ReservationCancellationReasons RCR ON RE.CancellationReasonId = RCR.Id


/************** Create ReservationRemarks Table ************/

/****** Object:  Table [dbo].[ReservationRemarks]    Script Date: 2/19/2018 11:01:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationRemarks](
	[Id] [uniqueidentifier] NOT NULL,	
	[ReservationId] [uniqueidentifier] NOT NULL,
	[Remarks] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationRemarks] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/**** Add Foreign Key of ReservationId in ReservationRemarks Table****/

ALTER TABLE [dbo].[ReservationRemarks] WITH NOCHECK
	ADD CONSTRAINT [FK_ReservationRemarks_Reservation] FOREIGN KEY ([ReservationId]) REFERENCES [dbo].[Reservation] ([Id]);


/************************************************************************************************************************ 
	SP Name : AddReservationRemark
	Comment : Create SP AddReservationRemark	
***********************************************************************************************************************/ 
/****** Object:  StoredProcedure [dbo].[AddReservationRemark]    Script Date: 2/19/2018 11:06:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationRemark]	
	@ReservationId	UNIQUEIDENTIFIER				,
	@Remarks		NVARCHAR(MAX)					,	
	@CreatedOn		DATETIME			=	NULL	,					
	@CreatedBy		INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationRemarks]
           (
				 [Id]           
				,[ReservationId]		   
				,[Remarks]
				,[CreatedBy]
				,[CreatedOn]
		   )
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@Remarks
			   ,@CreatedBy
			   ,@CreatedOn
           )

		SELECT @Id AS Id    
END

/************************************************************************************************************************ 
	SP Name : UpdateReservationRemark
	Comment : Create SP UpdateReservationRemark	
***********************************************************************************************************************/ 

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationRemark]
	@Id				UNIQUEIDENTIFIER				,
	@ReservationId	UNIQUEIDENTIFIER				,
	@Remarks		NVARCHAR(MAX)					,		
	@UpdatedOn		DATETIME			=	NULL	,		
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationRemarks]
		SET	[ReservationId]		=	@ReservationId	   
		   ,[Remarks]			=	@Remarks
		   ,[UpdatedBy]			=	@UpdatedBy
		   ,[UpdatedOn]			=	@UpdatedOn
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/************************************************************************************************************************ 
	SP Name : DeleteReservationRemark
	Comment : Create SP DeleteReservationRemark	
	
***********************************************************************************************************************/ 
/****** Object:  StoredProcedure [dbo].[DeleteReservationRemark]    Script Date: 2/19/2018 11:11:23 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationRemark]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationRemarks] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : GetReservationRemarkById
	Comment : Create SP GetReservationRemarkById	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetReservationRemarkById]    Script Date: 2/19/2018 11:11:53 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationRemarkById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationRemarks]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY CreatedOn DESC
END

/************************************************************************************************************************ 
	SP Name : GetReservationRemarks
	Comment : Create SP GetReservationRemarks	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationRemarks]    Script Date: 2/19/2018 11:11:53 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC GetReservationRemarks
		@ReservationId	=	NULL,
		@Id				=	NULL
	
*/

CREATE PROCEDURE [dbo].[GetReservationRemarks]
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@Id				UNIQUEIDENTIFIER	=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RM.Id,RM.ReservationId,ISNULL(RM.Remarks,'') AS Remarks, RM.CreatedOn,
		  UD.[Name] AS UserName, RM.CreatedBy,
		  (CASE	WHEN (ISNULL(RM.UpdatedBy,0) <> 0 AND RM.UpdatedOn IS NOT NULL)
				THEN
					CONCAT(
							CONVERT(VARCHAR(10),RM.UpdatedOn,103), 
							' ', 
							'at', 
							' ', 
							CONVERT(VARCHAR, RM.UpdatedOn, 108),
							' ',
							'updated by ',
							UD.[Name]
						)
				WHEN (ISNULL(RM.CreatedBy,0) <> 0 AND RM.CreatedOn IS NOT NULL)
				THEN
					CONCAT(
							CONVERT(VARCHAR(10),RM.CreatedOn,103), 
							' ', 
							'at', 
							' ', 
							CONVERT(VARCHAR, RM.CreatedOn, 108),
							' ',
							'added by ',
							UD.[Name]
						)
				ELSE ''
			END) AS TrackLog
 
		FROM [dbo].[ReservationRemarks] RM
			LEFT JOIN UserDetail UD ON UD.UserId = RM.CreatedBy
				AND ISNULL(UD.IsDeleted,0) = 0
		WHERE	ISNULL(RM.IsDeleted,0) = 0 
				AND (@Id IS NULL OR RM.Id = @Id)
				AND (@ReservationId IS NULL OR RM.ReservationId = @ReservationId)
		ORDER BY RM.CreatedOn DESC
END


/************************************************************************************************************************ 
	SP Name : SearchAdvanceProfile
	Comment : Change in SP SearchAdvanceProfile	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceProfile]    Script Date: 2/19/2018 3:14:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceProfile]
			@LastName			=	''		,
			@FirstName			=	''		,
			@ViewBy				=	NULL	,
			@City				=	''		,
			@PostalCode			=	''		,
			@MemberTypeId		=	NULL	,
			@MemberNo			=	''		,
			@Keyword			=	''		,
			@Communication		=	''		,
			@ClientID			=	''		,
			@CorpNo				=	''		,
			@IATANo				=	''		,
			@IsNegRates			=	0		,
			@IsShowInActive		=	0		,
			@CreatedBy			=	2		,
			@IsAdminUser		=	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceProfile]
	@LastName			NVARCHAR(255)		=	NULL,
	@FirstName			NVARCHAR(255)		=	NULL,
	@ViewBy				UNIQUEIDENTIFIER	=	NULL,
	@City				NVARCHAR(255)		=	NULL,
	@PostalCode			NVARCHAR(255)		=	NULL,
	@MemberTypeId		UNIQUEIDENTIFIER	=	NULL,
	@MemberNo			NVARCHAR(255)		=	NULL,
	@Keyword			NVARCHAR(255)		=	NULL,
	@Communication		NVARCHAR(255)		=	NULL,
	@ClientID			NVARCHAR(255)		=	NULL,
	@IATANo				NVARCHAR(255)		=	NULL,
	@CorpNo				NVARCHAR(255)		=	NULL,
	@IsNegRates			BIT					=	NULL,
	@IsShowInActive		BIT					=	NULL,
	@CreatedBy			INT					=	NULL,
	@IsAdminUser		BIT					=	NULL

AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  P.[CreatedOn] DESC

				) AS RowNum,
				P.[Id], 
				T.Id AS TitleId,
				ISNULL(T.[Title],'') AS Title, 
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				ISNULL(P.[CountryId],0) AS CountryId,
				ISNULL(P.[StateId],0) AS StateId,
				ISNULL(P.[CityId],0) AS CityId,
				ISNULL(P.[Remarks],'') AS [Remarks],
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@City,'') = '' OR C.[Name] LIKE '%'+ @City +'%')  
						AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')  
						AND (@IsShowInActive IS NULL OR 
								P.IsActive IN  (CASE WHEN @IsShowInActive = 0 THEN 1 ELSE P.IsActive END))
						AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))

END



/************************************************************************************************************************ 
	SP Name : DeleteAllReservation
	Comment : Change in SP DeleteAllReservation	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[DeleteAllReservation]    Script Date: 2/19/2018 4:33:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllReservation]
***/

ALTER PROCEDURE [dbo].[DeleteAllReservation]	
	@UpdatedBy	INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- ReservationRoomMapping	
	UPDATE [dbo].[ReservationRoomMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	
	-- ReservationPreferenceMapping
	DELETE FROM [dbo].[ReservationPreferenceMapping] 	
		
	-- CheckInCheckOutDetail
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- ReservationCharges
	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- ReservationLog
	UPDATE [dbo].[ReservationLog] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 

	-- ReservationRemarks
	UPDATE [dbo].[ReservationRemarks] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- Reservation
	UPDATE [dbo].[Reservation] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
END

/******************* Create new table PackageCalculationRatio *****************/

/****** Object:  Table [dbo].[PackageCalculationRatio]    Script Date: 2/19/2018 11:01:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PackageCalculationRatio](
	[Id] [uniqueidentifier] NOT NULL,	
	[Name] [nvarchar] (500) NOT NULL,
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_PackageCalculationRatio] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/************ Add data to PackageCalculationRatio table. *********/

--- Add PackageCalculationRatio data
INSERT INTO [dbo].[PackageCalculationRatio] ([Id],[Name],[Description],[CreatedOn],[IsActive],[CreatedBy]) 
	VALUES (NEWID(), 'Per Adult', 'Per Adult', GETDATE(),1,1);
	
INSERT INTO [dbo].[PackageCalculationRatio] ([Id],[Name],[Description],[CreatedOn],[IsActive],[CreatedBy]) 
	VALUES (NEWID(), 'Flat Rate', 'Flat Rate', GETDATE(),1,1);
	
INSERT INTO [dbo].[PackageCalculationRatio] ([Id],[Name],[Description],[CreatedOn],[IsActive],[CreatedBy]) 
	VALUES (NEWID(), 'Per Person', 'Per Person', GETDATE(),1,1);

INSERT INTO [dbo].[PackageCalculationRatio] ([Id],[Name],[Description],[CreatedOn],[IsActive],[CreatedBy]) 
	VALUES (NEWID(), 'Per Room', 'Per Room', GETDATE(),1,1);

/************ Add Price and CalculationRatioId column in Package Table **************/

ALTER TABLE Package ADD Price NUMERIC(18,2) NULL
GO

ALTER TABLE Package ADD CalculationRatioId UNIQUEIDENTIFIER NULL
GO


/************************************************************************************************************************ 
	SP Name : GetPackageCalculationRatio
	Comment : Create SP GetPackageCalculationRatio	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPackageCalculationRatio]    Script Date: 2/19/2018 5:16:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPackageCalculationRatio]
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PackageCalculationRatio]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/************************************************************************************************************************ 
	SP Name : AddPackage
	Comment : Change in SP AddPackage	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPackage]    Script Date: 2/19/2018 5:30:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddPackage]	
	@Name					NVARCHAR(500)				,	
	@Description			NVARCHAR(MAX)		=	NULL	,	
	@Price					NUMERIC(18,2)		=	NULL	,
	@CalculationRatioId		UNIQUEIDENTIFIER	=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Package]
           ([Id]           
           ,[Name]		
		   ,[Description] 
		   ,[Price]
		   ,[CalculationRatioId]  		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description	
			   ,@Price
			   ,@CalculationRatioId	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/************************************************************************************************************************ 
	SP Name : UpdatePackage
	Comment : Change in SP UpdatePackage	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePackage]    Script Date: 2/19/2018 5:32:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdatePackage]
	@Id						UNIQUEIDENTIFIER				,	
	@Name					NVARCHAR(500)					,	
	@Description			NVARCHAR(MAX)		=	NULL	,
	@Price					NUMERIC(18,2)		=	NULL	,
	@CalculationRatioId		UNIQUEIDENTIFIER	=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Package]
		SET	[Name]					=	@Name		
		   ,[Description]			=	@Description   	
		   ,[Price]					=	@Price
		   ,[CalculationRatioId]	=	@CalculationRatioId	   
		   ,[UpdatedBy]				=	@UpdatedBy
		   ,[UpdatedOn]				=	GETDATE()
		   ,[IsActive]				=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/************************************************************************************************************************ 
	SP Name : SearchPackage
	Comment : Change in SP SearchPackage	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPackage]    Script Date: 2/19/2018 5:33:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPackage] '', '', NULL, NULL, 1, 10
*/

ALTER PROCEDURE [dbo].[SearchPackage]					
	@Name					NVARCHAR(500)		=	NULL	,		
	@Description			NVARCHAR(MAX)		=	NULL	,
	@Price					NUMERIC(18,2)		=	NULL	,
	@CalculationRatioId		UNIQUEIDENTIFIER	=	NULL	,
	@PageNum				INT					=	1		,
	@PageSize				INT					=	10		,
	@SortColumn				NVARCHAR(255)		=	NULL	,
	@SortDirection			NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPackage
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]					NVARCHAR(255)		NOT NULL	
		,	[Description]			NVARCHAR(MAX)		NULL	
		,	[Price]					NUMERIC(18,2)		NULL
		,	[CalculationRatioId]	UNIQUEIDENTIFIER	NULL
		,	[CalculationRatio]		NVARCHAR(500)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT PK.Id) 
						FROM [dbo].[Package] PK
								LEFT JOIN [dbo].[PackageCalculationRatio] PCR ON PCR.Id = PK.CalculationRatioId
									AND ISNULL(PCR.IsDeleted,0) = 0
							WHERE	ISNULL(PK.IsDeleted,0) = 0								
									AND (ISNULL(@Name,'') = '' OR PK.[Name] LIKE '%'+ @Name +'%')  					 
									AND (ISNULL(@Description,'') = '' OR PK.[Description] LIKE '%'+ @Description +'%')  	
									AND (@Price IS NULL OR PK.[Price] = @Price)
									AND (@CalculationRatioId IS NULL OR PK.[CalculationRatioId] = @CalculationRatioId)								
						)


		INSERT INTO #tempPackage 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Description], 
			[Price],
			[CalculationRatioId],
			[CalculationRatio],
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN PK.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN PK.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN PK.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN PK.[Name] END DESC,

						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'asc'
							THEN PK.Price END ASC,
						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'desc'
							THEN PK.Price END DESC,

						CASE WHEN @SortColumn = 'CalculationRatio' and @SortDirection = 'asc'
							THEN PCR.[Name] END ASC,
						CASE WHEN @SortColumn = 'CalculationRatio' and @SortDirection = 'desc'
							THEN PCR.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN PK.[Name] END ASC

				) AS RowNum,
				PK.[ID],								
				PK.[Name],
				ISNULL(PK.[Description],'') AS [Description],
				PK.Price,
				PK.CalculationRatioId,
				ISNULL(PCR.[Name],'') AS [CalculationRatio],
				PK.[CreatedOn],
				PK.[IsActive]
		FROM [dbo].[Package] PK
				LEFT JOIN [dbo].[PackageCalculationRatio] PCR ON PCR.Id = PK.CalculationRatioId
					AND ISNULL(PCR.IsDeleted,0) = 0
			WHERE	ISNULL(PK.IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR PK.[Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR PK.[Description] LIKE '%'+ @Description +'%')  	
					AND (@Price IS NULL OR PK.[Price] = @Price)
					AND (@CalculationRatioId IS NULL OR PK.[CalculationRatioId] = @CalculationRatioId)

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],	
			temp.[Price],
			temp.[CalculationRatioId],
			temp.[CalculationRatio],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPackage AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END

/**************** Add new  table ReservationPackageMapping *************/


/****** Object:  Table [dbo].[ReservationPackageMapping]    Script Date: 2/19/2018 11:01:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationPackageMapping](
	[Id] [uniqueidentifier] NOT NULL,	
	[ReservationId] [uniqueidentifier] NOT NULL,
	[PackageId]	[uniqueidentifier] NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationPackageMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/**** Add Foreign Key of ReservationId in ReservationPackageMapping Table****/

ALTER TABLE [dbo].[ReservationPackageMapping] WITH NOCHECK
	ADD CONSTRAINT [FK_ReservationPackageMapping_Reservation] FOREIGN KEY ([ReservationId]) REFERENCES [dbo].[Reservation] ([Id]);


/************************************************************************************************************************ 
	SP Name : AddUpdateReservationPackageMapping
	Comment : Create SP AddUpdateReservationPackageMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationPackageMapping]    Script Date: 2/19/2018 6:20:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUpdateReservationPackageMapping]
	@ReservationId		UNIQUEIDENTIFIER			,	
	@PackageId			UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT * FROM [ReservationPackageMapping] 
						WHERE ISNULL(IsDeleted,0) = 0 AND [ReservationId] = @ReservationId AND PackageId = @PackageId)
	BEGIN
		DECLARE @Id UNIQUEIDENTIFIER
		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationPackageMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[PackageId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@PackageId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationPackageMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [PackageId] = @PackageId
	END
			
	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeleteReservationPackageMappingByReservation
	Comment : Create SP DeleteReservationPackageMappingByReservation	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPackageMappingByReservation]    Script Date: 2/19/2018 6:22:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationPackageMappingByReservation]	
	@ReservationId	UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationPackageMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND ReservationId = @ReservationId
	

	SELECT @ReservationId AS Id
    
END



/************************************************************************************************************************ 
	SP Name : GetReservationPackageMapping
	Comment : Create SP GetReservationPackageMapping	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationPackageMapping]    Script Date: 2/19/2018 6:23:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationPackageMapping] 		
		@ReservationId = NULL,
		@PackageId = NULL
*/
CREATE PROCEDURE [dbo].[GetReservationPackageMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL,
	@PackageId		UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT	RPM.*,PK.[Name] AS PackageName, PK.[Description] AS PackageDescription, PK.[Price] AS PackagePrice, 
			PK.CalculationRatioId AS PackageCalculationRatioId, 
			ISNULL(PCR.[Name],'') AS PackageCalculationRatio
	 FROM [dbo].[ReservationPackageMapping] RPM
			INNER JOIN [dbo].[Package] PK ON PK.Id = RPM.PackageId 
				AND ISNULL(PK.IsDeleted,0) = 0			
			LEFT JOIN [dbo].[PackageCalculationRatio] PCR ON PCR.Id = PK.CalculationRatioId
				AND ISNULL(PCR.IsDeleted,0) = 0			
		WHERE	ISNULL(RPM.IsDeleted,0) = 0
				AND (@ReservationId IS NULL OR RPM.ReservationId = @ReservationId)
				AND (@PackageId IS NULL OR RPM.PackageId = @PackageId)
		ORDER BY RPM.CreatedOn

END


/*************************************************************************************************************/
Name : Nilesh
Date : 20-FEB-2018
/**********************************************************************************************************/


/************************************************************************************************************************ 
	SP Name : SearchAdvancePackage
	Comment : Create SP SearchAdvancePackage	
***********************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchAdvancePackage]    Script Date: 2/20/2018 11:37:38 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvancePackage]
			@Name				=	''		,
			@Description		=	''		,
			@Price				=	NULL	,
			@CalculationRatioId	=	NULL	
*/
CREATE PROCEDURE [dbo].[SearchAdvancePackage]
	@Name					NVARCHAR(500)		=	NULL	,		
	@Description			NVARCHAR(MAX)		=	NULL	,
	@Price					NUMERIC(18,2)		=	NULL	,
	@CalculationRatioId		UNIQUEIDENTIFIER	=	NULL	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  PK.[Name] ASC

				) AS RowNum,
				PK.[Id],								
				PK.[Name],
				ISNULL(PK.[Description],'') AS [Description],
				PK.Price,
				PK.CalculationRatioId,
				ISNULL(PCR.[Name],'') AS [CalculationRatio],
				PK.[CreatedOn],
				PK.[IsActive]
			FROM [dbo].[Package] PK
				LEFT JOIN [dbo].[PackageCalculationRatio] PCR ON PCR.Id = PK.CalculationRatioId
					AND ISNULL(PCR.IsDeleted,0) = 0
			WHERE	ISNULL(PK.IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR PK.[Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR PK.[Description] LIKE '%'+ @Description +'%')  	
					AND (@Price IS NULL OR PK.[Price] = @Price)
					AND (@CalculationRatioId IS NULL OR PK.[CalculationRatioId] = @CalculationRatioId)
						


END



/************************************************************************************************************************ 
	SP Name : DeleteReservationPackageMapping
	Comment : Create SP DeleteReservationPackageMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPackageMapping]    Script Date: 2/19/2018 6:22:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationPackageMapping]	
	@Id			UNIQUEIDENTIFIER				,
	@UpdatedBy	INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationPackageMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
	

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeleteReservationPreferenceMapping
	Comment : Create SP DeleteReservationPreferenceMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPreferenceMapping]    Script Date: 2/20/2018 1:30:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationPreferenceMapping]	
	@Id		UNIQUEIDENTIFIER = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[ReservationPreferenceMapping] 
		WHERE	Id = @Id
	

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeleteProfilePreferenceMapping
	Comment : Create SP DeleteProfilePreferenceMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteProfilePreferenceMapping]    Script Date: 2/20/2018 1:32:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteProfilePreferenceMapping]
	@Id	UNIQUEIDENTIFIER
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		WHERE	Id = @Id

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeleteReservationRoomMapping
	Comment : Create SP DeleteReservationRoomMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationRoomMapping]    Script Date: 2/20/2018 1:38:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationRoomMapping]	
	@Id				UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationRoomMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
	

	SELECT @Id AS Id
    
END

/*** Add required data (pacakge) in AdditionalCharges table *****/

INSERT INTO [dbo].[AdditionalCharges] ([Id],[Code],[Description], [Price], [CreatedBy], [CreatedOn], [IsActive]) 
	VALUES (NEWID(), '9005' ,'Package', 0, 1, GETDATE(), 1)


/************************************************************************************************************************ 
	SP Name : GetReservationCharges
	Comment : Changes in SP GetReservationCharges	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 2/20/2018 3:09:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationCharges]
		@ReservationId			=	'3836abff-095a-43f8-98ea-b5c5db75bcc9',
		@AdditionalChargeId		=	NULL
*/

ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	UNION

	
    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9005') -- Package

	UNION

	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 3 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9005') -- Package
	UNION
	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		(CASE WHEN CHARINDEX('Cash',RC.Description) > 0 THEN RC.Code ELSE CONCAT('XXXXXXXXXXXX',RIGHT(RE.CreditCardNo, 4)) END )AS Code,
		RC.Description,4 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
				INNER JOIN Reservation RE ON RC.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)


	ORDER BY SortOrder
END

/********** DROP Foreign Key FK_ReservationCharges_AdditionalCharges  **************/

ALTER TABLE [dbo].[ReservationCharges] DROP CONSTRAINT [FK_ReservationCharges_AdditionalCharges]
GO

/********* Add new column AdditionalChargeSource into ReservationCharges table ****************/

ALTER TABLE ReservationCharges ADD AdditionalChargeSource NVARCHAR(500) NULL
GO


/************************************************************************************************************************ 
	SP Name : SearchAdvanceAdditionalCharge
	Comment : Changes in SP SearchAdvanceAdditionalCharge	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceAdditionalCharge]    Script Date: 2/20/2018 3:36:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceAdditionalCharge]
			@Code	= ''			
*/
ALTER PROCEDURE [dbo].[SearchAdvanceAdditionalCharge]
	@Code		NVARCHAR(50)	=	NULL
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  AC.[Code] ASC

				) AS RowNum,
				AC.[Id], 
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn], 
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC					
				WHERE	ISNULL(IsActive,0)  = 1 AND ISNULL(AC.IsDeleted,0) = 0
						AND (
								ISNULL(@Code,'') = '' OR 
								(AC.[Code] LIKE '%'+ @Code +'%' 
									OR AC.[Description] LIKE '%'+ @Code +'%')
							)

						--Avoid Room Rent, Package and CheckOut
						AND ISNULL(AC.[Code],'') NOT IN ('1000','9004', '9005')
END

/*********** Update default Reservation Charge Source  = 'AC' **********************/

UPDATE ReservationCharges SET AdditionalChargeSource = 'AC' WHERE ISNULL(IsDeleted,0) = 0



/************************************************************************************************************************ 
	SP Name : AddReservationCharges
	Comment : Changes in SP AddReservationCharges	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationCharges]    Script Date: 2/20/2018 3:51:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@Code					NVARCHAR(25)		=	NULL	,
	@Description			NVARCHAR(1000)		=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@AdditionalChargeSource	NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationCharges]
           ([Id]		   
           ,[ReservationId]
           ,[AdditionalChargeId]
		   ,[Code]
		   ,[Description]
		   ,[TransactionDate]
		   ,[Amount]
		   ,[Qty]
		   ,[Supplement]
		   ,[Reference]
		   ,[AdditionalChargeSource]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@AdditionalChargeId
			   ,@Code
			   ,@Description
			   ,@TransactionDate
			   ,@Amount
			   ,@Qty
			   ,@Supplement
			   ,@Reference
			   ,@AdditionalChargeSource
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : UpdateReservationCharges
	Comment : Changes in SP UpdateReservationCharges	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCharges]    Script Date: 2/20/2018 3:53:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationCharges]
	@Id						UNIQUEIDENTIFIER				,
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@Code					NVARCHAR(25)		=	NULL	,
	@Description			NVARCHAR(1000)		=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@AdditionalChargeSource	NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[ReservationId]				=	@ReservationId
           ,[AdditionalChargeId]		=	@AdditionalChargeId
		   ,[Code]						=	@Code
		   ,[Description]				=	@Description
		   ,[TransactionDate]			=	@TransactionDate
		   ,[Amount]					=	@Amount
		   ,[Qty]						=	@Qty
		   ,[Supplement]				=	@Supplement
		   ,[Reference]					=	@Reference
		   ,[AdditionalChargeSource]	=	@AdditionalChargeSource
		   ,[UpdatedBy]					=	@UpdatedBy
		   ,[IsActive]					=	@IsActive
		   ,[UpdatedOn]					=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : GetReservationChargesByAdditionalChargeSource
	Comment : Create SP GetReservationChargesByAdditionalChargeSource	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesByAdditionalChargeSource]    Script Date: 2/20/2018 4:09:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationChargesByAdditionalChargeSource]
		@ReservationId				=	'3836abff-095a-43f8-98ea-b5c5db75bcc9'	,
		@AdditionalChargeId			=	'148D7278-4954-483A-BA28-7141713E755A'	,
		@AdditionalChargeSource		=	'PKM'								
*/

CREATE PROCEDURE [dbo].[GetReservationChargesByAdditionalChargeSource]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeSource	NVARCHAR(500)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND (ISNULL(@AdditionalChargeSource,'') = '' OR RC.AdditionalChargeSource = @AdditionalChargeSource)
END


/************************************************************************************************************************ 
	SP Name : AddUpdateReservationPackageMapping
	Comment : Changes in SP AddUpdateReservationPackageMapping	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddUpdateReservationPackageMapping]    Script Date: 2/20/2018 4:15:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationPackageMapping]
	@ReservationId		UNIQUEIDENTIFIER			,	
	@PackageId			UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	
	SET @Id = (SELECT TOP 1 Id FROM [ReservationPackageMapping] 
						WHERE ISNULL(IsDeleted,0) = 0 AND [ReservationId] = @ReservationId AND PackageId = @PackageId)

	IF @Id IS NULL
	BEGIN

		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationPackageMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[PackageId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@PackageId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationPackageMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [PackageId] = @PackageId
					AND [Id] = @Id
	END
			
	SELECT @Id AS Id
    
END

/************************************************************************************************************************ 
	SP Name : GetReservationCharges
	Comment : Changes in SP GetReservationCharges	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 2/20/2018 4:34:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationCharges]
		@ReservationId			=	'3836abff-095a-43f8-98ea-b5c5db75bcc9',
		@AdditionalChargeId		=	NULL
*/

ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeSource = 'AC' -- Additional  Charge

	UNION

	
    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeSource = 'PKM' -- Package

	UNION

	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 3 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
				AND RC.AdditionalChargeSource <> 'PKM' -- Package
	UNION
	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		(CASE WHEN CHARINDEX('Cash',RC.Description) > 0 THEN RC.Code ELSE CONCAT('XXXXXXXXXXXX',RIGHT(RE.CreditCardNo, 4)) END )AS Code,
		RC.Description,4 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
				INNER JOIN Reservation RE ON RC.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)


	ORDER BY SortOrder
END


/********** DROP Foreign Key 'FK_Reservation_Package'  **************/

ALTER TABLE [dbo].[Reservation] DROP CONSTRAINT [FK_Reservation_Package]
GO

/******** Remove Package Id column from Reservation Table ********/

ALTER TABLE Reservation DROP COLUMN PackageId 
GO



/************************************************************************************************************************ 
	SP Name : AddReservation
	Comment : Changes in SP AddReservation	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 2/20/2018 5:19:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,	
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@FolioNumber			BIGINT				=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
		   ,[NoOfInfant]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]           
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountApprovedBy]
		   ,[DiscountReason]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]		   
		   ,[FolioNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
				, @NoOfInfant
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId							
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountApprovedBy
				, @DiscountReason
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice				
				, @FolioNumber
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END



/************************************************************************************************************************ 
	SP Name : UpdateReservation
	Comment : Changes in SP UpdateReservation	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 2/20/2018 5:20:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,	
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfInfant]			=	@NoOfInfant
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId		
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountApprovedBy]	=	@DiscountApprovedBy
		,[DiscountReason]		=	@DiscountReason
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice		
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END

/************************************************************************************************************************ 
	SP Name : GetRoomTypeStatusInfo
	Comment : Create SP GetRoomTypeStatusInfo	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetRoomTypeStatusInfo]    Script Date: 2/20/2018 5:51:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeStatusInfo] 
		@Date		= '2018-02-20'								,
		@RoomTypeId	= 'C26FAE42-4F8D-4A52-B4F5-DF80FE7AF96F'	

*/

CREATE PROCEDURE [dbo].[GetRoomTypeStatusInfo]
	@Date			NVARCHAR(255)		,
	@RoomTypeId		UNIQUEIDENTIFIER	
AS
BEGIN	
	SET NOCOUNT ON;

   SELECT DISTINCT RT.Id AS RoomTypeId, RT.RoomTypeCode, RT.[Description] AS RoomTypeDescription,
		COUNT(R.Id) AS TotalRoom,
		( 
			COUNT(R.Id) - 
			(
				SELECT DISTINCT COUNT(RL.Id)
				FROM ReservationLog RL 
						INNER JOIN Reservation R ON R.Id = RL.ReservationId
							AND ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1
						INNER JOIN Room RM ON RM.Id = RL.RoomId AND ISNULL(RM.IsDeleted,0) = 0			
				WHERE	ISNULL(RL.IsDeleted,0) = 0 
						AND ISNULL(RL.IsActive,0) = 1 
						AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
						AND RM.RoomTypeId = RT.Id
						AND ( CAST(@Date AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate AS DATE))
			 )
		) AS AvailableRoom

		FROM Room R 
			INNER JOIN RoomType RT ON R.RoomTypeId = RT.Id 
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0  
				AND R.RoomTypeId = @RoomTypeId		
		GROUP BY RT.Id, RT.RoomTypeCode, RT.[Description] 
END



/********************* Rename table name 'DiscountReason' to 'DiscountApprovedMaster' *********/

EXEC sp_rename 'DiscountReason', 'DiscountApprovedMaster'


/************************************************************************************************************************ 
	SP Name : GetDiscountApprovedDetail
	Comment : Create SP GetDiscountApprovedDetail	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetDiscountApprovedDetail]    Script Date: 2/20/2018 6:22:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetDiscountApprovedDetail]
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[DiscountApprovedMaster]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Code]
END


/************************************************************************************************************************ 
	SP Name : GetDiscountApprovedById
	Comment : Create SP GetDiscountApprovedById	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetDiscountApprovedById]    Script Date: 2/20/2018 6:33:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetDiscountApprovedById]
	@Id UNIQUEIDENTIFIER
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[DiscountApprovedMaster]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY Code DESC
END

/************************************************************************************************************************ 
	SP Name : AddDiscountApproved
	Comment : Create SP AddDiscountApproved	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddDiscountApproved]    Script Date: 2/20/2018 6:34:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddDiscountApproved]	
	@Code			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	 NULL	,	
	@IsActive		BIT				=	 NULL	,	
	@CreatedBy		INT				=	 NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[DiscountApprovedMaster]
           ([Id]           
           ,[Code]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Code		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/************************************************************************************************************************ 
	SP Name : UpdateDiscountApproved
	Comment : Create SP UpdateDiscountApproved	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateDiscountApproved]    Script Date: 2/20/2018 6:35:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateDiscountApproved]
	@Id				UNIQUEIDENTIFIER			,	
	@Code			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@IsActive		BIT				=	NULL	,	
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[DiscountApprovedMaster]
		SET	[Code]			=	@Code
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/************************************************************************************************************************ 
	SP Name : DeleteDiscountApproved
	Comment : Create SP DeleteDiscountApproved	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteDiscountApproved]    Script Date: 2/20/2018 6:37:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteDiscountApproved]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[DiscountApprovedMaster] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/**********************************************************************************************************************
	SP Name : SearchDiscountApproved
	Comment : Create SP SearchDiscountApproved	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchDiscountApproved]    Script Date: 2/20/2018 6:38:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchDiscountApproved] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchDiscountApproved]					
	@Code			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempDiscountApproved
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[DiscountApprovedMaster]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempDiscountApproved 
		(
			[RowNum]		, 
			[Id]			, 
			[Code]			, 
			[Description]	,	 
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN [CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN [CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN [Code] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN [Code] END DESC,

					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
						THEN [Description] END ASC,
					CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
						THEN [Description] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Code] END ASC

			) AS RowNum,
			[ID],								
			[Code],
			ISNULL([Description],'') AS [Description],
			[CreatedOn],
			[IsActive]
		FROM [dbo].[DiscountApprovedMaster]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  				 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Code],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempDiscountApproved AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*************************************************************************************************

Name : Nilesh
Date : 21-FEB-2018

/****************************************************************************************************/

/****************** Create new table AddOns *****************/


/****** Object:  Table [dbo].[AddOns]    Script Date: 2/21/2018 10:31:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[AddOns](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[Description] [nvarchar](max) NULL,
	[Price] [numeric](18, 2) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_AddOns] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/**********************************************************************************************************************
	SP Name : AddAddOns
	Comment : Create SP AddAddOns	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddAddOns]    Script Date: 2/21/2018 10:34:15 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddAddOns]	
	@Name					NVARCHAR(500)					,	
	@Description			NVARCHAR(MAX)		=	NULL	,	
	@Price					NUMERIC(18,2)		=	NULL	,	
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[AddOns]
           ([Id]           
           ,[Name]		
		   ,[Description] 
		   ,[Price]		     		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description	
			   ,@Price			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/**********************************************************************************************************************
	SP Name : UpdateAddOns
	Comment : Create SP UpdateAddOns	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateAddOns]    Script Date: 2/21/2018 10:46:21 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateAddOns]
	@Id						UNIQUEIDENTIFIER				,	
	@Name					NVARCHAR(500)					,	
	@Description			NVARCHAR(MAX)		=	NULL	,
	@Price					NUMERIC(18,2)		=	NULL	,	
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[AddOns]
		SET	[Name]					=	@Name		
		   ,[Description]			=	@Description   	
		   ,[Price]					=	@Price		   
		   ,[UpdatedBy]				=	@UpdatedBy
		   ,[UpdatedOn]				=	GETDATE()
		   ,[IsActive]				=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/**********************************************************************************************************************
	SP Name : DeleteAddOns
	Comment : Create SP DeleteAddOns	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAddOns]    Script Date: 2/21/2018 10:46:52 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteAddOns]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[AddOns] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/**********************************************************************************************************************
	SP Name : GetAddOnsById
	Comment : Create SP GetAddOnsById	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAddOnsById]    Script Date: 2/21/2018 10:47:18 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAddOnsById]
	@Id UNIQUEIDENTIFIER
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AddOns]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/**********************************************************************************************************************
	SP Name : GetAddOns
	Comment : Create SP GetAddOns	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAddOns]    Script Date: 2/21/2018 10:47:51 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAddOns]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AddOns]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/**********************************************************************************************************************
	SP Name : SearchAddOns
	Comment : Create SP SearchAddOns	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAddOns]    Script Date: 2/21/2018 10:48:27 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAddOns] '', '', NULL, 1, 10
*/

CREATE PROCEDURE [dbo].[SearchAddOns]					
	@Name					NVARCHAR(500)		=	NULL	,		
	@Description			NVARCHAR(MAX)		=	NULL	,
	@Price					NUMERIC(18,2)		=	NULL	,	
	@PageNum				INT					=	1		,
	@PageSize				INT					=	10		,
	@SortColumn				NVARCHAR(255)		=	NULL	,
	@SortDirection			NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempAddOns
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]					NVARCHAR(255)		NOT NULL	
		,	[Description]			NVARCHAR(MAX)		NULL	
		,	[Price]					NUMERIC(18,2)		NULL		
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT ADO.Id) 
						FROM [dbo].[AddOns] ADO																	
							WHERE	ISNULL(ADO.IsDeleted,0) = 0								
									AND (ISNULL(@Name,'') = '' OR ADO.[Name] LIKE '%'+ @Name +'%')  					 
									AND (ISNULL(@Description,'') = '' OR ADO.[Description] LIKE '%'+ @Description +'%')  	
									AND (@Price IS NULL OR ADO.[Price] = @Price)									
						)


		INSERT INTO #tempAddOns 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Description], 
			[Price],
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN ADO.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN ADO.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN ADO.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN ADO.[Name] END DESC,

						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'asc'
							THEN ADO.Price END ASC,
						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'desc'
							THEN ADO.Price END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN ADO.[Name] END ASC

				) AS RowNum,
				ADO.[Id],								
				ADO.[Name],
				ISNULL(ADO.[Description],'') AS [Description],
				ADO.Price,				
				ADO.[CreatedOn],
				ADO.[IsActive]
		FROM [dbo].[AddOns] ADO																	
		WHERE	ISNULL(ADO.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR ADO.[Name] LIKE '%'+ @Name +'%')  					 
				AND (ISNULL(@Description,'') = '' OR ADO.[Description] LIKE '%'+ @Description +'%')  	
				AND (@Price IS NULL OR ADO.[Price] = @Price)

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],	
			temp.[Price],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempAddOns AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/**********************************************************************************************************************
	SP Name : SearchAdvanceAddOns
	Comment : Create SP SearchAdvanceAddOns	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceAddOns]    Script Date: 2/21/2018 11:36:13 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceAddOns]
			@Name				=	''		,
			@Description		=	''		,
			@Price				=	NULL	
*/
CREATE PROCEDURE [dbo].[SearchAdvanceAddOns]
	@Name					NVARCHAR(500)		=	NULL	,		
	@Description			NVARCHAR(MAX)		=	NULL	,
	@Price					NUMERIC(18,2)		=	NULL		
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  ADO.[Name] ASC

				) AS RowNum,
				ADO.[Id],								
				ADO.[Name],
				ISNULL(ADO.[Description],'') AS [Description],
				ADO.Price,
				ADO.[CreatedOn],
				ADO.[IsActive]
			FROM [dbo].[AddOns] ADO				
			WHERE	ISNULL(ADO.IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR ADO.[Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR ADO.[Description] LIKE '%'+ @Description +'%')  	
					AND (@Price IS NULL OR ADO.[Price] = @Price)					

END



/****************** Replace credit card number with last 4 digits in reservation table. ************/

UPDATE Reservation SET CreditCardNo = RIGHT(LTRIM(RTRIM(CreditCardNo)),4) WHERE ISNULL(CreditCardNo,'') <> ''



/**************** Add new  table ReservationAddOnsMapping *************/


/****** Object:  Table [dbo].[ReservationAddOnsMapping]    Script Date: 2/19/2018 11:01:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationAddOnsMapping](
	[Id] [uniqueidentifier] NOT NULL,	
	[ReservationId] [uniqueidentifier] NOT NULL,
	[AddOnsId]	[uniqueidentifier] NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationAddOnsMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/**** Add Foreign Key of ReservationId in ReservationAddOnsMapping Table****/

ALTER TABLE [dbo].[ReservationAddOnsMapping] WITH NOCHECK
	ADD CONSTRAINT [FK_ReservationAddOnsMapping_Reservation] FOREIGN KEY ([ReservationId]) REFERENCES [dbo].[Reservation] ([Id]);


/************************************************************************************************************************ 
	SP Name : AddUpdateReservationAddOnsMapping
	Comment : Create SP AddUpdateReservationAddOnsMapping
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationAddOnsMapping]    Script Date: 2/21/2018 2:22:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUpdateReservationAddOnsMapping]
	@ReservationId		UNIQUEIDENTIFIER				,	
	@AddOnsId			UNIQUEIDENTIFIER				,
	@CreatedBy			INT					=	NULL	,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	
	SET @Id = (SELECT TOP 1 Id FROM [ReservationAddOnsMapping] 
						WHERE ISNULL(IsDeleted,0) = 0 AND [ReservationId] = @ReservationId AND AddOnsId = @AddOnsId)

	IF @Id IS NULL
	BEGIN

		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationAddOnsMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[AddOnsId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@AddOnsId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationAddOnsMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [AddOnsId] = @AddOnsId
					AND [Id] = @Id
	END
			
	SELECT @Id AS Id
    
END

/************************************************************************************************************************ 
	SP Name : DeleteReservationAddOnsMappingByReservation
	Comment : Create SP DeleteReservationAddOnsMappingByReservation	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationAddOnsMappingByReservation]    Script Date: 2/21/2018 2:24:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationAddOnsMappingByReservation]	
	@ReservationId	UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationAddOnsMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND ReservationId = @ReservationId
	

	SELECT @ReservationId AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeleteReservationAddOnsMapping
	Comment : Create SP DeleteReservationAddOnsMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationAddOnsMapping]    Script Date: 2/21/2018 2:24:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationAddOnsMapping]	
	@Id			UNIQUEIDENTIFIER				,
	@UpdatedBy	INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationAddOnsMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
	

	SELECT @Id AS Id
    
END

/************************************************************************************************************************ 
	SP Name : GetReservationAddOnsMapping
	Comment : Create SP GetReservationAddOnsMapping	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationAddOnsMapping]    Script Date: 2/21/2018 2:25:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationAddOnsMapping] 		
		@ReservationId = NULL,
		@AddOnsId = NULL
*/
CREATE PROCEDURE [dbo].[GetReservationAddOnsMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL,
	@AddOnsId		UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT	RAM.*,
			ADO.[Name] AS [AddOnsName], ADO.[Description] AS AddOnsDescription, ADO.[Price] AS AddOnsPrice

	 FROM [dbo].[ReservationAddOnsMapping] RAM
			INNER JOIN [dbo].[AddOns] ADO ON ADO.Id = RAM.AddOnsId 
				AND ISNULL(ADO.IsDeleted,0) = 0				
		WHERE	ISNULL(RAM.IsDeleted,0) = 0
				AND (@ReservationId IS NULL OR RAM.ReservationId = @ReservationId)
				AND (@AddOnsId IS NULL OR RAM.AddOnsId = @AddOnsId)
		ORDER BY RAM.CreatedOn

END


/************************************************************************************************************************ 
	SP Name : DeleteAllReservation
	Comment : Changes in SP DeleteAllReservation	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAllReservation]    Script Date: 2/21/2018 3:42:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllReservation]
***/

ALTER PROCEDURE [dbo].[DeleteAllReservation]	
	@UpdatedBy	INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- ReservationRoomMapping	
	UPDATE [dbo].[ReservationRoomMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	
	-- ReservationPreferenceMapping
	DELETE FROM [dbo].[ReservationPreferenceMapping] 	
		
	-- CheckInCheckOutDetail
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- ReservationCharges
	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
		
	-- ReservationLog
	UPDATE [dbo].[ReservationLog] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 

	-- ReservationRemarks
	UPDATE [dbo].[ReservationRemarks] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 


	-- ReservationPackageMapping
	UPDATE [dbo].[ReservationPackageMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 

	-- ReservationAddOnsMapping
	UPDATE [dbo].[ReservationAddOnsMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				
	-- Reservation
	UPDATE [dbo].[Reservation] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
END




/************************************************************************************************************************ 
	SP Name : DeleteReservation
	Comment : Changes in SP DeleteReservation	
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservation]    Script Date: 2/21/2018 3:43:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservation]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;


	--Delete Reservation Preference Mapping
	DELETE FROM [dbo].[ReservationPreferenceMapping] 
		WHERE ReservationId = @Id			

	--Delete Reservation Package Mapping
	UPDATE [dbo].[ReservationPackageMapping] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete Reservation Remarks
	UPDATE [dbo].[ReservationRemarks]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete Reservation Charges
	UPDATE [dbo].[ReservationCharges]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete Reservation AddOns Mapping
	UPDATE [dbo].[ReservationAddOnsMapping]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete Reservation Room Mapping
	UPDATE [dbo].[ReservationRoomMapping]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete CheckIn CheckOut Detail
	UPDATE [dbo].[CheckInCheckOutDetail]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete Reservation Log
	UPDATE [dbo].[ReservationLog]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ReservationId = @Id

	--Delete Reservation
	UPDATE [dbo].[Reservation] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  Id = @Id

	SELECT @Id AS Id
    
END



/************************************************************************************************************************ 
	SP Name : UpdateReservationTotalPrice
	Comment : Create SP UpdateReservationTotalPrice	
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[UpdateReservationTotalPrice]    Script Date: 2/21/2018 3:59:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationTotalPrice]	
	@Id					UNIQUEIDENTIFIER	=	NULL	,	
	@TotalPrice			DECIMAL(18,2)		=	NULL	,	
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET		
		 [TotalPrice]			=	@TotalPrice
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				
END



/*******************************************************************************************************************
	SP Name : GetWeekEndPrice
	Comment   Create new SP GetWeekEndPrice
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetWeekEndPrice]    Script Date: 2/21/2018 5:01:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetWeekEndPrice] 
		@RoomTypeId		=	'9B6A0D01-E581-4651-9C73-6A2A45DD8171', 
		@RateTypeId		=	'81C6FAD4-E347-48BF-A55B-0B6322C22B2F'
*/

CREATE PROCEDURE [dbo].[GetWeekEndPrice]
	@RoomTypeId	UNIQUEIDENTIFIER	,
	@RateTypeId	UNIQUEIDENTIFIER	
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * 
		FROM [RoomTypeRateTypeMapping] RTRTM 
		WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
				AND RTRTM.RateTypeId = @RateTypeId 
				AND RTRTM.RoomTypeId = @RoomTypeId
				AND ISNULL(RTRTM.IsWeekEndPrice,0) = 1
		ORDER BY CreatedOn DESC
END


/*******************************************************************************************************/
Name : Nilesh
Date : 22-FEB-2018
/*******************************************************************************************************/


/*************** Create TempBulkReservation Table ***************/


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TempBulkReservation](
	[Id] [uniqueidentifier] NOT NULL,
	[TitleId] [uniqueidentifier] NULL,
	[LastName] [nvarchar](255) NULL,
	[FirstName] [nvarchar](255) NULL,
	[ProfileId] [uniqueidentifier] NULL,
	[MemberTypeId] [uniqueidentifier] NULL,
	[CountryId] [int] NULL,
	[LanguageId] [uniqueidentifier] NULL,
	[VipId] [uniqueidentifier] NULL,
	[PhoneNo] [nvarchar](50) NULL,
	[MemberNo] [nvarchar](255) NULL,
	[MemberLvt] [nvarchar](255) NULL,
	[AgentId] [uniqueidentifier] NULL,
	[CompanyId] [uniqueidentifier] NULL,
	[GroupId] [uniqueidentifier] NULL,
	[SourceId] [uniqueidentifier] NULL,
	[ContactId] [uniqueidentifier] NULL,
	[ArrivalDate] [datetime] NOT NULL,
	[NoOfNight] [int] NULL,
	[DepartureDate] [datetime] NULL,
	[NoOfAdult] [int] NULL,
	[NoOfChildren] [int] NULL,
	[NoOfRoom] [int] NULL,
	[RoomTypeId] [uniqueidentifier] NULL,
	[RtcId] [uniqueidentifier] NULL,
	[ExtnId] [uniqueidentifier] NULL,
	[RateCodeId] [uniqueidentifier] NULL,
	[IsFixedRate] [bit] NULL,
	[Rate] [decimal](18, 2) NULL,
	[CurrencyId] [uniqueidentifier] NULL,
	[BlockCodeId] [uniqueidentifier] NULL,
	[ETA] [time](7) NULL,
	[ReservationTypeId] [uniqueidentifier] NULL,
	[MarketId] [uniqueidentifier] NULL,
	[ReservationSourceId] [uniqueidentifier] NULL,
	[OriginId] [uniqueidentifier] NULL,
	[PaymentMethodId] [uniqueidentifier] NULL,
	[CreditCardNo] [nvarchar](255) NULL,
	[CardExpiryDate] [nvarchar](50) NULL,
	[CVVNo] [nvarchar](255) NULL,
	[ApprovalCode] [nvarchar](255) NULL,
	[ApprovalAmount] [decimal](18, 2) NULL,
	[SuitWith] [nvarchar](255) NULL,
	[IsEmailConfirmation] [bit] NULL,
	[GuestBalance] [decimal](18, 2) NULL,
	[DiscountAmount] [decimal](18, 2) NULL,
	[DiscountPercentage] [decimal](18, 2) NULL,
	[DiscountApprovedBy] [uniqueidentifier] NULL,
	[TARecordLocator] [nvarchar](255) NULL,
	[SpecialsId] [uniqueidentifier] NULL,
	[ReservationComments] [nvarchar](max) NULL,
	[ItemInventoryId] [uniqueidentifier] NULL,
	[Remarks] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[InHouseComments] [nvarchar](max) NULL,
	[CashieringComments] [nvarchar](max) NULL,
	[HouseKeepingComments] [nvarchar](max) NULL,
	[ConfirmationNumber] [nvarchar](255) NULL,
	[CancellationReasonId] [uniqueidentifier] NULL,
	[CancellationReasonComment] [nvarchar](2000) NULL,
	[IsReservationCancel] [bit] NULL,
	[IsCheckIn] [bit] NULL,
	[IsCheckOut] [bit] NULL,
	[TotalPrice] [decimal](18, 2) NULL,
	[ReservationStatusId] [uniqueidentifier] NULL,
	[FolioNumber] [bigint] NULL,
	[NoOfInfant] [int] NULL,
	[DiscountReason] [nvarchar](max) NULL,
	[RoomNo] [nvarchar](500) NULL,
	[RoomId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TempBulkReservation] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



/*******************************************************************************************************************
	SP Name : GetTempBulkReservation
	Comment   Create new SP GetTempBulkReservation
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetTempBulkReservation]    Script Date: 2/22/2018 2:34:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTempBulkReservation]
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation] TBR
			INNER JOIN [dbo].[IndividualProfile] PR ON TBR.ProfileId = PR.Id
				AND ISNULL(PR.IsDeleted,0) = 0 
		WHERE ISNULL(TBR.IsActive,0)  = 1 AND ISNULL(TBR.IsDeleted,0) = 0 
		ORDER BY TBR.CreatedOn
END



/*******************************************************************************************************************
	SP Name : GetTempBulkReservationById
	Comment   Create new SP GetTempBulkReservationById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetTempBulkReservationById]    Script Date: 2/22/2018 3:16:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTempBulkReservationById]
	@Id UNIQUEIDENTIFIER 
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END


/****** Object:  StoredProcedure [dbo].[UpdateTempBulkReservation]    Script Date: 2/22/2018 3:21:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateTempBulkReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,	
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@RoomId					UNIQUEIDENTIFIER	=	NULL	,
	@RoomNo					NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[TempBulkReservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfInfant]			=	@NoOfInfant
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId		
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountApprovedBy]	=	@DiscountApprovedBy
		,[DiscountReason]		=	@DiscountReason
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice	
		,[RoomId]				=	@RoomId
		,[RoomNo]				=	@RoomNo
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END

/******************* Add LastLoggedOn column in UserDetail table *************/

ALTER TABLE UserDetail ADD LastLoggedOn DATETIME NULL
GO


/*******************************************************************************************************************
	SP Name : UpdateUsersLastLoginTime
	Comment   Create new SP UpdateUsersLastLoginTime
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUsersLastLoginTime]    Script Date: 2/22/2018 4:18:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateUsersLastLoginTime]
	@Id		UNIQUEIDENTIFIER
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserDetail] 
		SET	[LastLoggedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationByUserId
	Comment   Create new SP DeleteReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationByUserId]    Script Date: 2/22/2018 4:24:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationByUserId]
	@UserId		INT		,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER 
	
	-- Get reservations by users
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  Id
			FROM	[dbo].[Reservation]
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [CreatedBy] = @UserId
			ORDER BY CreatedOn ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation INTO @ReservationId
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF @ReservationId IS NOT NULL
			BEGIN
				--Delete reservation.
				EXEC [dbo].[DeleteReservation] 
						@Id			=	@ReservationId,
						@UpdatedBy	=	@UpdatedBy
			END
				
			FETCH NEXT FROM cur_reservation INTO @ReservationId
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation

	SELECT @UserId AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetUsersReservationByDate
	Comment   Create new SP GetUsersReservationByDate
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUsersReservationByDate]    Script Date: 2/22/2018 4:38:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUsersReservationByDate]
	@Date		DATETIME	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
				AND CAST([CreatedOn] AS DATE) =  CAST(@Date AS DATE)
		
END


/*******************************************************************************************************/
Name : Nilesh
Date : 23-FEB-2018
/*******************************************************************************************************/

/*******************************************************************************************************************
	SP Name : AddProfilePreferenceMapping
	Comment   Changes in SP AddProfilePreferenceMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddProfilePreferenceMapping]    Script Date: 2/23/2018 1:08:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddProfilePreferenceMapping]
	@ProfileTypeId		UNIQUEIDENTIFIER,
	@ProfileId			UNIQUEIDENTIFIER,
	@PreferenceId		UNIQUEIDENTIFIER,
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT * FROM [ProfilePreferenceMapping] 
			WHERE [ProfileId] = @ProfileId AND [PreferenceId] = @PreferenceId
					AND [CreatedBy] = @CreatedBy)
	BEGIN
		DECLARE @Id UNIQUEIDENTIFIER
		SET @Id = NEWID()

		INSERT INTO [dbo].[ProfilePreferenceMapping]
			   ([Id]
			   ,[ProfileTypeId]
			   ,[ProfileId]
			   ,[PreferenceId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ProfileTypeId
					,@ProfileId
					,@PreferenceId
					,@CreatedBy
					,GETDATE()
				)
	END
			
	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : AddReservationPreferenceMapping
	Comment   Changes in SP AddReservationPreferenceMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationPreferenceMapping]    Script Date: 2/23/2018 1:14:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationPreferenceMapping]
	@ReservationId		UNIQUEIDENTIFIER,	
	@PreferenceId		UNIQUEIDENTIFIER,
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT * FROM [ReservationPreferenceMapping] 
						WHERE [ReservationId] = @ReservationId AND [PreferenceId] = @PreferenceId
								AND [CreatedBy] = @CreatedBy)
	BEGIN
		DECLARE @Id UNIQUEIDENTIFIER
		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationPreferenceMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[PreferenceId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@PreferenceId
					,@CreatedBy
					,GETDATE()
				)
	END
			
	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : AddUpdateReservationAddOnsMapping
	Comment   Changes in SP AddUpdateReservationAddOnsMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationAddOnsMapping]    Script Date: 2/23/2018 1:18:59 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationAddOnsMapping]
	@ReservationId		UNIQUEIDENTIFIER				,	
	@AddOnsId			UNIQUEIDENTIFIER				,
	@CreatedBy			INT					=	NULL	,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	
	SET @Id = (SELECT TOP 1 Id FROM [ReservationAddOnsMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [ReservationId] = @ReservationId 
								AND AddOnsId = @AddOnsId
								AND [CreatedBy] = @CreatedBy
				)

	IF @Id IS NULL
	BEGIN

		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationAddOnsMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[AddOnsId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@AddOnsId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationAddOnsMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [AddOnsId] = @AddOnsId
					AND [Id] = @Id
	END
			
	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : AddUpdateReservationPackageMapping
	Comment   Changes in SP AddUpdateReservationPackageMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationPackageMapping]    Script Date: 2/23/2018 1:19:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationPackageMapping]
	@ReservationId		UNIQUEIDENTIFIER			,	
	@PackageId			UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	
	SET @Id = (SELECT TOP 1 Id FROM [ReservationPackageMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [ReservationId] = @ReservationId 
								AND PackageId = @PackageId
								AND [CreatedBy] = @CreatedBy
				)

	IF @Id IS NULL
	BEGIN

		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationPackageMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[PackageId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@PackageId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationPackageMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [PackageId] = @PackageId
					AND [Id] = @Id
	END
			
	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : AddUpdateReservationRoomMapping
	Comment   Changes in SP AddUpdateReservationRoomMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationRoomMapping]    Script Date: 2/23/2018 1:21:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationRoomMapping]
	@ReservationId		UNIQUEIDENTIFIER			,	
	@RoomId				UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT * FROM [ReservationRoomMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [ReservationId] = @ReservationId 
								AND [RoomId] = @RoomId
								AND [CreatedBy] = @CreatedBy
					)
	BEGIN
		DECLARE @Id UNIQUEIDENTIFIER
		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationRoomMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[RoomId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@RoomId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationRoomMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [RoomId] = @RoomId
	END
			
	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : AddUpdateRoomFeaturesMapping
	Comment   Changes in SP AddUpdateRoomFeaturesMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateRoomFeaturesMapping]    Script Date: 2/23/2018 1:21:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateRoomFeaturesMapping]
	@RoomId				UNIQUEIDENTIFIER			,	
	@RoomFeatureId		UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	IF NOT EXISTS (SELECT * FROM [RoomFeaturesMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [RoomId] = @RoomId 
								AND [RoomFeatureId] = @RoomFeatureId							
					)
	BEGIN		
		INSERT INTO [dbo].[RoomFeaturesMapping]
			   ([Id]
			   ,[RoomId]			   
			   ,[RoomFeatureId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@RoomId					
					,@RoomFeatureId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[RoomFeaturesMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [RoomFeatureId] = @RoomFeatureId 
					AND [RoomId] = @RoomId
	END
			
	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteAllProfile
	Comment   Changes in SP DeleteAllProfile
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeleteAllProfile]    Script Date: 2/23/2018 1:29:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllProfile]
***/

ALTER PROCEDURE [dbo].[DeleteAllProfile]		
	@UpdatedBy	INT	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

	-- ProfilePreferenceMapping	
	DELETE FROM [dbo].[ProfilePreferenceMapping]  WHERE [CreatedBy] = @UserId
		
	-- IndividualProfile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
END



/*******************************************************************************************************************
	SP Name : DeleteAllReservation
	Comment   Changes in SP DeleteAllReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAllReservation]    Script Date: 2/23/2018 1:29:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllReservation]
***/

ALTER PROCEDURE [dbo].[DeleteAllReservation]	
	@UpdatedBy	INT	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

	-- ReservationRoomMapping	
	UPDATE [dbo].[ReservationRoomMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
		
	
	-- ReservationPreferenceMapping
	DELETE FROM [dbo].[ReservationPreferenceMapping] 
			WHERE [CreatedBy] = @UserId
		
	-- CheckInCheckOutDetail
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
		
	-- ReservationCharges
	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
		
	-- ReservationLog
	UPDATE [dbo].[ReservationLog] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId

	-- ReservationRemarks
	UPDATE [dbo].[ReservationRemarks] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId


	-- ReservationPackageMapping
	UPDATE [dbo].[ReservationPackageMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
				

	-- ReservationAddOnsMapping
	UPDATE [dbo].[ReservationAddOnsMapping] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
				
	-- Reservation
	UPDATE [dbo].[Reservation] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
END




/*******************************************************************************************************************
	SP Name : DeleteCheckInCheckOutDetailByReservation
	Comment   Changes in SP DeleteCheckInCheckOutDetailByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteCheckInCheckOutDetailByReservation]    Script Date: 2/23/2018 1:32:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteCheckInCheckOutDetailByReservation]
	@ReservationId	UNIQUEIDENTIFIER	,	
	@UpdatedBy		INT					,
	@UserId			INT					

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId
				AND [CreatedBy] = @UserId

	SELECT @ReservationId AS ReservationId
    
END


/*******************************************************************************************************************
	SP Name : DeleteIndividualProfile
	Comment   Changes in SP DeleteIndividualProfile
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[DeleteIndividualProfile]    Script Date: 2/23/2018 1:33:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteIndividualProfile]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT					

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ProfileTypeId  UNIQUEIDENTIFIER = NULL

	SET @ProfileTypeId = (SELECT ProfileTypeId 
								FROM [IndividualProfile]  
								WHERE	ISNULL(IsDeleted,0) = 0  
										AND Id = @Id 
										AND [CreatedBy] = @UserId)

	--Delete Profile Preference Mapping
	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		WHERE ProfileId = @Id
			AND ProfileTypeId = @ProfileTypeId
			AND [CreatedBy] = @UserId

	--UPDATE [dbo].[ProfilePreferenceMapping] 
	--	SET	[IsDeleted] = 1
	--		,[UpdatedBy] = @UpdatedBy					   
	--		,[UpdatedOn] = GETDATE()
	--    WHERE	ProfileId = @Id
	--		AND ProfileTypeId = @ProfileTypeId


	--Delete Individual Profile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  Id = @Id
			AND [CreatedBy] = @UserId

	

	--Delete Reservation related data of this profile.

	--Reservation 
	UPDATE [dbo].[Reservation]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id
			AND [CreatedBy] = @UserId

	--CheckInCheckOutDetail 
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id
			AND [CreatedBy] = @UserId

	--ReservationLog
	UPDATE [dbo].[ReservationLog]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id
			AND [CreatedBy] = @UserId


	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteProfilePreferenceMappingByProfile
	Comment   Changes in SP DeleteProfilePreferenceMappingByProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteProfilePreferenceMappingByProfile]    Script Date: 2/23/2018 1:35:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteProfilePreferenceMappingByProfile]
	@ProfileTypeId	UNIQUEIDENTIFIER = NULL	,
	@ProfileId		UNIQUEIDENTIFIER = NULL	,
	@UserId			INT						
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		WHERE	ProfileId = @ProfileId 
				AND ProfileTypeId = @ProfileTypeId
				AND [CreatedBy] = @UserId

	--UPDATE [dbo].[ProfilePreferenceMapping] 
	--	SET	[IsDeleted] = 1
	--		,[UpdatedBy] = @UpdatedBy					   
	--		,[UpdatedOn] = GETDATE()
 --    WHERE	ISNULL(IsDeleted,0) = 0  
	--		AND ProfileId = @ProfileId
	--		AND ProfileTypeId = @ProfileTypeId

	SELECT @ProfileId AS Id
    
END



/*******************************************************************************************************************
	SP Name : DeleteProfilePreferenceMapping
	Comment   Changes in SP DeleteProfilePreferenceMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteProfilePreferenceMapping]    Script Date: 2/23/2018 1:36:59 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteProfilePreferenceMapping]
	@Id			UNIQUEIDENTIFIER	,
	@UserId		INT
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		WHERE	Id = @Id
				AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : DeleteReservation
	Comment   Changes in SP DeleteReservation
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeleteReservation]    Script Date: 2/23/2018 1:37:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservation]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT					

AS
BEGIN
	SET NOCOUNT ON;


	--Delete Reservation Preference Mapping
	DELETE FROM [dbo].[ReservationPreferenceMapping] 
		WHERE	ReservationId = @Id		
				AND [CreatedBy] = @UserId

	--Delete Reservation Package Mapping
	UPDATE [dbo].[ReservationPackageMapping] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete Reservation Remarks
	UPDATE [dbo].[ReservationRemarks]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete Reservation Charges
	UPDATE [dbo].[ReservationCharges]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete Reservation AddOns Mapping
	UPDATE [dbo].[ReservationAddOnsMapping]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete Reservation Room Mapping
	UPDATE [dbo].[ReservationRoomMapping]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete CheckIn CheckOut Detail
	UPDATE [dbo].[CheckInCheckOutDetail]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete Reservation Log
	UPDATE [dbo].[ReservationLog]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ReservationId = @Id
			AND [CreatedBy] = @UserId

	--Delete Reservation
	UPDATE [dbo].[Reservation] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationAddOnsMapping
	Comment   Changes in SP DeleteReservationAddOnsMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationAddOnsMapping]    Script Date: 2/23/2018 1:39:28 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationAddOnsMapping]	
	@Id			UNIQUEIDENTIFIER	,
	@UpdatedBy	INT					,
	@UserId		INT					
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationAddOnsMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
				AND [CreatedBy] = @UserId
	

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationAddOnsMappingByReservation
	Comment   Changes in SP DeleteReservationAddOnsMappingByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationAddOnsMappingByReservation]    Script Date: 2/23/2018 1:41:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationAddOnsMappingByReservation]	
	@ReservationId	UNIQUEIDENTIFIER	,
	@UpdatedBy		INT					,
	@UserId			INT					
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationAddOnsMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND ReservationId = @ReservationId
				AND [CreatedBy] = @UserId
	

	SELECT @ReservationId AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationAndRoomMappingByRoom
	Comment   Changes in SP DeleteReservationAndRoomMappingByRoom
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationAndRoomMappingByRoom]    Script Date: 2/23/2018 1:43:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationAndRoomMappingByRoom]
	@RoomId			UNIQUEIDENTIFIER	,
	@ReservationId	UNIQUEIDENTIFIER	,
	@UpdatedBy		INT					,
	@UserId			INT					
AS
BEGIN
	SET NOCOUNT ON;

	--Remove ReservationRoomMapping
	UPDATE RRM 
		SET	RRM.IsDeleted = 1,
			RRM.UpdatedOn = GETDATE(),
			RRM.UpdatedBy = @UpdatedBy
		FROM ReservationRoomMapping RRM
			INNER JOIN Reservation RE ON RRM.ReservationId = RE.Id
				AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RRM.IsDeleted,0) = 0 
				AND RRM.RoomId = @RoomId
				AND RRM.ReservationId <> @ReservationId
				AND ISNULL(RE.IsCheckIn,0) = 0
				AND RRM.[CreatedBy] = @UserId
				AND RE.[CreatedBy] = @UserId


					
	--Remove ReservationLog
	 UPDATE RL
		SET RL.IsDeleted = 1,
			RL.UpdatedOn = GETDATE(),
			RL.UpdatedBy = @UpdatedBy
		FROM ReservationLog RL
			INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
			AND ISNULL(RE.IsDeleted,0) = 0
		WHERE	ISNULL(RL.IsDeleted,0) = 0 
			AND RL.RoomId = @RoomId
			AND RL.ReservationId <> @ReservationId
			AND RL.[CreatedBy] = @UserId
			AND RE.[CreatedBy] = @UserId
	

	SELECT @RoomId AS Id
    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationByUserId
	Comment   Changes in SP DeleteReservationByUserId
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[DeleteReservationByUserId]    Script Date: 2/23/2018 1:45:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationByUserId]
	@UserId		INT		,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER 
	
	-- Get reservations by users
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  Id
			FROM	[dbo].[Reservation]
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [CreatedBy] = @UserId
			ORDER BY CreatedOn ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation INTO @ReservationId
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF @ReservationId IS NOT NULL
			BEGIN
				--Delete reservation.
				EXEC [dbo].[DeleteReservation] 
						@Id			=	@ReservationId	,
						@UpdatedBy	=	@UpdatedBy		,
						@UserId		=	@UserId
			END
				
			FETCH NEXT FROM cur_reservation INTO @ReservationId
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation

	SELECT @UserId AS Id
    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationCancellationReason
	Comment   Changes in SP DeleteReservationCancellationReason
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationCancellationReason]    Script Date: 2/23/2018 1:46:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationCancellationReason]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCancellationReasons] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			AND [CreatedBy] = @UserId

	SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationCharges
	Comment   Changes in SP DeleteReservationCharges
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationCharges]    Script Date: 2/23/2018 1:49:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationCharges]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT			

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationChargesByReservation
	Comment   Changes in SP DeleteReservationChargesByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationChargesByReservation]    Script Date: 2/23/2018 1:51:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationChargesByReservation]
	@ReservationId	UNIQUEIDENTIFIER	,	
	@UpdatedBy		INT					,
	@UserId			INT	

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND ReservationId	=	@ReservationId
				AND [CreatedBy]		=	@UserId

	SELECT @ReservationId AS ReservationId
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationLog
	Comment   Changes in SP DeleteReservationLog
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationLog]    Script Date: 2/23/2018 1:53:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationLog]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT				

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteReservationLogByReservation
	Comment   Changes in SP DeleteReservationLogByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationLogByReservation]    Script Date: 2/23/2018 1:54:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationLogByReservation]
	@ReservationId	UNIQUEIDENTIFIER	,	
	@UpdatedBy		INT					,
	@UserId			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId
				AND [CreatedBy] = @UserId

	SELECT @ReservationId AS ReservationId
    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationPackageMapping
	Comment   Changes in SP DeleteReservationPackageMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPackageMapping]    Script Date: 2/23/2018 1:58:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationPackageMapping]	
	@Id			UNIQUEIDENTIFIER				,
	@UpdatedBy	INT					=	NULL	,
	@UserId		INT					
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationPackageMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
				AND [CreatedBy] = @UserId	

	SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationPackageMappingByReservation
	Comment   Changes in SP DeleteReservationPackageMappingByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPackageMappingByReservation]    Script Date: 2/23/2018 1:59:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationPackageMappingByReservation]	
	@ReservationId	UNIQUEIDENTIFIER	,
	@UpdatedBy		INT					,
	@UserId			INT		
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationPackageMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND ReservationId = @ReservationId
				AND [CreatedBy] = @UserId	

	SELECT @ReservationId AS Id    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationPreferenceMapping
	Comment   Changes in SP DeleteReservationPreferenceMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPreferenceMapping]    Script Date: 2/23/2018 2:37:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationPreferenceMapping]	
	@Id		UNIQUEIDENTIFIER = NULL	,
	@UserId INT
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[ReservationPreferenceMapping] 
		WHERE	Id = @Id
				AND [CreatedBy] = @UserId
	

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteReservationPreferenceMappingByReservation
	Comment   Changes in SP DeleteReservationPreferenceMappingByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationPreferenceMappingByReservation]    Script Date: 2/23/2018 2:38:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationPreferenceMappingByReservation]	
	@ReservationId		UNIQUEIDENTIFIER = NULL	,
	@UserId				INT
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[ReservationPreferenceMapping] 
		WHERE	ReservationId		=	@ReservationId
				AND [CreatedBy]		=	@UserId
	

	SELECT @ReservationId AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationRemark
	Comment   Changes in SP DeleteReservationRemark
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationRemark]    Script Date: 2/23/2018 2:38:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationRemark]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationRemarks] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id			= @Id
			AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationRoomMapping
	Comment   Changes in SP DeleteReservationRoomMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationRoomMapping]    Script Date: 2/23/2018 2:41:04 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationRoomMapping]	
	@Id				UNIQUEIDENTIFIER	,
	@UpdatedBy		INT					,
	@UserId			INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationRoomMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
				AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationRoomMappingByReservation
	Comment   Changes in SP DeleteReservationRoomMappingByReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationRoomMappingByReservation]    Script Date: 2/23/2018 2:41:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationRoomMappingByReservation]	
	@ReservationId	UNIQUEIDENTIFIER	,
	@UpdatedBy		INT					,
	@UserId			INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationRoomMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND ReservationId = @ReservationId
				AND [CreatedBy] = @UserId	

	SELECT @ReservationId AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetAvailableRoomInfoByDate
	Comment   Changes in SP GetAvailableRoomInfoByDate
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetAvailableRoomInfoByDate]    Script Date: 2/23/2018 2:47:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetAvailableRoomInfoByDate] 
		@Date = '2018-02-16'

*/

ALTER PROCEDURE [dbo].[GetAvailableRoomInfoByDate]
	@Date		NVARCHAR(255)	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

   SELECT DISTINCT RT.Id AS RoomTypeId, RT.RoomTypeCode, 
		COUNT(R.Id) AS TotalRoom,
		( 
			COUNT(R.Id) - 
			(
				SELECT DISTINCT COUNT(RL.Id)
				FROM ReservationLog RL 
						INNER JOIN Reservation R ON R.Id = RL.ReservationId
							AND ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1
						INNER JOIN Room RM ON RM.Id = RL.RoomId AND ISNULL(RM.IsDeleted,0) = 0			
				WHERE	ISNULL(RL.IsDeleted,0) = 0 
						AND ISNULL(RL.IsActive,0) = 1 
						AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
						AND RM.RoomTypeId = RT.Id
						AND ( CAST(@Date AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						AND RL.CreatedBy = @UserId
						AND R.CreatedBy = @UserId
			 )
		) AS AvailableRoom

		FROM Room R 
			INNER JOIN RoomType RT ON R.RoomTypeId = RT.Id 
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0 				
		GROUP BY RT.Id, RT.RoomTypeCode

END




/*******************************************************************************************************************
	SP Name : GetCalendarNotesOfCurrentMonth
	Comment   Changes in SP GetCalendarNotesOfCurrentMonth
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCalendarNotesOfCurrentMonth]    Script Date: 2/23/2018 2:49:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetCalendarNotesOfCurrentMonth]
	@Month 		INT	=	NULL	,
	@Year		INT	=	NULL 	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CalendarNotes]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND DATEPART(YEAR,[Date]) 	= @Year 
				AND DATEPART(MONTH,[Date]) 	= @Month
				AND [CreatedBy] = @UserId
		ORDER BY [Date]
END

/*******************************************************************************************************************
	SP Name : GetCheckInDetails
	Comment   Changes in SP GetCheckInDetails
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCheckInDetails]    Script Date: 2/23/2018 2:50:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetCheckInDetails]
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId		UNIQUEIDENTIFIER	=	NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CheckInCheckOutDetail]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId
				AND ProfileId = @ProfileId
				AND [CreatedBy] = @UserId
		ORDER BY CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : GetNotesById
	Comment   Changes in SP GetNotesById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetNotesById]    Script Date: 2/23/2018 2:53:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetNotesById]
	@Id			UNIQUEIDENTIFIER = NULL	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CalendarNotes]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		ORDER BY [Date]
END

/*******************************************************************************************************************
	SP Name : GetProfilePreferenceMapping
	Comment   Changes in SP GetProfilePreferenceMapping
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetProfilePreferenceMapping]    Script Date: 2/23/2018 2:55:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetProfilePreferenceMapping] 
		@ProfileTypeId = NULL,
		@ProfileId = NULL,
		@PreferenceId = NULL,
		@UserId	=	1
*/
ALTER PROCEDURE [dbo].[GetProfilePreferenceMapping]	
	@ProfileTypeId	UNIQUEIDENTIFIER = NULL	,
	@ProfileId		UNIQUEIDENTIFIER = NULL	,
	@PreferenceId	UNIQUEIDENTIFIER = NULL	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

	DECLARE @SQL NVARCHAR(MAX)
	SET @SQL = '';

	SELECT *,P.Code AS PreferenceCode,P.[Description] AS PreferenceDescription
		 FROM [dbo].[ProfilePreferenceMapping] PPM
			INNER JOIN [dbo].[Preferences] P ON P.Id = PPM.PreferenceId
		WHERE	(@ProfileTypeId IS NULL OR PPM.ProfileTypeId = @ProfileTypeId)
				AND (@ProfileId IS NULL OR PPM.ProfileId = @ProfileId)
				AND (@PreferenceId IS NULL OR PPM.PreferenceId = @PreferenceId)
				AND PPM.[CreatedBy] = @UserId
		ORDER BY PPM.CreatedOn

END


/*******************************************************************************************************************
	SP Name : GetReservationAddOnsMapping
	Comment   Changes in SP GetReservationAddOnsMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationAddOnsMapping]    Script Date: 2/23/2018 2:57:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationAddOnsMapping] 		
		@ReservationId		= NULL	,
		@AddOnsId			= NULL	,
		@UserId				=	1
*/
ALTER PROCEDURE [dbo].[GetReservationAddOnsMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL	,
	@AddOnsId		UNIQUEIDENTIFIER = NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT	RAM.*,
			ADO.[Name] AS [AddOnsName], ADO.[Description] AS AddOnsDescription, ADO.[Price] AS AddOnsPrice

	 FROM [dbo].[ReservationAddOnsMapping] RAM
			INNER JOIN [dbo].[AddOns] ADO ON ADO.Id = RAM.AddOnsId 
				AND ISNULL(ADO.IsDeleted,0) = 0				
		WHERE	ISNULL(RAM.IsDeleted,0) = 0
				AND (@ReservationId IS NULL OR RAM.ReservationId = @ReservationId)
				AND (@AddOnsId IS NULL OR RAM.AddOnsId = @AddOnsId)
				AND RAM.[CreatedBy] = @UserId
		ORDER BY RAM.CreatedOn

END

/*******************************************************************************************************************
	SP Name : GetReservationById
	Comment   Changes in SP GetReservationById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationById]    Script Date: 2/23/2018 2:58:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationById]
	@Id			UNIQUEIDENTIFIER = NULL	,
	@UserId		INT 
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		
END


/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment   Changes in SP GetReservationCharges
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 2/23/2018 2:59:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationCharges]
		@ReservationId			=	'3836abff-095a-43f8-98ea-b5c5db75bcc9'	,
		@AdditionalChargeId		=	NULL									,
		@UserId					=	1
*/

ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@UserId					INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeSource = 'AC' -- Additional  Charge
				AND RC.[CreatedBy] = @UserId

	UNION

	
    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeSource = 'PKM' -- Package
				AND RC.[CreatedBy] = @UserId

	UNION

	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 3 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
				AND RC.AdditionalChargeSource <> 'PKM' -- Package
				AND RC.[CreatedBy] = @UserId
	UNION
	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		(CASE WHEN CHARINDEX('Cash',RC.Description) > 0 THEN RC.Code ELSE CONCAT('XXXXXXXXXXXX',RIGHT(RE.CreditCardNo, 4)) END )AS Code,
		RC.Description,4 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
				INNER JOIN Reservation RE ON RC.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0
					AND RE.[CreatedBy] = @UserId
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
				AND RC.[CreatedBy] = @UserId


	ORDER BY SortOrder
END


/*******************************************************************************************************************
	SP Name : GetReservationChargesByAdditionalChargeSource
	Comment   Changes in SP GetReservationChargesByAdditionalChargeSource
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesByAdditionalChargeSource]    Script Date: 2/23/2018 3:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationChargesByAdditionalChargeSource]
		@ReservationId				=	'3836abff-095a-43f8-98ea-b5c5db75bcc9'	,
		@AdditionalChargeId			=	NULL									,
		@AdditionalChargeSource		=	'PKM'									,
		@UserId						=	1
*/

ALTER PROCEDURE [dbo].[GetReservationChargesByAdditionalChargeSource]	
	@ReservationId				UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeSource		NVARCHAR(500)		=	NULL	,
	@UserId						INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND RC.[CreatedBy] = @UserId
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND (ISNULL(@AdditionalChargeSource,'') = '' OR RC.AdditionalChargeSource = @AdditionalChargeSource)
	
END

/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment   Changes in SP GetReservationChargesById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 2/23/2018 3:03:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationChargesById]
	@Id			UNIQUEIDENTIFIER	=	NULL	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
		FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (RC.Id = @Id)		
				AND RC.[CreatedBy] = @UserId					
		ORDER BY RC.CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : GetReservationDetailsForRoomPlan
	Comment   Changes in SP GetReservationDetailsForRoomPlan
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationDetailsForRoomPlan]    Script Date: 2/23/2018 3:03:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetReservationDetailsForRoomPlan]
			@RoomId				=	'014D170C-97F1-4876-BB45-E1F7FC690217'	,			
			@StartDate			=	'2018/01/01'							,
			@EndDate			=	'2018/01/07'							,
			@UserId				=	1
*/
ALTER PROCEDURE [dbo].[GetReservationDetailsForRoomPlan]
	@RoomId				UNIQUEIDENTIFIER	=	NULL	,	
	@StartDate			NVARCHAR(15)		=	NULL	,
	@EndDate			NVARCHAR(15)		=	NULL	,
	@UserId				INT
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT DISTINCT
				RL.ReservationId, 
				RE.ProfileId, 
				ISNULL(RE.FirstName,'') AS FirstName,
				ISNULL(RE.LastName,'') AS LastName,
				ISNULL(RE.NoOfNight,0) AS NoOfNight,
				RL.RoomId, 
				RL.RoomStatusId, 
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				CONVERT(varchar(12),RL.CheckInDate,103) AS CheckInDateString,
				RL.CheckInDate,
				CONVERT(varchar(12),RL.CheckOutDate,103) AS CheckOutDateString,
				RL.CheckOutDate
			FROM ReservationLog RL 
				INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0 AND RE.[CreatedBy] = @UserId
				INNER JOIN Room R ON RL.RoomId = R.Id
					AND ISNULL(R.IsDeleted,0) = 0  AND ISNULL(R.IsActive,0) = 1
				INNER JOIN IndividualProfile IPR ON IPR.Id = RE.ProfileId
					AND ISNULL(IPR.IsDeleted,0) = 0 AND ISNULL(IPR.IsActive,0) = 1
					AND IPR.[CreatedBy] = @UserId
				LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
					AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 


			WHERE ISNULL(RL.IsDeleted,0) = 0 AND ISNULL(RL.IsActive,0) = 1 
				AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
				AND RL.[CreatedBy] = @UserId
				AND RL.RoomId = @RoomId
				AND (
						(CAST(RL.CheckInDate  AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
						OR (CAST(RL.CheckOutDate AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
					) 

			ORDER BY RL.CheckInDate, RL.CheckOutDate ASC

END


/*******************************************************************************************************************
	SP Name : GetReservationLogById
	Comment   Changes in SP GetReservationLogById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationLogById]    Script Date: 2/23/2018 3:07:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationLogById]
	@Id		UNIQUEIDENTIFIER	=	NULL	,
	@UserId	INT			
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationLog]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		ORDER BY CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : GetReservationLogByRoom
	Comment   Changes in SP GetReservationLogByRoom
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationLogByRoom]    Script Date: 2/23/2018 3:08:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationLogByRoom]
	@RoomId			UNIQUEIDENTIFIER				,
	@RoomStatusId	UNIQUEIDENTIFIER	=	NULL	,
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate	DATETIME			=	NULL	,
	@DepartureDate	DATETIME			=	NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RL.* FROM [dbo].[ReservationLog] RL 
			INNER JOIN Reservation R ON R.Id = RL.ReservationId
				AND ISNULL(R.IsDeleted,0) = 0 
				AND R.[CreatedBy] = @UserId
		WHERE	ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1 
				AND RL.[CreatedBy] = @UserId
				AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
				AND 
				(
					(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
						OR 
					(ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
				)
				AND RoomId = @RoomId
				AND RL.RoomStatusId = @RoomStatusId
				AND (@ReservationId IS NULL OR RL.ReservationId != @ReservationId)

END

/*******************************************************************************************************************
	SP Name : GetReservationLogDetails
	Comment   Changes in SP GetReservationLogDetails
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetReservationLogDetails]    Script Date: 2/23/2018 3:10:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationLogDetails]
	@ReservationId	UNIQUEIDENTIFIER 	= 	NULL	,
	@RoomId			UNIQUEIDENTIFIER 	= 	NULL	,
	@Id 			UNIQUEIDENTIFIER 	= 	NULL	,
	@UserId			INT
	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationLog]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
				AND (@ReservationId IS NULL OR ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RoomId = @RoomId)
				AND (@Id IS NULL OR Id = @Id)
		ORDER BY CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : GetReservationPackageMapping
	Comment   Changes in SP GetReservationPackageMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationPackageMapping]    Script Date: 2/23/2018 3:10:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationPackageMapping] 		
		@ReservationId	=	NULL	,	
		@PackageId		=	NULL	,
		@UserId			=	1
*/
ALTER PROCEDURE [dbo].[GetReservationPackageMapping]		
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@PackageId		UNIQUEIDENTIFIER	=	NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT	RPM.*,PK.[Name] AS PackageName, PK.[Description] AS PackageDescription, PK.[Price] AS PackagePrice, 
			PK.CalculationRatioId AS PackageCalculationRatioId, 
			ISNULL(PCR.[Name],'') AS PackageCalculationRatio
	 FROM [dbo].[ReservationPackageMapping] RPM
			INNER JOIN [dbo].[Package] PK ON PK.Id = RPM.PackageId 
				AND ISNULL(PK.IsDeleted,0) = 0			
			LEFT JOIN [dbo].[PackageCalculationRatio] PCR ON PCR.Id = PK.CalculationRatioId
				AND ISNULL(PCR.IsDeleted,0) = 0			
		WHERE	ISNULL(RPM.IsDeleted,0) = 0
				AND RPM.[CreatedBy] = @UserId
				AND (@ReservationId IS NULL OR RPM.ReservationId = @ReservationId)
				AND (@PackageId IS NULL OR RPM.PackageId = @PackageId)
		ORDER BY RPM.CreatedOn

END

/*******************************************************************************************************************
	SP Name : GetReservationPreferenceMapping
	Comment   Changes in SP GetReservationPreferenceMapping
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetReservationPreferenceMapping]    Script Date: 2/23/2018 3:11:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationPreferenceMapping] 		
		@ReservationId	=	NULL	,
		@PreferenceId	=	NULL	,
		@UserId			=	1
*/
ALTER PROCEDURE [dbo].[GetReservationPreferenceMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL	,
	@PreferenceId	UNIQUEIDENTIFIER = NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;


	SELECT *,P.Code AS PreferenceCode,P.[Description] AS PreferenceDescription
	 FROM [dbo].[ReservationPreferenceMapping] RPM
			INNER JOIN [dbo].[Preferences] P ON P.Id = RPM.PreferenceId
				AND ISNULL(P.IsDeleted,0) = 0
		WHERE	(@ReservationId IS NULL OR RPM.ReservationId = @ReservationId)
				AND (@PreferenceId IS NULL OR RPM.PreferenceId = @PreferenceId)
				AND RPM.[CreatedBy] = @UserId
		ORDER BY RPM.CreatedOn

END


/*******************************************************************************************************************
	SP Name : GetReservationRemarkById
	Comment   Changes in SP GetReservationRemarkById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationRemarkById]    Script Date: 2/23/2018 3:13:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationRemarkById]
	@Id			UNIQUEIDENTIFIER = NULL	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationRemarks]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		ORDER BY CreatedOn DESC
END

/*******************************************************************************************************************
	SP Name : GetReservationRemarks
	Comment   Changes in SP GetReservationRemarks
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationRemarks]    Script Date: 2/23/2018 3:14:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC GetReservationRemarks
		@ReservationId	=	NULL	,
		@Id				=	NULL	,
		@UserId			=	1
	
*/

ALTER PROCEDURE [dbo].[GetReservationRemarks]
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@Id				UNIQUEIDENTIFIER	=	NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RM.Id,RM.ReservationId,ISNULL(RM.Remarks,'') AS Remarks, RM.CreatedOn,
		  UD.[Name] AS UserName, RM.CreatedBy,
		  (CASE	WHEN (ISNULL(RM.UpdatedBy,0) <> 0 AND RM.UpdatedOn IS NOT NULL)
				THEN
					CONCAT(
							CONVERT(VARCHAR(10),RM.UpdatedOn,103), 
							' ', 
							'at', 
							' ', 
							CONVERT(VARCHAR, RM.UpdatedOn, 108),
							' ',
							'updated by ',
							UD.[Name]
						)
				WHEN (ISNULL(RM.CreatedBy,0) <> 0 AND RM.CreatedOn IS NOT NULL)
				THEN
					CONCAT(
							CONVERT(VARCHAR(10),RM.CreatedOn,103), 
							' ', 
							'at', 
							' ', 
							CONVERT(VARCHAR, RM.CreatedOn, 108),
							' ',
							'added by ',
							UD.[Name]
						)
				ELSE ''
			END) AS TrackLog
 
		FROM [dbo].[ReservationRemarks] RM
			LEFT JOIN UserDetail UD ON UD.UserId = RM.CreatedBy
				AND ISNULL(UD.IsDeleted,0) = 0
		WHERE	ISNULL(RM.IsDeleted,0) = 0 
				AND RM.[CreatedBy] = @UserId
				AND (@Id IS NULL OR RM.Id = @Id)
				AND (@ReservationId IS NULL OR RM.ReservationId = @ReservationId)
		ORDER BY RM.CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : GetReservationRoomMapping
	Comment   Changes in SP GetReservationRoomMapping
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationRoomMapping]    Script Date: 2/23/2018 3:15:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationRoomMapping] 		
		@ReservationId	=	NULL	,
		@RoomId			=	NULL	,
		@UserId			=	1
*/
ALTER PROCEDURE [dbo].[GetReservationRoomMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL	,
	@RoomId			UNIQUEIDENTIFIER = NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT *,R.RoomNo AS RoomNo,R.[Description] AS RoomDescription,R.StatusId
			,ISNULL(RS.[Name],'') AS RoomStatusName,ISNULL(RS.[Code],'') AS RoomStatusCode
			,ISNULL(RS.[ColorCode],'') AS RoomStatusColorCode
	 FROM [dbo].[ReservationRoomMapping] RRM
			INNER JOIN [dbo].[Room] R ON R.Id = RRM.RoomId 
				AND ISNULL(R.IsDeleted,0) = 0
			LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = R.StatusId
				AND ISNULL(RS.IsDeleted,0) = 0
		WHERE	ISNULL(RRM.IsDeleted,0) = 0
				AND RRM.[CreatedBy] = @UserId
				AND (@ReservationId IS NULL OR RRM.ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RRM.RoomId = @RoomId)
		ORDER BY RRM.CreatedOn

END


/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment   Changes in SP GetRoomDetailsForRoomPlan
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 2/23/2018 3:17:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@FloorId			=	NULL ,
			@RoomNo				=	'105' ,
			@StartDate			=	'2018/02/08',
			@EndDate			=	'2018/02/14'
			@UserId				=	1
*/
ALTER PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@FloorId			UNIQUEIDENTIFIER	=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@StartDate			NVARCHAR(15)		=	NULL	,
	@EndDate			NVARCHAR(15)		=	NULL	,
	@UserId				INT
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
											AND R.[CreatedBy] = @UserId
										INNER JOIN IndividualProfile PR ON PR.Id = R.ProfileId
											AND ISNULL(PR.IsDeleted,0) = 0
											AND PR.[CreatedBy] = @UserId
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND RL.[CreatedBy] = @UserId
										AND ISNULL(RL.IsActive,0) = 1 
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND (
												( CAST(RL.CheckInDate  AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
												OR 
												( CAST(RL.CheckOutDate AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
										)
								) AS RL 
						ON RL.RoomId = R.Id
					LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 

			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (@FloorId IS NULL OR R.FloorId = @FloorId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END



/*******************************************************************************************************************
	SP Name : GetRoomTypeDetailsForRateSheet
	Comment   Changes in SP GetRoomTypeDetailsForRateSheet
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeDetailsForRateSheet]    Script Date: 2/23/2018 3:19:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeDetailsForRateSheet] '', '2018/01/30', 1
*/

ALTER PROCEDURE [dbo].[GetRoomTypeDetailsForRateSheet]
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,
	@ArrivalDate	NVARCHAR(25)	=	NULL	,
	@UserId			INT
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT	RT.Id,
			ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
			ISNULL(RT.[Description],'') AS [Description],
			ISNULL(RT.RoomCapacity,'') AS [RoomCapacity],
			(
				(
					SELECT COUNT(*) As TotalRooms
					FROM Room 
					WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
						AND RoomTypeId = RT.Id
				)
				 - 
				(
					SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
							AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
							AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
							AND ISNULL(RE.IsDeleted,0) = 0  AND RE.[CreatedBy]  = @UserId
							AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = RT.Id
								AND RL.[CreatedBy]  = @UserId
				)
			)  AS AvailableRooms
		FROM RoomType RT
		WHERE	ISNULL(RT.IsDeleted,0) = 0 
				AND ISNULL(RT.IsActive,0) = 1
				AND (ISNULL(@RoomTypeCode,'') = '' OR RT.RoomTypeCode = @RoomTypeCode)
		ORDER BY RT.RoomTypeCode 
END


/*******************************************************************************************************************
	SP Name : GetRoomTypeStatusInfo
	Comment   Changes in SP GetRoomTypeStatusInfo
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeStatusInfo]    Script Date: 2/23/2018 3:20:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeStatusInfo] 
		@Date		=	'2018-02-20'								,
		@RoomTypeId	=	'C26FAE42-4F8D-4A52-B4F5-DF80FE7AF96F'	,
		@UserId		=	1

*/

ALTER PROCEDURE [dbo].[GetRoomTypeStatusInfo]
	@Date			NVARCHAR(255)		,
	@RoomTypeId		UNIQUEIDENTIFIER	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

   SELECT DISTINCT RT.Id AS RoomTypeId, RT.RoomTypeCode, RT.[Description] AS RoomTypeDescription,
		COUNT(R.Id) AS TotalRoom,
		( 
			COUNT(R.Id) - 
			(
				SELECT DISTINCT COUNT(RL.Id)
				FROM ReservationLog RL 
						INNER JOIN Reservation R ON R.Id = RL.ReservationId
							AND ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1
							AND R.[CreatedBy] = @UserId
						INNER JOIN Room RM ON RM.Id = RL.RoomId AND ISNULL(RM.IsDeleted,0) = 0			
				WHERE	ISNULL(RL.IsDeleted,0) = 0 
						AND RL.[CreatedBy] = @UserId
						AND ISNULL(RL.IsActive,0) = 1 
						AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
						AND RM.RoomTypeId = RT.Id
						AND ( CAST(@Date AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate AS DATE))
			 )
		) AS AvailableRoom

		FROM Room R 
			INNER JOIN RoomType RT ON R.RoomTypeId = RT.Id 
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0  
				AND R.RoomTypeId = @RoomTypeId		
		GROUP BY RT.Id, RT.RoomTypeCode, RT.[Description] 
END




/*******************************************************************************************************************
	SP Name : GetTempBulkReservation
	Comment   Changes in SP GetTempBulkReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetTempBulkReservation]    Script Date: 2/23/2018 3:22:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetTempBulkReservation]
	@UserId INT	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation] TBR
			INNER JOIN [dbo].[IndividualProfile] PR ON TBR.ProfileId = PR.Id
				AND ISNULL(PR.IsDeleted,0) = 0 
				AND PR.[CreatedBy] = @UserId
		WHERE ISNULL(TBR.IsActive,0)  = 1 AND ISNULL(TBR.IsDeleted,0) = 0 
			  AND TBR.[CreatedBy] = @UserId
		ORDER BY TBR.CreatedOn
END



/*******************************************************************************************************************
	SP Name : GetTotalRoomAvailableByCalendar
	Comment   Changes in SP GetTotalRoomAvailableByCalendar
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetTotalRoomAvailableByCalendar]    Script Date: 2/23/2018 3:29:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetTotalRoomAvailableByCalendar] 
		@Month	=	2		,
		@Year	=	2018	,
		@UserId	=	1
*/


ALTER PROCEDURE [dbo].[GetTotalRoomAvailableByCalendar]
	@Month		INT		,
	@Year		INT		,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

	DECLARE @TotalRooms AS INT

	SET @TotalRooms = (SELECT COUNT(*) AS TotalRooms FROM Room WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1)

	SELECT *,
		(
			ISNULL(@TotalRooms,0) - 
			(SELECT DISTINCT COUNT(RL.Id)
				FROM ReservationLog RL 
					INNER JOIN Reservation R ON R.Id = RL.ReservationId
						AND ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1
						AND R.[CreatedBy] = @UserId
				WHERE	ISNULL(RL.IsDeleted,0) = 0 						
						AND ISNULL(RL.IsActive,0) = 1 
						AND RL.[CreatedBy] = @UserId
						AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
						AND ( CAST(tbl.[date] AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate AS DATE))
			)
		) As AvailableRooms
	FROM [dbo].[GenerateCalendar](@Month,@Year) tbl	
END


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment   Changes in SP SearchAdvanceRoom
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 2/23/2018 3:33:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	NULL		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	''		,
			@IsClean		=	'1'	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	,
			@UserId			=	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL	,
	@UserId				INT					
AS
BEGIN
	
	SET NOCOUNT ON;
	
	--- POPULATE ROOM STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]			UNIQUEIDENTIFIER	NOT NULL	,
		[StatusCode]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsClean,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CLEAN'
	END

	IF ISNULL(@IsDirty,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DIRTY'
	END

	IF ISNULL(@IsInspected,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'INSPECTED'
	END

	--- POPULATE ROOM STATUS TEMP TABLE : END

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(MAX)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
		,	[ReservationId]			UNIQUEIDENTIFIER	NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[RoomId]				, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			,
			[ReservationId]		
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,				
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
						AND RFM.RoomId = R.Id						
						FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures,
				RL.ReservationId AS ReservationId
		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId, RL.ReservationId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
											AND R.[CreatedBy] = @UserId
										INNER JOIN IndividualProfile PR ON PR.Id = R.ProfileId
											AND ISNULL(PR.IsDeleted,0) = 0
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND RL.[CreatedBy] = @UserId
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 					
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND 
					(
						 (SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
						 RS.Id IN (SELECT Id FROM #tempStatus)
					)					
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[RoomId],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures],
			temp.[ReservationId]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.[RoomId]
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceRoomType
	Comment   Changes in SP SearchAdvanceRoomType
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoomType]    Script Date: 2/23/2018 3:35:19 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoomType]
			@RateTypeId		=	'3518A524-6388-4632-80AF-118D2AFBD122'	,
			@ArrivalDate	=	NULL	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomTypeCode	=	'KNGN'	,
			@Description	=	''		,
			@AvailableRooms	=	0		,
			@RoomCapacity	=	NULL	,
			@IsWeekEndPrice =	1		,
			@UserId			=	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoomType]
	@RateTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomTypeCode		NVARCHAR(25)		=	NULL,
	@Description		NVARCHAR(1000)		=	NULL,
	@AvailableRooms		INT					=	NULL,
	@RoomCapacity		INT					=	NULL,
	@IsWeekEndPrice		BIT					=	NULL,
	@UserId				INT
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT * FROM 
	(
		SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  ROT.RoomTypeCode ASC

				) AS RowNum,
				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,				
				ISNULL(ROT.[RoomCapacity],0) AS RoomCapacity,				
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				(
					(
						SELECT COUNT(*) As TotalRooms
						FROM Room 
						WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
							AND RoomTypeId = ROT.Id
					)
					 - 
					(
						SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
							AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
							--AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
							AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsActive,0) = 1
							AND ISNULL(RE.IsCheckIn,0) = 1 AND ISNULL(RE.IsCheckOut,0) = 0
							AND RE.[CreatedBy] = @UserId
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = ROT.Id
							AND RL.[CreatedBy] = @UserId
							AND (
									(ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
									OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS DATE) AND CAST(RL.CheckOutDate  AS DATE))
								)
					)
				)  AS AvailableRooms,

				RAT.Id AS RateTypeId,
				ISNULL(RAT.RateTypeCode,'') AS RateTypeCode,
				ISNULL(RAT.[Description],'') AS RateTypeDescription,

				RTRTM.[Id] AS [RoomTypeRateTypeMappingId],
				ISNULL(RTRTM.[Amount],0) AS Amount,
				ISNULL(RTRTM.[Description],'') AS	[RoomTypeRateTypeMappingDescription]			
				
			FROM RoomType ROT 
					LEFT JOIN RoomTypeRateTypeMapping RTRTM ON ROT.Id = RTRTM.RoomTypeId 
						AND ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
						AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
					LEFT JOIN RateType RAT ON RAT.Id = RTRTM.RateTypeId
						AND ISNULL(RAT.IsDeleted,0) = 0 AND ISNULL(RAT.IsActive,0) = 1
			WHERE	ISNULL(ROT.IsDeleted,0) = 0 AND ISNULL(ROT.IsActive,0) = 1						  
					AND (@RateTypeId IS NULL OR RAT.Id = @RateTypeId)
					AND (ISNULL(@RoomTypeCode,'') = '' OR ROT.RoomTypeCode LIKE '%' + @RoomTypeCode + '%')
					AND (ISNULL(@Description,'') = '' OR ROT.[Description] LIKE '%' + @Description + '%')					
					AND (ISNULL(@RoomCapacity,0) = 0 OR ROT.[RoomCapacity] = @RoomCapacity)
					
		) AS A	
		WHERE ISNULL(@AvailableRooms,0) = 0 OR A.AvailableRooms = @AvailableRooms
END


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment   Changes in SP SearchArrivals
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 2/23/2018 3:36:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=	1, 
		@RoomNumber						=	'',
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0		
								AND ISNULL(R.IsCheckOut,0) = 0							
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0	
					AND ISNULL(R.IsCheckOut,0) = 0	
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 
					--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy = @CreatedBy
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchCheckedOutReservationByUserId
	Comment   Changes in SP SearchCheckedOutReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchCheckedOutReservationByUserId]    Script Date: 2/23/2018 3:39:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCheckedOutReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,		
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchCheckedOutReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]			
			,	[Email]		
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]	
			,ISNULL(P.[Email],'') AS [Email]							
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id			
						AND RRM.[CreatedBy] = @UserId			
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment   Changes in SP SearchGuest
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 2/23/2018 3:42:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND R.[CreatedBy] = @CreatedBy
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]		
			,[Email]		
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]		
				,ISNULL(P.Email,'') AS [Email]										
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[GuestBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND R.[CreatedBy] = @CreatedBy
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @CreatedBy
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]			
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : SearchIndividualProfile
	Comment   Changes in SP SearchIndividualProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchIndividualProfile]    Script Date: 2/23/2018 3:43:59 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchIndividualProfile] 
		@FirstName			=	''	, 
		@LastName			=	''	,
		@TelephoneNo		=	''	,
		@Email				=	''	,
		@PageNum			=	1	,
		@PageSize			=	10	,
		@SortColumn			=	''	,
		@SortDirection		=	''	,
		@CreatedBy			=	2	,
		@IsAdminUser		=	1	
*/

ALTER PROCEDURE [dbo].[SearchIndividualProfile]		
	@FirstName		NVARCHAR(255)	=	NULL,
	@LastName		NVARCHAR(255)	=	NULL,
	@TelephoneNo	NVARCHAR(255)	=	NULL,
	@Email			NVARCHAR(255)	=	NULL,		
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL,
	@CreatedBy		INT				=	NULL,
	@IsAdminUser	BIT				=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempIndividualProfile
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,	[Title]			NVARCHAR(50)		NULL
		,   [FirstName]		NVARCHAR(255)		NULL
		,   [LastName]		NVARCHAR(255)		NULL
		,   [TelephoneNo]	NVARCHAR(50)		NULL
		,   [Email]			NVARCHAR(500)		NULL		
		,   [Address]		NVARCHAR(255)		NULL
		,   [City]			NVARCHAR(100)		NULL		
		,   [ZipCode]		NVARCHAR(50)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[IndividualProfile] P
							LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
							LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
							LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
							LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
						WHERE	ISNULL(P.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
								AND (ISNULL(@TelephoneNo,'') = '' OR P.[TelephoneNo] LIKE '%'+ @TelephoneNo +'%')  
								AND (ISNULL(@Email,'') = '' OR P.[Email] LIKE '%'+ @Email +'%')  
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0))
						)


		INSERT INTO #tempIndividualProfile 
		(
			[RowNum], 
			[Id], 
			[Title], 
			[FirstName], 
			[LastName], 
			[TelephoneNo], 
			[Email],   
			[Address],
			[City],
			[ZipCode],
			[CreatedOn], 
			[IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN P.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN P.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Title' and @SortDirection = 'asc'
							THEN T.[Title] END ASC,
						CASE WHEN @SortColumn = 'Title' and @SortDirection = 'desc'
							THEN T.[Title] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN P.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN P.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN P.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN P.[LastName] END DESC,

						CASE WHEN @SortColumn = 'TelephoneNo' and @SortDirection = 'asc'
							THEN P.[TelephoneNo] END ASC,
						CASE WHEN @SortColumn = 'TelephoneNo' and @SortDirection = 'desc'
							THEN P.[TelephoneNo] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN P.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN P.[Email] END DESC,

						CASE WHEN @SortColumn = 'City' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'City' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'ZipCode' and @SortDirection = 'asc'
							THEN P.[ZipCode] END ASC,
						CASE WHEN @SortColumn = 'ZipCode' and @SortDirection = 'desc'
							THEN P.[ZipCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN P.[LastName] END ASC

				) AS RowNum,
				P.[Id], 
				ISNULL(T.[Title],'') AS Title,
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@TelephoneNo,'') = '' OR P.[TelephoneNo] LIKE '%'+ @TelephoneNo +'%')  
						AND (ISNULL(@Email,'') = '' OR P.[Email] LIKE '%'+ @Email +'%')  
						--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						AND (ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0))

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id], 
			temp.[Title], 
			temp.[FirstName], 
			temp.[LastName], 
			temp.[TelephoneNo], 
			temp.[Email],   
			temp.[Address],
			temp.[City],
			temp.[ZipCode],
			temp.[CreatedOn], 
			temp.[IsActive], 
			@TotalCount AS TotalCount
	FROM	
		#tempIndividualProfile AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment   Changes in SP SearchReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 2/23/2018 3:46:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	NULL,
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	1,
		@IsShowCheckedOutReservation	=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	INT				NOT NULL	,
		[Name]	NVARCHAR(500)	NULL		,
	);

	IF ISNULL(@IsShowCancelledReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (1, 'CancelledReservation')
	END

	IF ISNULL(@IsShowCheckedInReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (2, 'CheckedIn')
	END

	IF ISNULL(@IsShowCheckedOutReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (3, 'CheckedOut')
	END

	--- POPULATE STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								
								--AND (
								--		@IsShowCancelledReservation IS NULL OR R.[IsReservationCancel] = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR R.[IsCheckIn] = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR R.[IsCheckOut] = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
								
													
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]	
			,[Email]			
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]	
				,ISNULL(P.Email,'') AS [Email]						
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]
			,temp.[Email]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchReservationByUserId
	Comment   Changes in SP SearchReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationByUserId]    Script Date: 2/23/2018 3:47:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,				
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL	
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0	
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND  ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]					
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]								
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0	
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy = @UserId						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END





/*******************************************************************************************************************
	SP Name : GetIndividualProfileById
	Comment : Changes in SP GetIndividualProfileById
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetIndividualProfileById]    Script Date: 2/23/2018 4:20:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetIndividualProfileById]
	@Id			UNIQUEIDENTIFIER	=	NULL	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		
END



/*******************************************************************************************************************
	SP Name : GetIndividualProfiles
	Comment   Changes in SP GetIndividualProfiles
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetIndividualProfiles]    Script Date: 2/23/2018 4:30:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetIndividualProfiles]
	@LastName	NVARCHAR(1000)	=	NULL	,
	@FirstName	NVARCHAR(1000)	=	NULL	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
				AND (ISNULL(@LastName,'') = '' OR [LastName] LIKE '%' + @LastName + '%')
				AND (ISNULL(@FirstName,'') = '' OR [FirstName] LIKE '%' + @FirstName + '%')
				AND [CreatedBy] = @UserId
				
		
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceProfile
	Comment   Changes in SP SearchAdvanceProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceProfile]    Script Date: 2/23/2018 4:37:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceProfile]
			@LastName			=	''		,
			@FirstName			=	''		,
			@ViewBy				=	NULL	,
			@City				=	''		,
			@PostalCode			=	''		,
			@MemberTypeId		=	NULL	,
			@MemberNo			=	''		,
			@Keyword			=	''		,
			@Communication		=	''		,
			@ClientID			=	''		,
			@CorpNo				=	''		,
			@IATANo				=	''		,
			@IsNegRates			=	0		,
			@IsShowInActive		=	0		,
			@CreatedBy			=	2		,
			@IsAdminUser		=	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceProfile]
	@LastName			NVARCHAR(255)		=	NULL,
	@FirstName			NVARCHAR(255)		=	NULL,
	@ViewBy				UNIQUEIDENTIFIER	=	NULL,
	@City				NVARCHAR(255)		=	NULL,
	@PostalCode			NVARCHAR(255)		=	NULL,
	@MemberTypeId		UNIQUEIDENTIFIER	=	NULL,
	@MemberNo			NVARCHAR(255)		=	NULL,
	@Keyword			NVARCHAR(255)		=	NULL,
	@Communication		NVARCHAR(255)		=	NULL,
	@ClientID			NVARCHAR(255)		=	NULL,
	@IATANo				NVARCHAR(255)		=	NULL,
	@CorpNo				NVARCHAR(255)		=	NULL,
	@IsNegRates			BIT					=	NULL,
	@IsShowInActive		BIT					=	NULL,
	@CreatedBy			INT					=	NULL,
	@IsAdminUser		BIT					=	NULL

AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  P.[CreatedOn] DESC

				) AS RowNum,
				P.[Id], 
				T.Id AS TitleId,
				ISNULL(T.[Title],'') AS Title, 
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				ISNULL(P.[CountryId],0) AS CountryId,
				ISNULL(P.[StateId],0) AS StateId,
				ISNULL(P.[CityId],0) AS CityId,
				ISNULL(P.[Remarks],'') AS [Remarks],
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@City,'') = '' OR C.[Name] LIKE '%'+ @City +'%')  
						AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')  
						AND (@IsShowInActive IS NULL OR 
								P.IsActive IN  (CASE WHEN @IsShowInActive = 0 THEN 1 ELSE P.IsActive END))
						--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						AND (ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0))


END



/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment   Changes in SP SearchAdvanceRoom
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 2/23/2018 4:38:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	NULL		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	''		,
			@IsClean		=	'1'	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	,
			@UserId			=	1
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL	,
	@UserId				INT					
AS
BEGIN
	
	SET NOCOUNT ON;
	
	--- POPULATE ROOM STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]			UNIQUEIDENTIFIER	NOT NULL	,
		[StatusCode]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsClean,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CLEAN'
	END

	IF ISNULL(@IsDirty,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DIRTY'
	END

	IF ISNULL(@IsInspected,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [StatusCode])
		SELECT Id,	[Code] FROM [dbo].[RoomStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'INSPECTED'
	END

	--- POPULATE ROOM STATUS TEMP TABLE : END

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(MAX)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
		,	[ReservationId]			UNIQUEIDENTIFIER	NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[RoomId]				, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			,
			[ReservationId]		
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,				
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
						AND RFM.RoomId = R.Id						
						FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures,
				RL.ReservationId AS ReservationId
		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId, RL.ReservationId
									FROM ReservationLog RL 
										INNER JOIN Reservation R ON R.Id = RL.ReservationId
											AND ISNULL(R.IsDeleted,0) = 0
											AND R.[CreatedBy] = @UserId
										INNER JOIN IndividualProfile PR ON PR.Id = R.ProfileId
											AND ISNULL(PR.IsDeleted,0) = 0
											AND PR.[CreatedBy] = @UserId
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND RL.[CreatedBy] = @UserId
										AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 0
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 					
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND 
					(
						 (SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
						 RS.Id IN (SELECT Id FROM #tempStatus)
					)					
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[RoomId],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures],
			temp.[ReservationId]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.[RoomId]
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 
END




/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment   Changes in SP SearchArrivals
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 2/23/2018 4:41:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=	1, 
		@RoomNumber						=	'',
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND P.CreatedBy = @CreatedBy
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0		
								AND ISNULL(R.IsCheckOut,0) = 0							
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
						AND P.CreatedBy = @CreatedBy
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0	
					AND ISNULL(R.IsCheckOut,0) = 0	
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 
					--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy = @CreatedBy
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchCheckedOutReservationByUserId
	Comment   Changes in SP SearchCheckedOutReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchCheckedOutReservationByUserId]    Script Date: 2/23/2018 4:42:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCheckedOutReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,		
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchCheckedOutReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = @UserId
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
								AND ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]			
			,	[Email]		
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]	
			,ISNULL(P.[Email],'') AS [Email]							
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
							AND ISNULL(P.CreatedBy,0) = @UserId
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND ISNULL(R.IsCheckIn,0) = 1 AND ISNULL(R.IsCheckOut,0) = 1 
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id			
						AND RRM.[CreatedBy] = @UserId			
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment   Changes in SP SearchGuest
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 2/23/2018 4:44:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND P.[CreatedBy] = @CreatedBy
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND R.[CreatedBy] = @CreatedBy
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]		
			,[Email]		
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]		
				,ISNULL(P.Email,'') AS [Email]										
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[GuestBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
						AND P.[CreatedBy] = @CreatedBy
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND R.[CreatedBy] = @CreatedBy
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @CreatedBy
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]			
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchIndividualProfile
	Comment   Changes in SP SearchIndividualProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchIndividualProfile]    Script Date: 2/23/2018 4:45:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchIndividualProfile] 
		@FirstName			=	''	, 
		@LastName			=	''	,
		@TelephoneNo		=	''	,
		@Email				=	''	,
		@PageNum			=	1	,
		@PageSize			=	10	,
		@SortColumn			=	''	,
		@SortDirection		=	''	,
		@CreatedBy			=	2	,
		@IsAdminUser		=	1	
*/

ALTER PROCEDURE [dbo].[SearchIndividualProfile]		
	@FirstName		NVARCHAR(255)	=	NULL,
	@LastName		NVARCHAR(255)	=	NULL,
	@TelephoneNo	NVARCHAR(255)	=	NULL,
	@Email			NVARCHAR(255)	=	NULL,		
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL,
	@CreatedBy		INT				=	NULL,
	@IsAdminUser	BIT				=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempIndividualProfile
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,	[Title]			NVARCHAR(50)		NULL
		,   [FirstName]		NVARCHAR(255)		NULL
		,   [LastName]		NVARCHAR(255)		NULL
		,   [TelephoneNo]	NVARCHAR(50)		NULL
		,   [Email]			NVARCHAR(500)		NULL		
		,   [Address]		NVARCHAR(255)		NULL
		,   [City]			NVARCHAR(100)		NULL		
		,   [ZipCode]		NVARCHAR(50)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[IndividualProfile] P
							LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
							LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
							LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
							LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
						WHERE	ISNULL(P.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
								AND (ISNULL(@TelephoneNo,'') = '' OR P.[TelephoneNo] LIKE '%'+ @TelephoneNo +'%')  
								AND (ISNULL(@Email,'') = '' OR P.[Email] LIKE '%'+ @Email +'%')  
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0))
						)


		INSERT INTO #tempIndividualProfile 
		(
			[RowNum], 
			[Id], 
			[Title], 
			[FirstName], 
			[LastName], 
			[TelephoneNo], 
			[Email],   
			[Address],
			[City],
			[ZipCode],
			[CreatedOn], 
			[IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN P.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN P.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Title' and @SortDirection = 'asc'
							THEN T.[Title] END ASC,
						CASE WHEN @SortColumn = 'Title' and @SortDirection = 'desc'
							THEN T.[Title] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN P.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN P.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN P.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN P.[LastName] END DESC,

						CASE WHEN @SortColumn = 'TelephoneNo' and @SortDirection = 'asc'
							THEN P.[TelephoneNo] END ASC,
						CASE WHEN @SortColumn = 'TelephoneNo' and @SortDirection = 'desc'
							THEN P.[TelephoneNo] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN P.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN P.[Email] END DESC,

						CASE WHEN @SortColumn = 'City' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'City' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'ZipCode' and @SortDirection = 'asc'
							THEN P.[ZipCode] END ASC,
						CASE WHEN @SortColumn = 'ZipCode' and @SortDirection = 'desc'
							THEN P.[ZipCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN P.[LastName] END ASC

				) AS RowNum,
				P.[Id], 
				ISNULL(T.[Title],'') AS Title,
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@TelephoneNo,'') = '' OR P.[TelephoneNo] LIKE '%'+ @TelephoneNo +'%')  
						AND (ISNULL(@Email,'') = '' OR P.[Email] LIKE '%'+ @Email +'%')  
						--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)))
						AND (ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0))

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id], 
			temp.[Title], 
			temp.[FirstName], 
			temp.[LastName], 
			temp.[TelephoneNo], 
			temp.[Email],   
			temp.[Address],
			temp.[City],
			temp.[ZipCode],
			temp.[CreatedOn], 
			temp.[IsActive], 
			@TotalCount AS TotalCount
	FROM	
		#tempIndividualProfile AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment   Changes in SP SearchReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 2/23/2018 4:46:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	NULL,
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	1,
		@IsShowCheckedOutReservation	=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	INT				NOT NULL	,
		[Name]	NVARCHAR(500)	NULL		,
	);

	IF ISNULL(@IsShowCancelledReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (1, 'CancelledReservation')
	END

	IF ISNULL(@IsShowCheckedInReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (2, 'CheckedIn')
	END

	IF ISNULL(@IsShowCheckedOutReservation,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name])
		VALUES (3, 'CheckedOut')
	END

	--- POPULATE STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								
								--AND (
								--		@IsShowCancelledReservation IS NULL OR R.[IsReservationCancel] = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR R.[IsCheckIn] = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR R.[IsCheckOut] = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
								
													
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]	
			,[Email]			
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]	
				,ISNULL(P.Email,'') AS [Email]						
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								--Cancelled Reservation
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 1) = 0)									
									OR
									ISNULL(R.[IsReservationCancel],0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 1)
								)
								--CheckedIn
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 2) = 0)									
									OR
									ISNULL(R.IsCheckIn,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 2)
								)
								--CheckedOut
								AND 
								(
									((SELECT COUNT(*) FROM #tempStatus WHERE Id = 3) = 0)									
									OR
									ISNULL(R.IsCheckOut,0) = (SELECT COUNT(*) FROM #tempStatus WHERE Id = 3)
								)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,R.[IsReservationCancel])
								--	)
								--AND (
								--		@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,R.[IsCheckIn])
								--	)	
								--AND (
								--		@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,R.[IsCheckOut]) 
								--	)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]
			,temp.[Email]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : SearchReservationByUserId
	Comment   Changes in SP SearchReservationByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationByUserId]    Script Date: 2/23/2018 4:47:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationByUserId] 
		@UserId							=	1		,
		@LastName						=	NULL	,
		@FirstName						=	NULL	,	
		@StartDate						=	NULL	,				
		@EndDate						=	NULL	,				
		@PageNum						=	1		,
		@PageSize						=	10		,
		@SortColumn						=	NULL	,
		@SortDirection					=	NULL
		
*/

ALTER PROCEDURE [dbo].[SearchReservationByUserId]		
	@UserId				INT								,
	@LastName			NVARCHAR(255)		=	NULL	,
	@FirstName			NVARCHAR(255)		=	NULL	,	
	@StartDate			DATETIME			=	NULL	,	
	@EndDate			DATETIME			=	NULL	,
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL	
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL	
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RateTypeId]				UNIQUEIDENTIFIER	NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Rate]						NUMERIC(18,2)		NULL
		,	[GuestBalance]				NUMERIC(18,2)		NULL		
		,	[CreatedOn]					DATETIME			NULL	
		,	[ConfirmationNumber]		NVARCHAR(255)		NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = @UserId
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0	
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.CreatedBy,0) = @UserId
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
						)


		INSERT INTO #tempReservation 
		(
				[RowNum]
			,	[Id]		
			,	[ProfileId]	
			,	[FirstName]		
			,	[LastName]					
			,	[ArrivalDate]
			,	[NoOfNight]					
			,	[DepartureDate]
			,	[NoOfAdult]		
			,	[NoOfChildren]
			,	[NoOfRoom]		
			,	[RoomTypeId]
			,	[RoomTypeCode]
			,	[RoomNumbers]
			,	[RateTypeId]
			,	[RateTypeCode]
			,	[Rate]			
			,	[GuestBalance]
			,	[CreatedOn]
			,	[ConfirmationNumber]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
						THEN R.[FirstName] END ASC,
					CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
						THEN R.[FirstName] END DESC,

					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
						THEN R.[LastName] END ASC,
					CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
						THEN R.[LastName] END DESC,

					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'asc'
						THEN R.[ConfirmationNumber] END ASC,
					CASE WHEN @SortColumn = 'ConfirmationNumber' and @SortDirection = 'desc'
						THEN R.[ConfirmationNumber] END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
						THEN ROT.[RoomTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
						THEN ROT.[RoomTypeCode] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'asc'
						THEN R.[Rate] END ASC,
					CASE WHEN @SortColumn = 'Rate' and @SortDirection = 'desc'
						THEN R.[Rate] END DESC,

					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'asc'
						THEN R.[GuestBalance] END ASC,
					CASE WHEN @SortColumn = 'GuestBalance' and @SortDirection = 'desc'
						THEN R.[GuestBalance] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN R.[CreatedOn] END DESC

			) AS RowNum
			,R.[Id]			
			,R.[ProfileId]
			,ISNULL(R.[FirstName],'') AS [FirstName]
			,ISNULL(R.[LastName],'') AS [LastName]								
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,ROT.[Id] AS [RoomTypeId]
			,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
			,'' AS [RoomNumbers]
			,RAT.[Id] AS [RateTypeId]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
			,ISNULL(R.[Rate],0) AS [Rate]
			,ISNULL(R.[GuestBalance],0) AS [GuestBalance]
			,R.[CreatedOn]
			,ISNULL(R.[ConfirmationNumber],'') AS [ConfirmationNumber]
		FROM [dbo].[Reservation] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
							AND ISNULL(P.CreatedBy,0) = @UserId
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0	
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND  ISNULL(R.CreatedBy,0) = @UserId
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
							AND ((@StartDate IS NULL AND @EndDate IS NULL) 
									OR 
									CAST(R.CreatedOn AS DATE) BETWEEN CAST(@StartDate AS DATE) AND  CAST(@EndDate AS DATE))
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy = @UserId						
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeId]
			,temp.[RoomTypeCode]
			,temp.[RoomNumbers]
			,temp.[RateTypeId]
			,temp.[RateTypeCode]
			,temp.[Rate]			
			,temp.[GuestBalance]
			,temp.[CreatedOn]
			,temp.[ConfirmationNumber]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : DeleteReservationCancellationReason
	Comment   Changes in SP DeleteReservationCancellationReason
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationCancellationReason]    Script Date: 2/23/2018 4:57:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationCancellationReason]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCancellationReasons] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id			

	SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : GetIndividualProfileByUserId
	Comment   CreateSP GetIndividualProfileByUserId
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetIndividualProfileByUserId]    Script Date: 2/23/2018 5:37:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetIndividualProfileByUserId]	
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND [CreatedBy] = @UserId
		
END



/*******************************************************************************************************************
	SP Name : LoadDefaultIndividualProfile
	Comment   CreateSP LoadDefaultIndividualProfile
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[LoadDefaultIndividualProfile]    Script Date: 2/23/2018 5:36:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[LoadDefaultIndividualProfile]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Breen','Sophie','sophie.breen@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8329819','24 Glenside, Tramore, Co.  Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Roche','Frances','frances.roche@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8489812','78 Elm Park, East Wall, Dublin 2,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Doyle','Sean','sean.doyle@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 4329810','5 East Place, Blase Road, Tipperary,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Forde','Aisha','aisha.forde@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 2329814','79 Cliff Road, Clover Hill, Carlow,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Garcia','Mary','mary.garcia@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8329811','2 Hazelbourne, Little Island, Cork,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Janog','Jianne','jianne.janog@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5329720','321 The Glaze, Drogheda, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Lewkowicz','Mateusz','mateusz.lewkowicz@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 8329900','987 Le Faun Rd, Wicklow, Co. Dublin',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kalela','Alpha','alpha.kalela@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 2229819','111 The Willows, Clonmel, Co. Tipperary, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'McGee','Thomas','thomas.mcgee@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'083 2329825','989 Kennedy Park, Willow Road, Cork,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Moloney','Joanne','joanne.moloney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8329821','321 The Fairways, Galway,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mvete','Kuavita','kuavita.mvete@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 9582325','5 The Fairways Drive, Kilkenny,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Purcell','Lucy','lucy.purcell@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 7229815','12 The Roost, Dunmore East, Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Connolly','Peggy','peggy.connolly@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mrs'),'086 8749813','2 Blanket Road, Thurles, Co Tipperary,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Zhang','Yuli','yuli.zhang@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5832981','9 Hazelwood, Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Bolger','Kate','kate.bolger@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 3732911','89 The Loft, Wexford   Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Lynch','Thomas','thomas.lynch@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'085 4957252','45 Clarinwood, Tramore, Co . Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cummings','Stuart','stuart.cummings@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'089 9995713','32 The Moorings, Rebel Hill, Co Cork,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Delaney','Roisin','roisin.delaney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 8329444','85 The Pier, Salthill, Galway,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Egan','Elaine','elaine.egan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 5263813','68 Rocksprings, Tramore, Co.  Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Gorniak','Donata','donata.gorniak@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 4443262','2 The Pavillion, Edge Street, Carlow,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Jones','Dervla','dervla.jones@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329822','2 Elm Park, Tramore, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 


	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Layton','Sarah','sarah.layton@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8311819','5 Edgewater  Street, Kilkenny, Ireland. ',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mbeba','Sadi','sadi.mbeba@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 1234595','19 Grange Park, Lisduggan, Co Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Roche','Caitrona','caitrona.roche@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 8388222','85 Winter Road, Enniscothy, Co Wexford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Bolger','Kate','kate.bolger@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','32 The Vikings, Rosslare, Co. Wexford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Ennis','Tracey','tracey.ennis@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 9929555','56 Gable End, The Moorings, Co Waterford.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'McCartin','Siobhan','siobhan.mccartin@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 4852654','145 Le Fonta Rd, Clondalkin, Co. Dublin,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Ennis','Kelly','kelly.ennis@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 7896542','‘Ardhaven’ Cliff Road Tramore, Co. Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'OSuillivan','Christine','christine.osuillivan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 3366589','1 The Whistles, Blenheim Heights, Cavan, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Duffy','Leah','leah.duffy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 3294171','76 Carrigeenlea, Cliff Road, Tramore, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Wall','Roxanne','roxanne.wall@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','32 Rocksprings, Tramore, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Healy','Sile','sile.healy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 1112258','25 Maple Court, Roscrea,  Co. Tipperary ,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kudabaite','Manta','manta.kudabaite@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5522985','34 Heather Road, Limerick, Ireland.  ',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Vilmane','Dana','dana.vilmane@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 3325211','96 Ardhaven Road, Mallow, Co.Cork.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'ORiordan','Daniel','daniel.oriordan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 6589656','3 Westgate, The Curragh, Co. Kildare.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Clooney','George','george.clooney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'087 3214856','3 The Mews, Swifton Street,  Wicklow,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Nugent','Sarah','sarah.nugent@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','9 Step a Side, Bray, Co, Wicklow, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Launders','Alana','alana.launders@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 3339782','36 The Farm Park, Lismore, Co. Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Silzeviciute','Elge','elge.silzeviciute@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329311','32 Basket Road, Dungarvan, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cato','Claire','claire.cato@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 8325619','478 Kennedy Park, Tramore, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cuntapay','Ericka','ericka.cuntapay@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8329522','116 Pine Alley, Ferndale, Naas Co. Kildare,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Grochlolva','Martina','martina.grochlolva@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 9324112','478 Liffey Rd, Co. Kilkenny,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Hegarty','Alana','alana.hegarty@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 5632819','111 Future Road, Kilkenny, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Hosford','Hayley','hayley.hosford@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 2129888','98  Elm Park, Tramore, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kelly','Chantelle','chantelle.kelly@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 1325658','123 The View, Stateside Road, Dungarvan, Co. Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Martin','Jamie','jamie.martin@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 3344202','987 The Moorings, Dungarvan, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Murphy','Ashley','ashley.murphy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8555818','25 Grace Drive, Ballankill,  Waterford, Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mcconville','Sue','sue.mcconville@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 5344820','11 The Fairways, Dunmore East, Co. Waterford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Delaney','Martina','martina.delaney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 9685857','111 The Port, Liffey Street, Co Cork,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Canton','Shane','shane.canton@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 8829856','09 Harvey Drive, Wtaerford,  Ireland.',(SELECT TOP 1 Id FROM Country WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Ireland'),@UserId,GETDATE(),1) 
END



/*******************************************************************************************************************
	SP Name : LoadTempBulkReservation
	Comment   Create SP LoadTempBulkReservation
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservation]    Script Date: 2/23/2018 5:41:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[LoadTempBulkReservation]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	
	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50


	/************************ STEP 1 : Populate Temp Profile & Room Table ************************/

	-- Create temp profile table.
	CREATE TABLE #tmpProfile
	(
			[RowNum]			INT					NOT NULL
		,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
		,   [LastName]			NVARCHAR(500)		NULL	
		,	[FirstName]			NVARCHAR(500)		NULL	
		,	[TitleId]			UNIQUEIDENTIFIER	NULL	
		,	[CountryId]			INT					NULL
		,	[PhoneNo]			NVARCHAR(255)		NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NULL
		,	[RoomId]			UNIQUEIDENTIFIER	NULL
		,   [RoomNo]			NVARCHAR(255)		NULL
	)


	-- Create temp room table.
	CREATE TABLE #tmpRoom
	(
			[RowNum]			INT					NOT NULL		
		,	[RoomId]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NOT NULL	
		,   [RoomNo]			NVARCHAR(255)		NULL
	)

	-- Insert data in temp profile table.
	INSERT INTO #tmpProfile
		(
			 [RowNum]
			,[ProfileId]
			,[LastName]
			,[FirstName]	
			,[TitleId]	
			,[CountryId]
			,[PhoneNo]
		)
	SELECT TOP (@TopCount)
		ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
		PR.Id AS [ProfileId],
		PR.[LastName] AS [LastName],
		PR.[FirstName] AS [FirstName],
		PR.[TitleId],
		PR.[CountryId],
		PR.[TelephoneNo]
	FROM	[IndividualProfile] PR 
	WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
			AND PR.[CreatedBy] = @UserId 
	ORDER BY [LastName]

	-- Insert data in temp room table.
	INSERT INTO #tmpRoom
		(
			 [RowNum]
			,[RoomId]
			,[RoomTypeId]
			,[RoomNo]		
		)
	SELECT 
		ROW_NUMBER() OVER (ORDER BY A.RoomNo ASC) AS [RowNum],
		A.Id AS [RoomId],
		A.[RoomTypeId],
		A.[RoomNo]
	FROM 
	(
		SELECT DISTINCT TOP (@TopCount)
			 R.Id,
			 R.RoomTypeId,
			 R.RoomNo	 
		FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
			INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
				AND ISNULL(ROT.IsDeleted,0) = 0 
			INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
				AND ISNULL(R.IsDeleted,0) = 0 
			INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
				AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE ISNULL(RTRTM.IsDeleted,0) = 0	
		ORDER BY R.RoomNo ASC
	) AS A

	-- Update Room Details in temp profile table.
	UPDATE TP
		SET	TP.RoomId		=	TR.RoomId,
			TP.RoomTypeId	=	TR.RoomTypeId,
			TP.RoomNo		=	TR.RoomNo
	FROM #tmpProfile TP INNER JOIN #tmpRoom TR ON TP.RowNum = TR.RowNum

	/************************ STEP 2 : Populate Temp Bulk Reservation Table ************************/

	-- Delete all the date from TempBulkReservation by user id.
	DELETE FROM TempBulkReservation WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL

	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	DECLARE		@WeekDayName			NVARCHAR(50)		=	DATENAME(WEEKDAY,@ArrivalDate) 
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@IsWeekEndPrice			BIT					=	0
	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)

	DECLARE		@MarketId				UNIQUEIDENTIFIER 
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER 
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 




	-- GET TOP 1 Market.
	SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(IsActive,0) = 1
							ORDER BY [Name])

	-- GET TOP 1 Reservation Type.
	SET @ReservationTypeId = (SELECT TOP 1 Id FROM [ReservationType] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET TOP 1 Reservation Source.
	SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET Payment Method 'Cash'
	SET @PaymentMethodId = (SELECT TOP 1 Id FROM [PaymentMethod] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Cash'
									ORDER BY [Name])

	-- Check Week End.
	IF ISNULL(@WeekDayName,'') <> ''
	BEGIN
		IF (@WeekDayName = 'Friday' OR @WeekDayName = 'Saturday')
		BEGIN
			SET @IsWeekEndPrice = 1
		END
	END

	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_profile CURSOR STATIC FOR
		SELECT  RowNum, ProfileId, LastName, FirstName, TitleId, CountryId, PhoneNo, 
				RoomTypeId, RoomId, RoomNo 
			FROM #tmpProfile 
			ORDER BY RowNum ASC

	OPEN cur_profile
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			-- Get Top 1 Rate Type and Rate Details.
			SELECT	TOP 1 @RateTypeId = RTRTM.RateTypeId, @Rate = RTRTM.Amount
			FROM	[dbo].[RoomTypeRateTypeMapping] RTRTM
					INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
						AND ISNULL(ROT.IsDeleted,0) = 0 
					INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
						AND ISNULL(R.IsDeleted,0) = 0 
					INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
						AND ISNULL(RAT.IsDeleted,0) = 0 
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0	
					AND RTRTM.RoomTypeId = @RoomTypeId				


			-- Add data in TempBulkReservation Table.
			INSERT INTO TempBulkReservation
				(
					 [Id]
					,[TitleId]
					,[LastName]
					,[FirstName]
					,[ProfileId]
					,[CountryId]
					,[PhoneNo]
					,[ArrivalDate]
					,[NoOfNight]
					,[DepartureDate]
					,[NoOfAdult]	
					,[NoOfChildren]
					,[NoOfInfant]			
					,[NoOfRoom]
					,[RoomId]
					,[RoomNo]
					,[RoomTypeId]
					,[RateCodeId]
					,[Rate]
					,[CurrencyId]
					,[ETA]
					,[ReservationTypeId]
					,[MarketId]
					,[ReservationSourceId]
					,[PaymentMethodId]
					,[CreatedBy]
					,[CreatedOn]
					,[IsActive]
				)
				VALUES
				(
					 NEWID()
					,@TitleId
					,@LastName
					,@FirstName
					,@ProfileId
					,@CountryId
					,@PhoneNo
					,@ArrivalDate
					,@NoOfNight
					,@DepartureDate
					,@NoOfAdult
					,@NoOfChildren
					,@NoOfInfant
					,@NoOfRoom
					,@RoomId
					,@RoomNo
					,@RoomTypeId
					,@RateTypeId
					,@Rate
					,@CurrencyId
					,@ETA
					,@ReservationTypeId
					,@MarketId
					,@ReservationSourceId
					,@PaymentMethodId
					,@UserId
					,GETDATE()
					,1
				)

			FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		END
	END
	CLOSE cur_profile
	DEALLOCATE cur_profile



	--DROP Table #tmpProfile
	IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpProfile
	END


	--DROP Table #tmpRoom
	IF(OBJECT_ID('tempdb..#tmpRoom') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpRoom
	END

   
END

/*******************************************************************************************************************
	SP Name : GetTempBulkReservationById
	Comment   Changes in SP GetTempBulkReservationById
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetTempBulkReservationById]    Script Date: 2/23/2018 5:48:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetTempBulkReservationById]
	@Id			UNIQUEIDENTIFIER	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		
END



/*******************************************************************************************************************
	SP Name : DeleteAllProfile
	Comment   Changes in SP DeleteAllProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAllProfile]    Script Date: 2/23/2018 5:55:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllProfile]
***/

ALTER PROCEDURE [dbo].[DeleteAllProfile]		
	@UpdatedBy	INT	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

	-- ProfilePreferenceMapping	
	DELETE FROM [dbo].[ProfilePreferenceMapping]  WHERE [CreatedBy] = @UserId
		
	-- IndividualProfile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId


	-- Delete All reservation by user id.
	EXEC [DeleteAllReservation] 
			@UpdatedBy	=	@UpdatedBy,
			@UserId		=	@UserId
END



/*******************************************************************************************************************
	SP Name : DeleteAllProfile
	Comment   Changes in SP DeleteAllProfile
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[LoadDefaultIndividualProfile]    Script Date: 2/23/2018 6:27:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[LoadDefaultIndividualProfile]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Breen','Sophie','sophie.breen@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8329819','24 Glenside, Tramore, Co.  Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Roche','Frances','frances.roche@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8489812','78 Elm Park, East Wall, Dublin 2,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Doyle','Sean','sean.doyle@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 4329810','5 East Place, Blase Road, Tipperary,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Forde','Aisha','aisha.forde@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 2329814','79 Cliff Road, Clover Hill, Carlow,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Garcia','Mary','mary.garcia@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8329811','2 Hazelbourne, Little Island, Cork,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Janog','Jianne','jianne.janog@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5329720','321 The Glaze, Drogheda, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Lewkowicz','Mateusz','mateusz.lewkowicz@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 8329900','987 Le Faun Rd, Wicklow, Co. Dublin',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kalela','Alpha','alpha.kalela@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 2229819','111 The Willows, Clonmel, Co. Tipperary, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'McGee','Thomas','thomas.mcgee@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'083 2329825','989 Kennedy Park, Willow Road, Cork,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Moloney','Joanne','joanne.moloney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8329821','321 The Fairways, Galway,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mvete','Kuavita','kuavita.mvete@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 9582325','5 The Fairways Drive, Kilkenny,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Purcell','Lucy','lucy.purcell@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 7229815','12 The Roost, Dunmore East, Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Connolly','Peggy','peggy.connolly@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mrs'),'086 8749813','2 Blanket Road, Thurles, Co Tipperary,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Zhang','Yuli','yuli.zhang@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5832981','9 Hazelwood, Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Bolger','Kate','kate.bolger@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 3732911','89 The Loft, Wexford   Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Lynch','Thomas','thomas.lynch@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'085 4957252','45 Clarinwood, Tramore, Co . Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cummings','Stuart','stuart.cummings@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'089 9995713','32 The Moorings, Rebel Hill, Co Cork,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Delaney','Roisin','roisin.delaney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 8329444','85 The Pier, Salthill, Galway,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Egan','Elaine','elaine.egan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 5263813','68 Rocksprings, Tramore, Co.  Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Gorniak','Donata','donata.gorniak@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 4443262','2 The Pavillion, Edge Street, Carlow,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Jones','Dervla','dervla.jones@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329822','2 Elm Park, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 


	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Layton','Sarah','sarah.layton@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8311819','5 Edgewater  Street, Kilkenny, Ireland. ',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mbeba','Sadi','sadi.mbeba@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 1234595','19 Grange Park, Lisduggan, Co Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Roche','Caitrona','caitrona.roche@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 8388222','85 Winter Road, Enniscothy, Co Wexford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Bolger','Kate','kate.bolger@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','32 The Vikings, Rosslare, Co. Wexford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Ennis','Tracey','tracey.ennis@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 9929555','56 Gable End, The Moorings, Co Waterford.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'McCartin','Siobhan','siobhan.mccartin@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 4852654','145 Le Fonta Rd, Clondalkin, Co. Dublin,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Ennis','Kelly','kelly.ennis@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 7896542','‘Ardhaven’ Cliff Road Tramore, Co. Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'OSuillivan','Christine','christine.osuillivan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 3366589','1 The Whistles, Blenheim Heights, Cavan, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Duffy','Leah','leah.duffy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 3294171','76 Carrigeenlea, Cliff Road, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Wall','Roxanne','roxanne.wall@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','32 Rocksprings, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Healy','Sile','sile.healy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 1112258','25 Maple Court, Roscrea,  Co. Tipperary ,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kudabaite','Manta','manta.kudabaite@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5522985','34 Heather Road, Limerick, Ireland.  ',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Vilmane','Dana','dana.vilmane@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 3325211','96 Ardhaven Road, Mallow, Co.Cork.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'ORiordan','Daniel','daniel.oriordan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 6589656','3 Westgate, The Curragh, Co. Kildare.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Clooney','George','george.clooney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'087 3214856','3 The Mews, Swifton Street,  Wicklow,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Nugent','Sarah','sarah.nugent@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','9 Step a Side, Bray, Co, Wicklow, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Launders','Alana','alana.launders@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 3339782','36 The Farm Park, Lismore, Co. Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Silzeviciute','Elge','elge.silzeviciute@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329311','32 Basket Road, Dungarvan, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cato','Claire','claire.cato@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 8325619','478 Kennedy Park, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cuntapay','Ericka','ericka.cuntapay@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8329522','116 Pine Alley, Ferndale, Naas Co. Kildare,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Grochlolva','Martina','martina.grochlolva@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 9324112','478 Liffey Rd, Co. Kilkenny,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Hegarty','Alana','alana.hegarty@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 5632819','111 Future Road, Kilkenny, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Hosford','Hayley','hayley.hosford@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 2129888','98  Elm Park, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kelly','Chantelle','chantelle.kelly@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 1325658','123 The View, Stateside Road, Dungarvan, Co. Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Martin','Jamie','jamie.martin@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 3344202','987 The Moorings, Dungarvan, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Murphy','Ashley','ashley.murphy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8555818','25 Grace Drive, Ballankill,  Waterford, Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mcconville','Sue','sue.mcconville@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 5344820','11 The Fairways, Dunmore East, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Delaney','Martina','martina.delaney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 9685857','111 The Port, Liffey Street, Co Cork,  Ireland.',NULL,@UserId,GETDATE(),1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Canton','Shane','shane.canton@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 8829856','09 Harvey Drive, Wtaerford,  Ireland.',NULL,@UserId,GETDATE(),1) 


   
END


/******************************************************************************************************/

Date : 24-FEB-2018
Name : Nilesh

/******************************************************************************************************/

/*********************** Create new table TempBulkReservationMaster ***********/

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TempBulkReservationMaster](
	[Id] [uniqueidentifier] NOT NULL,
	[TitleId] [uniqueidentifier] NULL,
	[LastName] [nvarchar](255) NULL,
	[FirstName] [nvarchar](255) NULL,
	[ProfileId] [uniqueidentifier] NULL,
	[MemberTypeId] [uniqueidentifier] NULL,
	[CountryId] [int] NULL,
	[LanguageId] [uniqueidentifier] NULL,
	[VipId] [uniqueidentifier] NULL,
	[PhoneNo] [nvarchar](50) NULL,
	[MemberNo] [nvarchar](255) NULL,
	[MemberLvt] [nvarchar](255) NULL,
	[AgentId] [uniqueidentifier] NULL,
	[CompanyId] [uniqueidentifier] NULL,
	[GroupId] [uniqueidentifier] NULL,
	[SourceId] [uniqueidentifier] NULL,
	[ContactId] [uniqueidentifier] NULL,
	[ArrivalDate] [datetime] NOT NULL,
	[NoOfNight] [int] NULL,
	[DepartureDate] [datetime] NULL,
	[NoOfAdult] [int] NULL,
	[NoOfChildren] [int] NULL,
	[NoOfRoom] [int] NULL,
	[RoomTypeId] [uniqueidentifier] NULL,
	[RtcId] [uniqueidentifier] NULL,
	[ExtnId] [uniqueidentifier] NULL,
	[RateCodeId] [uniqueidentifier] NULL,
	[IsFixedRate] [bit] NULL,
	[Rate] [decimal](18, 2) NULL,
	[CurrencyId] [uniqueidentifier] NULL,
	[BlockCodeId] [uniqueidentifier] NULL,
	[ETA] [time](7) NULL,
	[ReservationTypeId] [uniqueidentifier] NULL,
	[MarketId] [uniqueidentifier] NULL,
	[ReservationSourceId] [uniqueidentifier] NULL,
	[OriginId] [uniqueidentifier] NULL,
	[PaymentMethodId] [uniqueidentifier] NULL,
	[CreditCardNo] [nvarchar](255) NULL,
	[CardExpiryDate] [nvarchar](50) NULL,
	[CVVNo] [nvarchar](255) NULL,
	[ApprovalCode] [nvarchar](255) NULL,
	[ApprovalAmount] [decimal](18, 2) NULL,
	[SuitWith] [nvarchar](255) NULL,
	[IsEmailConfirmation] [bit] NULL,
	[GuestBalance] [decimal](18, 2) NULL,
	[DiscountAmount] [decimal](18, 2) NULL,
	[DiscountPercentage] [decimal](18, 2) NULL,
	[DiscountApprovedBy] [uniqueidentifier] NULL,
	[TARecordLocator] [nvarchar](255) NULL,
	[SpecialsId] [uniqueidentifier] NULL,
	[ReservationComments] [nvarchar](max) NULL,
	[ItemInventoryId] [uniqueidentifier] NULL,
	[Remarks] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[InHouseComments] [nvarchar](max) NULL,
	[CashieringComments] [nvarchar](max) NULL,
	[HouseKeepingComments] [nvarchar](max) NULL,
	[ConfirmationNumber] [nvarchar](255) NULL,
	[CancellationReasonId] [uniqueidentifier] NULL,
	[CancellationReasonComment] [nvarchar](2000) NULL,
	[IsReservationCancel] [bit] NULL,
	[IsCheckIn] [bit] NULL,
	[IsCheckOut] [bit] NULL,
	[TotalPrice] [decimal](18, 2) NULL,
	[ReservationStatusId] [uniqueidentifier] NULL,
	[FolioNumber] [bigint] NULL,
	[NoOfInfant] [int] NULL,
	[DiscountReason] [nvarchar](max) NULL,
	[RoomNo] [nvarchar](500) NULL,
	[RoomId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TempBulkReservationMaster] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO



/************************************************************************************************************************ 
	SP Name : SearchBulkReservation
	Comment : Create new SP SearchBulkReservation
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchBulkReservation]    Script Date: 2/24/2018 2:13:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchBulkReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@RateTypeId						=	NULL,				
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1
		
*/

CREATE PROCEDURE [dbo].[SearchBulkReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@RateTypeId						UNIQUEIDENTIFIER	=	NULL,		
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT

	CREATE TABLE #tempBulkReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[TempBulkReservationMaster] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)							
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))																	
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
													
						)


		INSERT INTO #tempBulkReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]	
			,[Email]			
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]	
				,ISNULL(P.Email,'') AS [Email]						
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[TempBulkReservationMaster] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
							AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
							AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
							AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
							AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))																	
							AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]
			,temp.[Email]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempBulkReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/************************************************************************************************************************ 
	SP Name : GetTempBulkReservationMassterById
	Comment : Create new SP GetTempBulkReservationMassterById
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetTempBulkReservationMassterById]    Script Date: 2/24/2018 2:26:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTempBulkReservationMassterById]
	@Id			UNIQUEIDENTIFIER	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservationMaster]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		
END


/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservationMaster
	Comment : Create new SP LoadTempBulkReservationMaster
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservationMaster]    Script Date: 2/24/2018 4:05:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservationMaster] @UserId = 1
***/

CREATE PROCEDURE [dbo].[LoadTempBulkReservationMaster]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	
	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50


	/************************ STEP 1 : Populate Temp Profile & Room Table ************************/

	-- Create temp profile table.
	CREATE TABLE #tmpProfile
	(
			[RowNum]			INT					NOT NULL
		,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
		,   [LastName]			NVARCHAR(500)		NULL	
		,	[FirstName]			NVARCHAR(500)		NULL	
		,	[TitleId]			UNIQUEIDENTIFIER	NULL	
		,	[CountryId]			INT					NULL
		,	[PhoneNo]			NVARCHAR(255)		NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NULL
		,	[RoomId]			UNIQUEIDENTIFIER	NULL
		,   [RoomNo]			NVARCHAR(255)		NULL
	)


	-- Create temp room table.
	CREATE TABLE #tmpRoom
	(
			[RowNum]			INT					NOT NULL		
		,	[RoomId]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NOT NULL	
		,   [RoomNo]			NVARCHAR(255)		NULL
	)

	-- Insert data in temp profile table.
	INSERT INTO #tmpProfile
		(
			 [RowNum]
			,[ProfileId]
			,[LastName]
			,[FirstName]	
			,[TitleId]	
			,[CountryId]
			,[PhoneNo]
		)
	SELECT TOP (@TopCount)
		ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
		PR.Id AS [ProfileId],
		PR.[LastName] AS [LastName],
		PR.[FirstName] AS [FirstName],
		PR.[TitleId],
		PR.[CountryId],
		PR.[TelephoneNo]
	FROM	[IndividualProfile] PR 
	WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
			AND PR.[CreatedBy] = @UserId 
	ORDER BY [LastName]

	-- Insert data in temp room table.
	INSERT INTO #tmpRoom
		(
			 [RowNum]
			,[RoomId]
			,[RoomTypeId]
			,[RoomNo]		
		)
	SELECT 
		ROW_NUMBER() OVER (ORDER BY A.RoomNo ASC) AS [RowNum],
		A.Id AS [RoomId],
		A.[RoomTypeId],
		A.[RoomNo]
	FROM 
	(
		SELECT DISTINCT TOP (@TopCount)
			 R.Id,
			 R.RoomTypeId,
			 R.RoomNo	 
		FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
			INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
				AND ISNULL(ROT.IsDeleted,0) = 0 
			INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
				AND ISNULL(R.IsDeleted,0) = 0 
			INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
				AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE ISNULL(RTRTM.IsDeleted,0) = 0	
		ORDER BY R.RoomNo ASC
	) AS A

	-- Update Room Details in temp profile table.
	UPDATE TP
		SET	TP.RoomId		=	TR.RoomId,
			TP.RoomTypeId	=	TR.RoomTypeId,
			TP.RoomNo		=	TR.RoomNo
	FROM #tmpProfile TP INNER JOIN #tmpRoom TR ON TP.RowNum = TR.RowNum

	/************************ STEP 2 : Populate Temp Bulk Reservation Master Table ************************/

	-- Delete all the date from TempBulkReservationMaster by user id.
	DELETE FROM TempBulkReservationMaster WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL

	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	DECLARE		@WeekDayName			NVARCHAR(50)		=	DATENAME(WEEKDAY,@ArrivalDate) 
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@IsWeekEndPrice			BIT					=	0
	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)

	DECLARE		@MarketId				UNIQUEIDENTIFIER 
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER 
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 




	-- GET TOP 1 Market.
	SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(IsActive,0) = 1
							ORDER BY [Name])

	-- GET TOP 1 Reservation Type.
	SET @ReservationTypeId = (SELECT TOP 1 Id FROM [ReservationType] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET TOP 1 Reservation Source.
	SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET Payment Method 'Cash'
	SET @PaymentMethodId = (SELECT TOP 1 Id FROM [PaymentMethod] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Cash'
									ORDER BY [Name])

	-- Check Week End.
	IF ISNULL(@WeekDayName,'') <> ''
	BEGIN
		IF (@WeekDayName = 'Friday' OR @WeekDayName = 'Saturday')
		BEGIN
			SET @IsWeekEndPrice = 1
		END
	END

	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_profile CURSOR STATIC FOR
		SELECT  RowNum, ProfileId, LastName, FirstName, TitleId, CountryId, PhoneNo, 
				RoomTypeId, RoomId, RoomNo 
			FROM #tmpProfile 
			ORDER BY RowNum ASC

	OPEN cur_profile
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			-- Get Top 1 Rate Type and Rate Details.
			SELECT	TOP 1 @RateTypeId = RTRTM.RateTypeId, @Rate = RTRTM.Amount
			FROM	[dbo].[RoomTypeRateTypeMapping] RTRTM
					INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
						AND ISNULL(ROT.IsDeleted,0) = 0 
					INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
						AND ISNULL(R.IsDeleted,0) = 0 
					INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
						AND ISNULL(RAT.IsDeleted,0) = 0 
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0	
					AND RTRTM.RoomTypeId = @RoomTypeId				


			-- Add data in TempBulkReservationMaster Table.
			INSERT INTO TempBulkReservationMaster
				(
					 [Id]
					,[TitleId]
					,[LastName]
					,[FirstName]
					,[ProfileId]
					,[CountryId]
					,[PhoneNo]
					,[ArrivalDate]
					,[NoOfNight]
					,[DepartureDate]
					,[NoOfAdult]	
					,[NoOfChildren]
					,[NoOfInfant]			
					,[NoOfRoom]
					,[RoomId]
					,[RoomNo]
					,[RoomTypeId]
					,[RateCodeId]
					,[Rate]
					,[CurrencyId]
					,[ETA]
					,[ReservationTypeId]
					,[MarketId]
					,[ReservationSourceId]
					,[PaymentMethodId]
					,[CreatedBy]
					,[CreatedOn]
					,[IsActive]
				)
				VALUES
				(
					 NEWID()
					,@TitleId
					,@LastName
					,@FirstName
					,@ProfileId
					,@CountryId
					,@PhoneNo
					,@ArrivalDate
					,@NoOfNight
					,@DepartureDate
					,@NoOfAdult
					,@NoOfChildren
					,@NoOfInfant
					,@NoOfRoom
					,@RoomId
					,@RoomNo
					,@RoomTypeId
					,@RateTypeId
					,@Rate
					,@CurrencyId
					,@ETA
					,@ReservationTypeId
					,@MarketId
					,@ReservationSourceId
					,@PaymentMethodId
					,@UserId
					,GETDATE()
					,1
				)

			FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		END
	END
	CLOSE cur_profile
	DEALLOCATE cur_profile



	--DROP Table #tmpProfile
	IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpProfile
	END


	--DROP Table #tmpRoom
	IF(OBJECT_ID('tempdb..#tmpRoom') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpRoom
	END

   
END


/************************************************************************************************************************ 
	SP Name : UpdateTempBulkReservationMaster
	Comment : Create new SP UpdateTempBulkReservationMaster
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[UpdateTempBulkReservationMaster]    Script Date: 2/24/2018 4:09:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateTempBulkReservationMaster]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,	
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@RoomId					UNIQUEIDENTIFIER	=	NULL	,
	@RoomNo					NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL



	SET @ETATime = @ETA

	UPDATE [dbo].[TempBulkReservationMaster] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfInfant]			=	@NoOfInfant
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId		
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountApprovedBy]	=	@DiscountApprovedBy
		,[DiscountReason]		=	@DiscountReason
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice	
		,[RoomId]				=	@RoomId
		,[RoomNo]				=	@RoomNo
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END


/************************************************************************************************************************ 
	SP Name : SearchBulkReservation
	Comment : Changes in SP SearchBulkReservation
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchBulkReservation]    Script Date: 2/24/2018 4:28:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchBulkReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@RateTypeId						=	NULL,		
		@RoomTypeId						=	NULL,		
		@RoomNo							=	NULL,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1
		
*/

ALTER PROCEDURE [dbo].[SearchBulkReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@RateTypeId						UNIQUEIDENTIFIER	=	NULL,		
	@RoomTypeId						UNIQUEIDENTIFIER	=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT

	CREATE TABLE #tempBulkReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNo]					NVARCHAR(255)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL			
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[TempBulkReservationMaster] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)							
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)	
								AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))																	
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
													
						)


		INSERT INTO #tempBulkReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]	
			,[Email]			
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNo]
			,[RoomTypeCode]
			,[RateTypeCode]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]	
				,ISNULL(P.Email,'') AS [Email]						
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(R.[RoomNo],'') AS [RoomNo]
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]				
				,R.[CreatedOn]
			FROM [dbo].[TempBulkReservationMaster] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
							AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					WHERE	ISNULL(R.IsDeleted,0) = 0
							AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
							AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
							AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
							AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)	
							AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)
							AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
							AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))																	
							AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]
			,temp.[Email]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomNo]
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]			
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempBulkReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/************************************************************************************************************************ 
	SP Name : GetTempBulkReservationByDate
	Comment : Create new SP GetTempBulkReservationByDate
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetTempBulkReservationByDate]    Script Date: 2/24/2018 4:41:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTempBulkReservationByDate]
	@Date	DATETIME	,
	@UserId INT	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation] TBR
			INNER JOIN [dbo].[IndividualProfile] PR ON TBR.ProfileId = PR.Id
				AND ISNULL(PR.IsDeleted,0) = 0 
				AND PR.[CreatedBy] = @UserId
		WHERE ISNULL(TBR.IsActive,0)  = 1 AND ISNULL(TBR.IsDeleted,0) = 0 
			  AND TBR.[CreatedBy] = @UserId
			  AND CAST(TBR.CreatedOn  AS DATE) = CAST(@Date AS DATE)
		ORDER BY TBR.CreatedOn
END


/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservation
	Comment : Changes in SP LoadTempBulkReservation
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservation]    Script Date: 2/24/2018 4:43:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservation] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservation]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50

	SET @TopCount = (SELECT COUNT(*) FROM TempBulkReservationMaster WHERE ISNULL(IsDeleted,0) = 0)


	/*************** STEP 1 : Populate Temp Profile & Reservation Table *********/

	-- Create temp profile table.
	CREATE TABLE #tmpProfile
	(
			[RowNum]			INT					NOT NULL
		,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
		,   [LastName]			NVARCHAR(500)		NULL	
		,	[FirstName]			NVARCHAR(500)		NULL	
		,	[TitleId]			UNIQUEIDENTIFIER	NULL	
		,	[CountryId]			INT					NULL
		,	[PhoneNo]			NVARCHAR(255)		NULL		
	)

	-- Create temp reservation table.
	CREATE TABLE #tmpReservation
	(
			[RowNum]				INT					NOT NULL
		,	[TitleId]				UNIQUEIDENTIFIER	NULL
		,   [LastName]				NVARCHAR(500)		NULL	
		,	[FirstName]				NVARCHAR(500)		NULL	
		,	[ProfileId]				UNIQUEIDENTIFIER	NOT NULL
		,	[CountryId]				INT					NULL
		,	[PhoneNo]				NVARCHAR(500)		NULL	
		,	[ArrivalDate]			DATETIME			NULL
		,	[NoOfNight]				INT					NULL
		,	[DepartureDate]			DATETIME			NULL
		,	[NoOfAdult]				INT					NULL
		,	[NoOfChildren]			INT					NULL
		,	[NoOfInfant]			INT					NULL	
		,	[NoOfRoom]				INT					NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NULL
		,	[RoomNo]				NVARCHAR(500)		NULL	
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RateCodeId]			UNIQUEIDENTIFIER	NULL
		,	[Rate]					NUMERIC(18,2)		NULL
		,	[CurrencyId]			UNIQUEIDENTIFIER	NULL
		,	[RtcId]					UNIQUEIDENTIFIER	NULL
		,	[IsFixedRate]			BIT					NULL
		,	[ETA]					TIME(7)				NULL
		,	[ReservationTypeId]		UNIQUEIDENTIFIER	NULL
		,	[MarketId]				UNIQUEIDENTIFIER	NULL	
		,	[ReservationSourceId]	UNIQUEIDENTIFIER	NULL
		,	[PaymentMethodId]		UNIQUEIDENTIFIER	NULL
		,	[CreditCardNo]			NVARCHAR(255)		NULL
		,	[CardExpiryDate]		NVARCHAR(255)		NULL	
		,	[CVVNo]					NVARCHAR(255)		NULL
	)

	-- Insert data in temp profile table.
	INSERT INTO #tmpProfile
		(
			 [RowNum]
			,[ProfileId]
			,[LastName]
			,[FirstName]	
			,[TitleId]	
			,[CountryId]
			,[PhoneNo]
		)
	SELECT TOP (@TopCount)
		ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
		PR.Id AS [ProfileId],
		PR.[LastName] AS [LastName],
		PR.[FirstName] AS [FirstName],
		PR.[TitleId],
		PR.[CountryId],
		PR.[TelephoneNo]
	FROM	[IndividualProfile] PR 
	WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
			AND PR.[CreatedBy] = @UserId 
	ORDER BY [LastName]


	-- Insert data in temp reservation table.
	INSERT INTO #tmpReservation
		(
				[RowNum]				
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]			
		)
		SELECT TOP (@TopCount)
			ROW_NUMBER() OVER (ORDER BY CreatedOn DESC) AS [RowNum]
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]	
	FROM	[TempBulkReservationMaster]
	WHERE	ISNULL(IsDeleted,0) = 0 				
		

	-- Update Profile details in temp reservation table.
	UPDATE TR
		SET	TR.ProfileId	=	TP.ProfileId	,
			TR.LastName		=	TP.LastName		,
			TR.FirstName	=	TP.FirstName	,
			TR.TitleId		=	TP.TitleId		,
			TR.CountryId	=	TP.CountryId	,
			TR.PhoneNo		=	TP.PhoneNo	
	FROM #tmpProfile TP INNER JOIN #tmpReservation TR ON TP.RowNum = TR.RowNum

	/************** STEP 2 : Populate Temp Bulk Reservation Table **************/

	-- Delete all the data from TempBulkReservation by user id.
	DELETE FROM TempBulkReservation WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL	
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL

	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		=	NULL
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)
	DECLARE		@RtcId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@IsFixedRate			BIT					=	0
	
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL
	DECLARE		@MarketId				UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	NULL
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	NULL
	DECLARE		@CVVNo					NVARCHAR(255)		=	NULL


	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  
					[RowNum]				
				,	[TitleId]				
				,   [LastName]				
				,	[FirstName]				
				,	[ProfileId]				
				,	[CountryId]				
				,	[PhoneNo]				
				,	[ArrivalDate]			
				,	[NoOfNight]				
				,	[DepartureDate]			
				,	[NoOfAdult]				
				,	[NoOfChildren]			
				,	[NoOfInfant]			
				,	[NoOfRoom]				
				,	[RoomId]				
				,	[RoomNo]				
				,	[RoomTypeId]			
				,	[RateCodeId]			
				,	[Rate]					
				,	[CurrencyId]			
				,	[RtcId]					
				,	[IsFixedRate]			
				,	[ETA]					
				,	[ReservationTypeId]		
				,	[MarketId]				
				,	[ReservationSourceId]	
				,	[PaymentMethodId]		
				,	[CreditCardNo]			
				,	[CardExpiryDate]		
				,	[CVVNo]		
		FROM #tmpReservation 
		ORDER BY RowNum ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation 
			INTO	
					@RowNum				
				, 	@TitleId			
				, 	@LastName			
				, 	@FirstName			
				, 	@ProfileId			
				, 	@CountryId			
				, 	@PhoneNo			
				, 	@ArrivalDate		
				, 	@NoOfNight			
				, 	@DepartureDate		
				, 	@NoOfAdult			
				, 	@NoOfChildren		
				, 	@NoOfInfant			
				, 	@NoOfRoom			
				, 	@RoomId				
				, 	@RoomNo				
				, 	@RoomTypeId			
				, 	@RateTypeId			
				, 	@Rate				
				, 	@CurrencyId			
				, 	@RtcId				
				, 	@IsFixedRate		
				, 	@ETA				
				, 	@ReservationTypeId	
				, 	@MarketId			
				, 	@ReservationSourceId
				, 	@PaymentMethodId	
				, 	@CreditCardNo		
				, 	@CardExpiryDate		
				, 	@CVVNo				 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			-- Add data in TempBulkReservation Table.
			INSERT INTO TempBulkReservation
				(
						[Id]
					,	[TitleId]				
					,   [LastName]				
					,	[FirstName]				
					,	[ProfileId]				
					,	[CountryId]				
					,	[PhoneNo]				
					,	[ArrivalDate]			
					,	[NoOfNight]				
					,	[DepartureDate]			
					,	[NoOfAdult]				
					,	[NoOfChildren]			
					,	[NoOfInfant]			
					,	[NoOfRoom]				
					,	[RoomId]				
					,	[RoomNo]				
					,	[RoomTypeId]			
					,	[RateCodeId]			
					,	[Rate]					
					,	[CurrencyId]			
					,	[RtcId]					
					,	[IsFixedRate]			
					,	[ETA]					
					,	[ReservationTypeId]		
					,	[MarketId]				
					,	[ReservationSourceId]	
					,	[PaymentMethodId]		
					,	[CreditCardNo]			
					,	[CardExpiryDate]		
					,	[CVVNo]	
					,	[CreatedBy]
					,	[CreatedOn]
					,	[IsActive]
				)
				VALUES
				(
						 NEWID()
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
					,	@UserId
					,	GETDATE()
					,	1
				)

			FETCH NEXT FROM cur_reservation 
				INTO	
						@RowNum				
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation



	--DROP Table #tmpProfile
	IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpProfile
	END


	--DROP Table #tmpReservation
	IF(OBJECT_ID('tempdb..#tmpReservation') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpReservation
	END
   
END



/*****************************************************************************************************************/
Name : Nilesh
Date : 26-FEB-2018
/*****************************************************************************************************************/


/************************************************************************************************************************ 
	SP Name : GetTitle
	Comment : Changes in SP GetTitle
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[GetTitle]    Script Date: 2/26/2018 11:15:17 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetTitle]	
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT *, 1 AS SortOrder FROM [dbo].[Title]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
			AND LTRIM(RTRIM([Title])) = 'Mr'
	UNION 
	SELECT *, 2 AS SortOrder FROM [dbo].[Title]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
			AND LTRIM(RTRIM([Title])) = 'Mrs'
	UNION
	SELECT *, 3 AS SortOrder FROM [dbo].[Title]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
			AND LTRIM(RTRIM([Title])) = 'Ms'	
	UNION
    SELECT *, 4 AS SortOrder FROM [dbo].[Title]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
			AND LTRIM(RTRIM([Title])) NOT IN ('Mr','Mrs','Ms')
		
	ORDER BY [SortOrder],[Title]
END




/************************************************************************************************************************ 
	SP Name : SearchBulkReservation
	Comment : Changes in SP SearchBulkReservation
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchBulkReservation]    Script Date: 2/26/2018 1:33:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchBulkReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@RateTypeId						=	NULL,		
		@RoomTypeId						=	NULL,		
		@RoomNo							=	NULL,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1
		
*/

ALTER PROCEDURE [dbo].[SearchBulkReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@RateTypeId						UNIQUEIDENTIFIER	=	NULL,		
	@RoomTypeId						UNIQUEIDENTIFIER	=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT

	CREATE TABLE #tempBulkReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNo]					NVARCHAR(255)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL			
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[TempBulkReservationMaster] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)							
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)	
								AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))																	
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
													
						)


		INSERT INTO #tempBulkReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]	
			,[Email]			
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNo]
			,[RoomTypeCode]
			,[RateTypeCode]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
							THEN  TRY_PARSE(R.[RoomNo] AS INT) END ASC,
						CASE WHEN [RoomNo] = 'RoomNo' and @SortDirection = 'desc'
							THEN TRY_PARSE(R.[RoomNo] AS INT) END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]	
				,ISNULL(P.Email,'') AS [Email]						
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(R.[RoomNo],'') AS [RoomNo]
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]				
				,R.[CreatedOn]
			FROM [dbo].[TempBulkReservationMaster] R
						INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
							AND ISNULL(P.IsDeleted,0) = 0 
							AND ISNULL(P.CreatedBy,0) = ISNULL(@CreatedBy,0)
						LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
						LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
						LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
				WHERE	ISNULL(R.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
						AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
						AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)	
						AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)
						AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
						AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))																	
						AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
																			

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]
			,temp.[Email]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomNo]
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]			
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempBulkReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/************* Rename SP : GetTempBulkReservationMassterById *************/

EXEC sp_rename 'GetTempBulkReservationMassterById', 'GetTempBulkReservationMasterById'


/************************************************************************************************************************ 
	SP Name : CheckRoomNoExistInTempBulkReservationMaster
	Comment : Create SP CheckRoomNoExistInTempBulkReservationMaster
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[CheckRoomNoExistInTempBulkReservationMaster]    Script Date: 2/26/2018 1:46:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckRoomNoExistInTempBulkReservationMaster] 
		@Id = NULL,
		@RoomNo = '101'
*/

CREATE PROCEDURE [dbo].[CheckRoomNoExistInTempBulkReservationMaster]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@RoomNo			NVARCHAR(255)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[TempBulkReservationMaster]  
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND RoomNo = @RoomNo
		ORDER BY CreatedOn DESC 
END


/*********************** Create new table ProfileRemarks   ***********************/

/****** Object:  Table [dbo].[ProfileRemarks]    Script Date: 2/26/2018 1:58:43 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ProfileRemarks](
	[Id] [uniqueidentifier] NOT NULL,
	[ProfileId] [uniqueidentifier] NOT NULL,
	[Remarks] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ProfileRemarks] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] 
GO

/************************************************************************************************************************ 
	SP Name : AddProfileRemark
	Comment : Create SP AddProfileRemark
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[AddProfileRemark]    Script Date: 2/26/2018 2:24:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddProfileRemark]	
	@ProfileId		UNIQUEIDENTIFIER				,
	@Remarks		NVARCHAR(MAX)					,	
	@CreatedOn		DATETIME			=	NULL	,					
	@CreatedBy		INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ProfileRemarks]
           (
					[Id]           
				,	[ProfileId]		   
				,	[Remarks]
				,	[CreatedBy]
				,	[CreatedOn]
		   )
     VALUES
           (
					@Id			   
			   ,	@ProfileId
			   ,	@Remarks
			   ,	@CreatedBy
			   ,	@CreatedOn
           )

		SELECT @Id AS Id    
END

/************************************************************************************************************************ 
	SP Name : UpdateProfileRemark
	Comment : Create SP UpdateProfileRemark
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[UpdateProfileRemark]    Script Date: 2/26/2018 2:28:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateProfileRemark]
	@Id				UNIQUEIDENTIFIER				,
	@ProfileId		UNIQUEIDENTIFIER				,
	@Remarks		NVARCHAR(MAX)					,		
	@UpdatedOn		DATETIME			=	NULL	,		
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ProfileRemarks]
		SET		[ProfileId]			=	@ProfileId	   
		   ,	[Remarks]			=	@Remarks
		   ,	[UpdatedBy]			=	@UpdatedBy
		   ,	[UpdatedOn]			=	@UpdatedOn
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/************************************************************************************************************************ 
	SP Name : DeleteProfileRemark
	Comment : Create SP DeleteProfileRemark
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteProfileRemark]    Script Date: 2/26/2018 2:29:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteProfileRemark]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ProfileRemarks] 
		SET		[IsDeleted] = 1
			,	[UpdatedBy] = @UpdatedBy					   
			,	[UpdatedOn] = GETDATE()

     WHERE		ISNULL(IsDeleted,0) = 0 
				AND Id			= @Id
				AND [CreatedBy] = @UserId

	SELECT @Id AS Id
    
END



/************************************************************************************************************************ 
	SP Name : GetProfileRemarkById
	Comment : Create SP GetProfileRemarkById
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetProfileRemarkById]    Script Date: 2/26/2018 2:30:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetProfileRemarkById]
	@Id			UNIQUEIDENTIFIER = NULL	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ProfileRemarks]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND [CreatedBy] = @UserId
		ORDER BY CreatedOn DESC
END

/************************************************************************************************************************ 
	SP Name : GetProfileRemarks
	Comment : Create SP GetProfileRemarks
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetProfileRemarks]    Script Date: 2/26/2018 2:30:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetProfileRemarks]
		@ProfileId		=	NULL	,
		@Id				=	NULL	,
		@UserId			=	1
	
*/

CREATE PROCEDURE [dbo].[GetProfileRemarks]
	@ProfileId		UNIQUEIDENTIFIER	=	NULL	,
	@Id				UNIQUEIDENTIFIER	=	NULL	,
	@UserId			INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT PRM.Id,PRM.ProfileId,ISNULL(PRM.Remarks,'') AS Remarks, PRM.CreatedOn,
		  UD.[Name] AS UserName, PRM.CreatedBy,
		  (CASE	WHEN (ISNULL(PRM.UpdatedBy,0) <> 0 AND PRM.UpdatedOn IS NOT NULL)
				THEN
					CONCAT(
							CONVERT(VARCHAR(10),PRM.UpdatedOn,103), 
							' ', 
							'at', 
							' ', 
							CONVERT(VARCHAR, PRM.UpdatedOn, 108),
							' ',
							'updated by ',
							UD.[Name]
						)
				WHEN (ISNULL(PRM.CreatedBy,0) <> 0 AND PRM.CreatedOn IS NOT NULL)
				THEN
					CONCAT(
							CONVERT(VARCHAR(10),PRM.CreatedOn,103), 
							' ', 
							'at', 
							' ', 
							CONVERT(VARCHAR, PRM.CreatedOn, 108),
							' ',
							'added by ',
							UD.[Name]
						)
				ELSE ''
			END) AS TrackLog
 
		FROM [dbo].[ProfileRemarks] PRM
			LEFT JOIN UserDetail UD ON UD.UserId = PRM.CreatedBy
				AND ISNULL(UD.IsDeleted,0) = 0
		WHERE	ISNULL(PRM.IsDeleted,0) = 0 
				AND PRM.[CreatedBy] = @UserId
				AND (@Id IS NULL OR PRM.Id = @Id)
				AND (@ProfileId IS NULL OR PRM.ProfileId = @ProfileId)
		ORDER BY PRM.CreatedOn DESC
END


/************************************************************************************************************************ 
	SP Name : DeleteAllProfile
	Comment : Changes in SP DeleteAllProfile
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteAllProfile]    Script Date: 2/26/2018 2:11:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [DeleteAllProfile]
***/

ALTER PROCEDURE [dbo].[DeleteAllProfile]		
	@UpdatedBy	INT	,
	@UserId		INT	
AS
BEGIN	
	SET NOCOUNT ON;

	-- ProfilePreferenceMapping	
	DELETE FROM [dbo].[ProfilePreferenceMapping]  WHERE [CreatedBy] = @UserId
		
	-- Profile Remarks
	UPDATE [dbo].[ProfileRemarks] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId

	-- IndividualProfile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
		,[UpdatedBy] = @UpdatedBy					   
		,[UpdatedOn] = GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId


	-- Delete All reservation by user id.
	EXEC [DeleteAllReservation] 
			@UpdatedBy	=	@UpdatedBy,
			@UserId		=	@UserId
END


/************************************************************************************************************************ 
	SP Name : DeleteIndividualProfile
	Comment : Changes in SP DeleteIndividualProfile
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteIndividualProfile]    Script Date: 2/26/2018 2:09:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteIndividualProfile]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT					,
	@UserId		INT					

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ProfileTypeId  UNIQUEIDENTIFIER = NULL

	SET @ProfileTypeId = (SELECT ProfileTypeId 
								FROM [IndividualProfile]  
								WHERE	ISNULL(IsDeleted,0) = 0  
										AND Id = @Id 
										AND [CreatedBy] = @UserId)

	--Delete Profile Preference Mapping
	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		WHERE ProfileId = @Id
			AND ProfileTypeId = @ProfileTypeId
			AND [CreatedBy] = @UserId


	--Delete Profile Remarks
	UPDATE [dbo].[ProfileRemarks]  
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND ProfileId = @Id
			AND [CreatedBy] = @UserId

	--Delete Individual Profile
	UPDATE [dbo].[IndividualProfile] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  Id = @Id
			AND [CreatedBy] = @UserId

	

	--Delete Reservation related data of this profile.

	--Reservation 
	UPDATE [dbo].[Reservation]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id
			AND [CreatedBy] = @UserId

	--CheckInCheckOutDetail 
	UPDATE [dbo].[CheckInCheckOutDetail] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id
			AND [CreatedBy] = @UserId

	--ReservationLog
	UPDATE [dbo].[ReservationLog]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND  ProfileId = @Id
			AND [CreatedBy] = @UserId


	SELECT @Id AS Id
    
END



/************************************************************************************************************************
Name : Nilesh
Date : 28-FEB-2018
*************************************************************************************************************************/

/*********************** Add new columns in ReservationPackageMapping table. **********************/

ALTER TABLE ReservationPackageMapping ADD Qty INT NULL 
GO

ALTER TABLE ReservationPackageMapping ADD PostingRhythm NVARCHAR(1000) NULL 
GO

ALTER TABLE ReservationPackageMapping ADD BeginDate DATETIME NULL 
GO

ALTER TABLE ReservationPackageMapping ADD EndDate DATETIME NULL 
GO

ALTER TABLE ReservationPackageMapping ADD TotalAmount NUMERIC(18,2) NULL 
GO


/************************************************************************************************************************ 
	SP Name : AddUpdateReservationPackageMapping
	Comment : Changes in SP AddUpdateReservationPackageMapping
***********************************************************************************************************************/ 
/****** Object:  StoredProcedure [dbo].[AddUpdateReservationPackageMapping]    Script Date: 2/28/2018 11:41:43 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationPackageMapping]
	@ReservationId		UNIQUEIDENTIFIER				,	
	@PackageId			UNIQUEIDENTIFIER				,
	@Qty				INT					=	NULL	,
	@PostingRhythm		NVARCHAR(1000)		=	NULL	,
	@BeginDate			DATETIME			=	NULL	,
	@EndDate			DATETIME			=	NULL	,
	@TotalAmount		NUMERIC(18,2)		=	NULL	,
	@CreatedBy			INT					=	NULL	,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	
	SET @Id = (SELECT TOP 1 Id FROM [ReservationPackageMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [ReservationId] = @ReservationId 
								AND [PackageId] = @PackageId
								AND [CreatedBy] = @CreatedBy
				)

	IF @Id IS NULL
	BEGIN

		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationPackageMapping]
			   (
				   [Id]
				  ,[ReservationId]			   
				  ,[PackageId]
				  ,[Qty]
				  ,[PostingRhythm]
				  ,[BeginDate]
				  ,[EndDate]
				  ,[TotalAmount]
				  ,[CreatedBy]
				  ,[CreatedOn]
			   )
		 VALUES
				(
					 @Id
					,@ReservationId					
					,@PackageId
					,@Qty
					,@PostingRhythm
					,@BeginDate
					,@EndDate
					,@TotalAmount
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationPackageMapping]
			SET		 [Qty]				=	@Qty 
					,[PostingRhythm]	=	@PostingRhythm
					,[BeginDate]		=	@BeginDate
					,[EndDate]			=	@EndDate
					,[TotalAmount]		=	@TotalAmount
					,[UpdatedBy]		=	@UpdatedBy
					,[UpdatedOn]		=	GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [PackageId] = @PackageId
					AND [Id] = @Id
	END
			
	SELECT @Id AS Id
    
END



/************************************************************************************************************************ 
	SP Name : SearchUserDetail
	Comment : Changes in SP SearchUserDetail
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[SearchUserDetail]    Script Date: 2/28/2018 12:51:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserDetail] NULL, '', '', 1, 10
*/

ALTER PROCEDURE [dbo].[SearchUserDetail]					
	@UserRoleId		UNIQUEIDENTIFIER	=	NULL	,		
	@Name			NVARCHAR(500)		=	NULL	,	
	@Email			NVARCHAR(500)		=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserDetail
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]					NVARCHAR(500)		NULL	
		,   [Email]					NVARCHAR(500)		NULL	
		,	[Password]				NVARCHAR(2000)		NULL	
		,	[UserRoleId]			UNIQUEIDENTIFIER	NULL		
		,   [UserRoleName]			NVARCHAR(500)		NULL	
		,   [UserRoleCode]			NVARCHAR(255)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
		,   [IsRecordActivity]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT UD.Id) 
						FROM [dbo].[UserDetail] UD 
								INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
									AND ISNULL(URM.IsDeleted,0) = 0
								INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
									AND ISNULL(UR.IsDeleted,0) = 0
						WHERE	ISNULL(UD.IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 
								AND (@UserRoleId IS NULL OR URM.[UserRoleId] = @UserRoleId)								
						)


		INSERT INTO #tempUserDetail 
		(
			[RowNum], 
			[Id], 
			[Name], 
			[Email], 
			[Password],
			[UserRoleId],
			[UserRoleName], 
			[UserRoleCode],
			[CreatedOn], 
			[IsActive],
			[IsRecordActivity]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN UD.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN UD.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN UD.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN UD.[Name] END DESC,

						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'asc'
							THEN UD.[Email] END ASC,
						CASE WHEN @SortColumn = 'Email' and @SortDirection = 'desc'
							THEN UD.[Email] END DESC,

						CASE WHEN @SortColumn = 'UserRoleName' and @SortDirection = 'asc'
							THEN UR.[Name] END ASC,
						CASE WHEN @SortColumn = 'UserRoleName' and @SortDirection = 'desc'
							THEN UR.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN UD.[Name] END ASC

				) AS RowNum,
				UD.[Id],		
				UD.[Name],
				UD.[Email],
				UD.[Password],
				UR.Id AS [UserRoleId],
				UR.[Name] AS [UserRoleName],
				UR.[Code] AS [UserRoleCode],				
				UD.[CreatedOn],
				ISNULL(UD.[IsActive],0) AS [IsActive],
				ISNULL(UD.[IsRecordActivity],0) AS  [IsRecordActivity]
		FROM [dbo].[UserDetail] UD 
				INNER JOIN [dbo].[UserRoleMapping] URM ON URM.UserId = UD.Id
					AND ISNULL(URM.IsDeleted,0) = 0
				INNER JOIN [dbo].[UserRole] UR ON UR.Id = URM.UserRoleId
					AND ISNULL(UR.IsDeleted,0) = 0
		WHERE	ISNULL(UD.IsDeleted,0) = 0								
				AND (ISNULL(@Name,'') = '' OR UD.[Name] LIKE '%'+ @Name +'%') 
				AND (ISNULL(@Email,'') = '' OR UD.[Email] LIKE '%'+ @Email +'%') 
				AND (@UserRoleId IS NULL OR URM.[UserRoleId] = @UserRoleId)	
	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Name],				
			temp.[Email],
			temp.[Password],
			temp.[UserRoleId],			
			temp.[UserRoleName],			
			temp.[UserRoleCode],			
			temp.[CreatedOn],
			temp.IsActive, 
			temp.IsRecordActivity,
			@TotalCount AS TotalCount
	FROM	
		#tempUserDetail AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservationMaster
	Comment : Changes in SP LoadTempBulkReservationMaster
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservationMaster]    Script Date: 2/28/2018 2:31:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservationMaster] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservationMaster]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	
	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50


	/************************ STEP 1 : Populate Temp Profile & Room Table ************************/

	-- Create temp profile table.
	CREATE TABLE #tmpProfile
	(
			[RowNum]			INT					NOT NULL
		,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
		,   [LastName]			NVARCHAR(500)		NULL	
		,	[FirstName]			NVARCHAR(500)		NULL	
		,	[TitleId]			UNIQUEIDENTIFIER	NULL	
		,	[CountryId]			INT					NULL
		,	[PhoneNo]			NVARCHAR(255)		NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NULL
		,	[RoomId]			UNIQUEIDENTIFIER	NULL
		,   [RoomNo]			NVARCHAR(255)		NULL
	)


	-- Create temp room table.
	CREATE TABLE #tmpRoom
	(
			[RowNum]			INT					NOT NULL		
		,	[RoomId]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NOT NULL	
		,   [RoomNo]			NVARCHAR(255)		NULL
	)

	-- Insert data in temp profile table.
	INSERT INTO #tmpProfile
		(
			 [RowNum]
			,[ProfileId]
			,[LastName]
			,[FirstName]	
			,[TitleId]	
			,[CountryId]
			,[PhoneNo]
		)
	SELECT TOP (@TopCount)
		ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
		PR.Id AS [ProfileId],
		PR.[LastName] AS [LastName],
		PR.[FirstName] AS [FirstName],
		PR.[TitleId],
		PR.[CountryId],
		PR.[TelephoneNo]
	FROM	[IndividualProfile] PR 
	WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
			AND PR.[CreatedBy] = @UserId 
	ORDER BY [LastName]

	-- Insert data in temp room table.
	INSERT INTO #tmpRoom
		(
			 [RowNum]
			,[RoomId]
			,[RoomTypeId]
			,[RoomNo]		
		)
	SELECT 
		ROW_NUMBER() OVER (ORDER BY A.RoomNo ASC) AS [RowNum],
		A.Id AS [RoomId],
		A.[RoomTypeId],
		A.[RoomNo]
	FROM 
	(
		SELECT DISTINCT TOP (@TopCount)
			 R.Id,
			 R.RoomTypeId,
			 R.RoomNo	 
		FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
			INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
				AND ISNULL(ROT.IsDeleted,0) = 0 
			INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
				AND ISNULL(R.IsDeleted,0) = 0 
			INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
				AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE ISNULL(RTRTM.IsDeleted,0) = 0	
		ORDER BY R.RoomNo ASC
	) AS A

	-- Update Room Details in temp profile table.
	UPDATE TP
		SET	TP.RoomId		=	TR.RoomId,
			TP.RoomTypeId	=	TR.RoomTypeId,
			TP.RoomNo		=	TR.RoomNo
	FROM #tmpProfile TP INNER JOIN #tmpRoom TR ON TP.RowNum = TR.RowNum

	/************************ STEP 2 : Populate Temp Bulk Reservation Master Table ************************/

	-- Delete all the date from TempBulkReservationMaster by user id.
	DELETE FROM TempBulkReservationMaster WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL

	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	DECLARE		@WeekDayName			NVARCHAR(50)		=	DATENAME(WEEKDAY,@ArrivalDate) 
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@IsWeekEndPrice			BIT					=	0
	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)

	DECLARE		@MarketId				UNIQUEIDENTIFIER 
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER 
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	'4242'
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	'07/28'
	DECLARE		@CVVNo					NVARCHAR(255)		=	'745'



	-- GET TOP 1 Market.
	SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(IsActive,0) = 1
							ORDER BY [Name])

	-- GET TOP 1 Reservation Type.
	SET @ReservationTypeId = (SELECT TOP 1 Id FROM [ReservationType] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Guarantee Type'
									ORDER BY [Name])

	-- GET TOP 1 Reservation Source.
	SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET Payment Method 'Visa'
	SET @PaymentMethodId = (SELECT TOP 1 Id FROM [PaymentMethod] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Visa'
									ORDER BY [Name])

	-- Check Week End.
	IF ISNULL(@WeekDayName,'') <> ''
	BEGIN
		IF (@WeekDayName = 'Friday' OR @WeekDayName = 'Saturday')
		BEGIN
			SET @IsWeekEndPrice = 1
		END
	END

	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_profile CURSOR STATIC FOR
		SELECT  RowNum, ProfileId, LastName, FirstName, TitleId, CountryId, PhoneNo, 
				RoomTypeId, RoomId, RoomNo 
			FROM #tmpProfile 
			ORDER BY RowNum ASC

	OPEN cur_profile
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			-- Get Top 1 Rate Type and Rate Details.
			SELECT	TOP 1 @RateTypeId = RTRTM.RateTypeId, @Rate = RTRTM.Amount
			FROM	[dbo].[RoomTypeRateTypeMapping] RTRTM
					INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
						AND ISNULL(ROT.IsDeleted,0) = 0 
					INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
						AND ISNULL(R.IsDeleted,0) = 0 
					INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
						AND ISNULL(RAT.IsDeleted,0) = 0 
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0	
					AND RTRTM.RoomTypeId = @RoomTypeId				


			-- Add data in TempBulkReservationMaster Table.
			INSERT INTO TempBulkReservationMaster
				(
					 [Id]
					,[TitleId]
					,[LastName]
					,[FirstName]
					,[ProfileId]
					,[CountryId]
					,[PhoneNo]
					,[ArrivalDate]
					,[NoOfNight]
					,[DepartureDate]
					,[NoOfAdult]	
					,[NoOfChildren]
					,[NoOfInfant]			
					,[NoOfRoom]
					,[RoomId]
					,[RoomNo]
					,[RoomTypeId]
					,[RateCodeId]
					,[Rate]
					,[CurrencyId]
					,[ETA]
					,[ReservationTypeId]
					,[MarketId]
					,[ReservationSourceId]
					,[PaymentMethodId]
					,[CreditCardNo]
					,[CardExpiryDate]
					,[CVVNo]
					,[CreatedBy]
					,[CreatedOn]
					,[IsActive]
				)
				VALUES
				(
					 NEWID()
					,@TitleId
					,@LastName
					,@FirstName
					,@ProfileId
					,@CountryId
					,@PhoneNo
					,@ArrivalDate
					,@NoOfNight
					,@DepartureDate
					,@NoOfAdult
					,@NoOfChildren
					,@NoOfInfant
					,@NoOfRoom
					,@RoomId
					,@RoomNo
					,@RoomTypeId
					,@RateTypeId
					,@Rate
					,@CurrencyId
					,@ETA
					,@ReservationTypeId
					,@MarketId
					,@ReservationSourceId
					,@PaymentMethodId
					,@CreditCardNo
					,@CardExpiryDate
					,@CVVNo
					,@UserId
					,GETDATE()
					,1
				)

			FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		END
	END
	CLOSE cur_profile
	DEALLOCATE cur_profile



	--DROP Table #tmpProfile
	IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpProfile
	END


	--DROP Table #tmpRoom
	IF(OBJECT_ID('tempdb..#tmpRoom') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpRoom
	END

   
END



/************* Execute SP : LoadTempBulkReservationMaster *********/

EXEC [LoadTempBulkReservationMaster] @UserId = 1




/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservation
	Comment : Changes in SP LoadTempBulkReservation
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservation]    Script Date: 2/28/2018 2:03:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservation] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservation]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50

	SET @TopCount = (SELECT COUNT(*) FROM TempBulkReservationMaster WHERE ISNULL(IsDeleted,0) = 0)

	DECLARE @CreatedBy INT = NULL

	/*************** STEP 1 : Populate Temp Profile & Reservation Table *********/

	---- Create temp profile table.
	--CREATE TABLE #tmpProfile
	--(
	--		[RowNum]			INT					NOT NULL
	--	,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
	--	,   [LastName]			NVARCHAR(500)		NULL	
	--	,	[FirstName]			NVARCHAR(500)		NULL	
	--	,	[TitleId]			UNIQUEIDENTIFIER	NULL	
	--	,	[CountryId]			INT					NULL
	--	,	[PhoneNo]			NVARCHAR(255)		NULL		
	--)

	-- Create temp reservation table.
	CREATE TABLE #tmpReservation
	(
			[RowNum]				INT					NOT NULL
		,	[TitleId]				UNIQUEIDENTIFIER	NULL
		,   [LastName]				NVARCHAR(500)		NULL	
		,	[FirstName]				NVARCHAR(500)		NULL	
		,	[ProfileId]				UNIQUEIDENTIFIER	NOT NULL
		,	[CountryId]				INT					NULL
		,	[PhoneNo]				NVARCHAR(500)		NULL	
		,	[ArrivalDate]			DATETIME			NULL
		,	[NoOfNight]				INT					NULL
		,	[DepartureDate]			DATETIME			NULL
		,	[NoOfAdult]				INT					NULL
		,	[NoOfChildren]			INT					NULL
		,	[NoOfInfant]			INT					NULL	
		,	[NoOfRoom]				INT					NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NULL
		,	[RoomNo]				NVARCHAR(500)		NULL	
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RateCodeId]			UNIQUEIDENTIFIER	NULL
		,	[Rate]					NUMERIC(18,2)		NULL
		,	[CurrencyId]			UNIQUEIDENTIFIER	NULL
		,	[RtcId]					UNIQUEIDENTIFIER	NULL
		,	[IsFixedRate]			BIT					NULL
		,	[ETA]					TIME(7)				NULL
		,	[ReservationTypeId]		UNIQUEIDENTIFIER	NULL
		,	[MarketId]				UNIQUEIDENTIFIER	NULL	
		,	[ReservationSourceId]	UNIQUEIDENTIFIER	NULL
		,	[PaymentMethodId]		UNIQUEIDENTIFIER	NULL
		,	[CreditCardNo]			NVARCHAR(255)		NULL
		,	[CardExpiryDate]		NVARCHAR(255)		NULL	
		,	[CVVNo]					NVARCHAR(255)		NULL
	)

	---- Insert data in temp profile table.
	--INSERT INTO #tmpProfile
	--	(
	--		 [RowNum]
	--		,[ProfileId]
	--		,[LastName]
	--		,[FirstName]	
	--		,[TitleId]	
	--		,[CountryId]
	--		,[PhoneNo]
	--	)
	--SELECT TOP (@TopCount)
	--	ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
	--	PR.Id AS [ProfileId],
	--	PR.[LastName] AS [LastName],
	--	PR.[FirstName] AS [FirstName],
	--	PR.[TitleId],
	--	PR.[CountryId],
	--	PR.[TelephoneNo]
	--FROM	[IndividualProfile] PR 
	--WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
	--		AND PR.[CreatedBy] = @UserId 
	--ORDER BY [LastName]


	-- Insert data in temp reservation table.
	INSERT INTO #tmpReservation
		(
				[RowNum]				
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]			
		)
		SELECT TOP (@TopCount)
			ROW_NUMBER() OVER (ORDER BY CreatedOn DESC) AS [RowNum]
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]	
	FROM	[TempBulkReservationMaster]
	WHERE	ISNULL(IsDeleted,0) = 0 				
		

	-- Update Profile details in temp reservation table.
	SET @CreatedBy = (SELECT TOP 1 CreatedBy 
							FROM	[TempBulkReservationMaster] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(CreatedBy,0) <> 0)

	--UPDATE TR
	--	SET	TR.ProfileId	=	TP.ProfileId	,
	--		TR.LastName		=	TP.LastName		,
	--		TR.FirstName	=	TP.FirstName	,
	--		TR.TitleId		=	TP.TitleId		,
	--		TR.CountryId	=	TP.CountryId	,
	--		TR.PhoneNo		=	TP.PhoneNo	
	--FROM #tmpProfile TP INNER JOIN #tmpReservation TR ON TP.RowNum = TR.RowNum

	/************** STEP 2 : Populate Temp Bulk Reservation Table **************/

	-- Delete all the data from TempBulkReservation by user id.
	DELETE FROM TempBulkReservation WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL	
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@Email					NVARCHAR(2000)		=	NULL
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL

	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		=	NULL
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)
	DECLARE		@RtcId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@IsFixedRate			BIT					=	0
	
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL
	DECLARE		@MarketId				UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	NULL
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	NULL
	DECLARE		@CVVNo					NVARCHAR(255)		=	NULL


	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  
					[RowNum]				
				,	[TitleId]				
				,   [LastName]				
				,	[FirstName]				
				,	[ProfileId]				
				,	[CountryId]				
				,	[PhoneNo]				
				,	[ArrivalDate]			
				,	[NoOfNight]				
				,	[DepartureDate]			
				,	[NoOfAdult]				
				,	[NoOfChildren]			
				,	[NoOfInfant]			
				,	[NoOfRoom]				
				,	[RoomId]				
				,	[RoomNo]				
				,	[RoomTypeId]			
				,	[RateCodeId]			
				,	[Rate]					
				,	[CurrencyId]			
				,	[RtcId]					
				,	[IsFixedRate]			
				,	[ETA]					
				,	[ReservationTypeId]		
				,	[MarketId]				
				,	[ReservationSourceId]	
				,	[PaymentMethodId]		
				,	[CreditCardNo]			
				,	[CardExpiryDate]		
				,	[CVVNo]		
		FROM #tmpReservation 
		ORDER BY RowNum ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation 
			INTO	
					@RowNum				
				, 	@TitleId			
				, 	@LastName			
				, 	@FirstName			
				, 	@ProfileId			
				, 	@CountryId			
				, 	@PhoneNo			
				, 	@ArrivalDate		
				, 	@NoOfNight			
				, 	@DepartureDate		
				, 	@NoOfAdult			
				, 	@NoOfChildren		
				, 	@NoOfInfant			
				, 	@NoOfRoom			
				, 	@RoomId				
				, 	@RoomNo				
				, 	@RoomTypeId			
				, 	@RateTypeId			
				, 	@Rate				
				, 	@CurrencyId			
				, 	@RtcId				
				, 	@IsFixedRate		
				, 	@ETA				
				, 	@ReservationTypeId	
				, 	@MarketId			
				, 	@ReservationSourceId
				, 	@PaymentMethodId	
				, 	@CreditCardNo		
				, 	@CardExpiryDate		
				, 	@CVVNo				 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			--Clear variables.
			SET @FirstName = ''
			SET @LastName = ''
			SET @Email = ''
			SET @PhoneNo = ''

			SELECT TOP 1 @FirstName = FirstName, @LastName = LastName, @Email = Email, @PhoneNo = TelephoneNo
					FROM IndividualProfile 
					WHERE	ISNULL(IsDeleted,0) = 0 
							AND CreatedBy = @CreatedBy	
							AND Id = @ProfileId

			--Clear variables.
			SET @ProfileId	=	NULL
			SET @TitleId	=	NULL

			--Get Profile details by user id (student)
			SELECT TOP 1 @ProfileId = Id , @TitleId = TitleId
					FROM IndividualProfile 
					WHERE	ISNULL(IsDeleted,0) = 0 
							AND CreatedBy	=	@UserId	
							AND FirstName	=	@FirstName
							AND LastName	=	@LastName
							AND Email		=	@Email
							AND TelephoneNo	=	@PhoneNo

			-- Add data in TempBulkReservation Table.
			INSERT INTO TempBulkReservation
				(
						[Id]
					,	[TitleId]				
					,   [LastName]				
					,	[FirstName]				
					,	[ProfileId]				
					,	[CountryId]				
					,	[PhoneNo]				
					,	[ArrivalDate]			
					,	[NoOfNight]				
					,	[DepartureDate]			
					,	[NoOfAdult]				
					,	[NoOfChildren]			
					,	[NoOfInfant]			
					,	[NoOfRoom]				
					,	[RoomId]				
					,	[RoomNo]				
					,	[RoomTypeId]			
					,	[RateCodeId]			
					,	[Rate]					
					,	[CurrencyId]			
					,	[RtcId]					
					,	[IsFixedRate]			
					,	[ETA]					
					,	[ReservationTypeId]		
					,	[MarketId]				
					,	[ReservationSourceId]	
					,	[PaymentMethodId]		
					,	[CreditCardNo]			
					,	[CardExpiryDate]		
					,	[CVVNo]	
					,	[CreatedBy]
					,	[CreatedOn]
					,	[IsActive]
				)
				VALUES
				(
						 NEWID()
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
					,	@UserId
					,	GETDATE()
					,	1
				)

			FETCH NEXT FROM cur_reservation 
				INTO	
						@RowNum				
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation



	----DROP Table #tmpProfile
	--IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	--BEGIN
	--	DROP TABLE #tmpProfile
	--END


	--DROP Table #tmpReservation
	IF(OBJECT_ID('tempdb..#tmpReservation') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpReservation
	END
END

/************* Add new column IsDummyProfile in IndividualProfile ****************/

ALTER TABLE IndividualProfile ADD IsDummyProfile BIT NULL
GO


/************************************************************************************************************************ 
	SP Name : LoadDefaultIndividualProfile
	Comment : Changes in SP LoadDefaultIndividualProfile
***********************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[LoadDefaultIndividualProfile]    Script Date: 2/28/2018 2:59:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****
	EXEC [LoadDefaultIndividualProfile] @UserId = 1

**/

ALTER PROCEDURE [dbo].[LoadDefaultIndividualProfile]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Breen','Sophie','sophie.breen@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8329819','24 Glenside, Tramore, Co.  Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Roche','Frances','frances.roche@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8489812','78 Elm Park, East Wall, Dublin 2,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Doyle','Sean','sean.doyle@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 4329810','5 East Place, Blase Road, Tipperary,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Forde','Aisha','aisha.forde@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 2329814','79 Cliff Road, Clover Hill, Carlow,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Garcia','Mary','mary.garcia@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8329811','2 Hazelbourne, Little Island, Cork,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Janog','Jianne','jianne.janog@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5329720','321 The Glaze, Drogheda, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Lewkowicz','Mateusz','mateusz.lewkowicz@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 8329900','987 Le Faun Rd, Wicklow, Co. Dublin',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kalela','Alpha','alpha.kalela@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 2229819','111 The Willows, Clonmel, Co. Tipperary, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'McGee','Thomas','thomas.mcgee@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'083 2329825','989 Kennedy Park, Willow Road, Cork,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Moloney','Joanne','joanne.moloney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8329821','321 The Fairways, Galway,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mvete','Kuavita','kuavita.mvete@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 9582325','5 The Fairways Drive, Kilkenny,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Purcell','Lucy','lucy.purcell@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 7229815','12 The Roost, Dunmore East, Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Connolly','Peggy','peggy.connolly@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mrs'),'086 8749813','2 Blanket Road, Thurles, Co Tipperary,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Zhang','Yuli','yuli.zhang@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5832981','9 Hazelwood, Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Bolger','Kate','kate.bolger@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 3732911','89 The Loft, Wexford   Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Lynch','Thomas','thomas.lynch@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'085 4957252','45 Clarinwood, Tramore, Co . Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cummings','Stuart','stuart.cummings@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'089 9995713','32 The Moorings, Rebel Hill, Co Cork,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Delaney','Roisin','roisin.delaney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 8329444','85 The Pier, Salthill, Galway,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Egan','Elaine','elaine.egan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 5263813','68 Rocksprings, Tramore, Co.  Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Gorniak','Donata','donata.gorniak@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 4443262','2 The Pavillion, Edge Street, Carlow,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Jones','Dervla','dervla.jones@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329822','2 Elm Park, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 


	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Layton','Sarah','sarah.layton@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 8311819','5 Edgewater  Street, Kilkenny, Ireland. ',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mbeba','Sadi','sadi.mbeba@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 1234595','19 Grange Park, Lisduggan, Co Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Roche','Caitrona','caitrona.roche@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 8388222','85 Winter Road, Enniscothy, Co Wexford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Bolger','Kate','kate.bolger@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','32 The Vikings, Rosslare, Co. Wexford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Ennis','Tracey','tracey.ennis@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 9929555','56 Gable End, The Moorings, Co Waterford.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'McCartin','Siobhan','siobhan.mccartin@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 4852654','145 Le Fonta Rd, Clondalkin, Co. Dublin,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Ennis','Kelly','kelly.ennis@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 7896542','‘Ardhaven’ Cliff Road Tramore, Co. Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'OSuillivan','Christine','christine.osuillivan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 3366589','1 The Whistles, Blenheim Heights, Cavan, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Duffy','Leah','leah.duffy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 3294171','76 Carrigeenlea, Cliff Road, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Wall','Roxanne','roxanne.wall@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','32 Rocksprings, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Healy','Sile','sile.healy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 1112258','25 Maple Court, Roscrea,  Co. Tipperary ,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kudabaite','Manta','manta.kudabaite@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 5522985','34 Heather Road, Limerick, Ireland.  ',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Vilmane','Dana','dana.vilmane@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 3325211','96 Ardhaven Road, Mallow, Co.Cork.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'ORiordan','Daniel','daniel.oriordan@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 6589656','3 Westgate, The Curragh, Co. Kildare.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Clooney','George','george.clooney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'087 3214856','3 The Mews, Swifton Street,  Wicklow,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Nugent','Sarah','sarah.nugent@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329819','9 Step a Side, Bray, Co, Wicklow, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Launders','Alana','alana.launders@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 3339782','36 The Farm Park, Lismore, Co. Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Silzeviciute','Elge','elge.silzeviciute@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8329311','32 Basket Road, Dungarvan, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cato','Claire','claire.cato@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 8325619','478 Kennedy Park, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Cuntapay','Ericka','ericka.cuntapay@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 8329522','116 Pine Alley, Ferndale, Naas Co. Kildare,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Grochlolva','Martina','martina.grochlolva@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 9324112','478 Liffey Rd, Co. Kilkenny,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Hegarty','Alana','alana.hegarty@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'086 5632819','111 Future Road, Kilkenny, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Hosford','Hayley','hayley.hosford@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'085 2129888','98  Elm Park, Tramore, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Kelly','Chantelle','chantelle.kelly@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 1325658','123 The View, Stateside Road, Dungarvan, Co. Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Martin','Jamie','jamie.martin@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 3344202','987 The Moorings, Dungarvan, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Murphy','Ashley','ashley.murphy@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'087 8555818','25 Grace Drive, Ballankill,  Waterford, Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Mcconville','Sue','sue.mcconville@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'089 5344820','11 The Fairways, Dunmore East, Co. Waterford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Delaney','Martina','martina.delaney@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Ms'),'083 9685857','111 The Port, Liffey Street, Co Cork,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 

	INSERT INTO IndividualProfile ([Id],[ProfileTypeId],[LastName],[FirstName],[Email],[TitleId],[TelephoneNo],[Address],[CountryId],[CreatedBy],[CreatedOn],[IsActive], [IsDummyProfile]) VALUES (NEWID(),(SELECT TOP 1 Id FROM ProfileType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] = 'Individual'),'Canton','Shane','shane.canton@gmail.com',(SELECT TOP 1 Id FROM Title WHERE ISNULL(IsDeleted,0) = 0 AND [Title] ='Mr'),'086 8829856','09 Harvey Drive, Wtaerford,  Ireland.',NULL,@UserId,GETDATE(),1, 1) 


   
END


/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservationMaster
	Comment : Changes in SP LoadTempBulkReservationMaster	
***********************************************************************************************************************/ 
/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservationMaster]    Script Date: 2/28/2018 3:03:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservationMaster] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservationMaster]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	
	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50


	/************************ STEP 1 : Populate Temp Profile & Room Table ************************/

	-- Create temp profile table.
	CREATE TABLE #tmpProfile
	(
			[RowNum]			INT					NOT NULL
		,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
		,   [LastName]			NVARCHAR(500)		NULL	
		,	[FirstName]			NVARCHAR(500)		NULL	
		,	[TitleId]			UNIQUEIDENTIFIER	NULL	
		,	[CountryId]			INT					NULL
		,	[PhoneNo]			NVARCHAR(255)		NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NULL
		,	[RoomId]			UNIQUEIDENTIFIER	NULL
		,   [RoomNo]			NVARCHAR(255)		NULL
	)


	-- Create temp room table.
	CREATE TABLE #tmpRoom
	(
			[RowNum]			INT					NOT NULL		
		,	[RoomId]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NOT NULL	
		,   [RoomNo]			NVARCHAR(255)		NULL
	)

	-- Insert data in temp profile table.
	INSERT INTO #tmpProfile
		(
			 [RowNum]
			,[ProfileId]
			,[LastName]
			,[FirstName]	
			,[TitleId]	
			,[CountryId]
			,[PhoneNo]
		)
	SELECT TOP (@TopCount)
		ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
		PR.Id AS [ProfileId],
		PR.[LastName] AS [LastName],
		PR.[FirstName] AS [FirstName],
		PR.[TitleId],
		PR.[CountryId],
		PR.[TelephoneNo]
	FROM	[IndividualProfile] PR 
	WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
			AND ISNULL(PR.IsDummyProfile,0) = 1
			AND PR.[CreatedBy] = @UserId 
	ORDER BY [LastName]

	-- Insert data in temp room table.
	INSERT INTO #tmpRoom
		(
			 [RowNum]
			,[RoomId]
			,[RoomTypeId]
			,[RoomNo]		
		)
	SELECT 
		ROW_NUMBER() OVER (ORDER BY A.RoomNo ASC) AS [RowNum],
		A.Id AS [RoomId],
		A.[RoomTypeId],
		A.[RoomNo]
	FROM 
	(
		SELECT DISTINCT TOP (@TopCount)
			 R.Id,
			 R.RoomTypeId,
			 R.RoomNo	 
		FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
			INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
				AND ISNULL(ROT.IsDeleted,0) = 0 
			INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
				AND ISNULL(R.IsDeleted,0) = 0 
			INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
				AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE ISNULL(RTRTM.IsDeleted,0) = 0	
		ORDER BY R.RoomNo ASC
	) AS A

	-- Update Room Details in temp profile table.
	UPDATE TP
		SET	TP.RoomId		=	TR.RoomId,
			TP.RoomTypeId	=	TR.RoomTypeId,
			TP.RoomNo		=	TR.RoomNo
	FROM #tmpProfile TP INNER JOIN #tmpRoom TR ON TP.RowNum = TR.RowNum

	/************************ STEP 2 : Populate Temp Bulk Reservation Master Table ************************/

	-- Delete all the date from TempBulkReservationMaster by user id.
	DELETE FROM TempBulkReservationMaster WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL

	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	DECLARE		@WeekDayName			NVARCHAR(50)		=	DATENAME(WEEKDAY,@ArrivalDate) 
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@IsWeekEndPrice			BIT					=	0
	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)

	DECLARE		@MarketId				UNIQUEIDENTIFIER 
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER 
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	'4242'
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	'07/28'
	DECLARE		@CVVNo					NVARCHAR(255)		=	'745'



	-- GET TOP 1 Market.
	SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(IsActive,0) = 1
							ORDER BY [Name])

	-- GET TOP 1 Reservation Type.
	SET @ReservationTypeId = (SELECT TOP 1 Id FROM [ReservationType] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Guarantee Type'
									ORDER BY [Name])

	-- GET TOP 1 Reservation Source.
	SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET Payment Method 'Visa'
	SET @PaymentMethodId = (SELECT TOP 1 Id FROM [PaymentMethod] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Visa'
									ORDER BY [Name])

	-- Check Week End.
	IF ISNULL(@WeekDayName,'') <> ''
	BEGIN
		IF (@WeekDayName = 'Friday' OR @WeekDayName = 'Saturday')
		BEGIN
			SET @IsWeekEndPrice = 1
		END
	END

	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_profile CURSOR STATIC FOR
		SELECT  RowNum, ProfileId, LastName, FirstName, TitleId, CountryId, PhoneNo, 
				RoomTypeId, RoomId, RoomNo 
			FROM #tmpProfile 
			ORDER BY RowNum ASC

	OPEN cur_profile
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			-- Get Top 1 Rate Type and Rate Details.
			SELECT	TOP 1 @RateTypeId = RTRTM.RateTypeId, @Rate = RTRTM.Amount
			FROM	[dbo].[RoomTypeRateTypeMapping] RTRTM
					INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
						AND ISNULL(ROT.IsDeleted,0) = 0 
					INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
						AND ISNULL(R.IsDeleted,0) = 0 
					INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
						AND ISNULL(RAT.IsDeleted,0) = 0 
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0	
					AND RTRTM.RoomTypeId = @RoomTypeId				


			-- Add data in TempBulkReservationMaster Table.
			INSERT INTO TempBulkReservationMaster
				(
					 [Id]
					,[TitleId]
					,[LastName]
					,[FirstName]
					,[ProfileId]
					,[CountryId]
					,[PhoneNo]
					,[ArrivalDate]
					,[NoOfNight]
					,[DepartureDate]
					,[NoOfAdult]	
					,[NoOfChildren]
					,[NoOfInfant]			
					,[NoOfRoom]
					,[RoomId]
					,[RoomNo]
					,[RoomTypeId]
					,[RateCodeId]
					,[Rate]
					,[CurrencyId]
					,[ETA]
					,[ReservationTypeId]
					,[MarketId]
					,[ReservationSourceId]
					,[PaymentMethodId]
					,[CreditCardNo]
					,[CardExpiryDate]
					,[CVVNo]
					,[CreatedBy]
					,[CreatedOn]
					,[IsActive]
				)
				VALUES
				(
					 NEWID()
					,@TitleId
					,@LastName
					,@FirstName
					,@ProfileId
					,@CountryId
					,@PhoneNo
					,@ArrivalDate
					,@NoOfNight
					,@DepartureDate
					,@NoOfAdult
					,@NoOfChildren
					,@NoOfInfant
					,@NoOfRoom
					,@RoomId
					,@RoomNo
					,@RoomTypeId
					,@RateTypeId
					,@Rate
					,@CurrencyId
					,@ETA
					,@ReservationTypeId
					,@MarketId
					,@ReservationSourceId
					,@PaymentMethodId
					,@CreditCardNo
					,@CardExpiryDate
					,@CVVNo
					,@UserId
					,GETDATE()
					,1
				)

			FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		END
	END
	CLOSE cur_profile
	DEALLOCATE cur_profile



	--DROP Table #tmpProfile
	IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpProfile
	END


	--DROP Table #tmpRoom
	IF(OBJECT_ID('tempdb..#tmpRoom') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpRoom
	END

   
END



/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservationMaster
	Comment : Changes in SP LoadTempBulkReservationMaster	
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservation]    Script Date: 2/28/2018 3:05:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservation] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservation]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50

	SET @TopCount = (SELECT COUNT(*) FROM TempBulkReservationMaster WHERE ISNULL(IsDeleted,0) = 0)

	DECLARE @CreatedBy INT = NULL

	/*************** STEP 1 : Populate Temp Profile & Reservation Table *********/

	---- Create temp profile table.
	--CREATE TABLE #tmpProfile
	--(
	--		[RowNum]			INT					NOT NULL
	--	,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
	--	,   [LastName]			NVARCHAR(500)		NULL	
	--	,	[FirstName]			NVARCHAR(500)		NULL	
	--	,	[TitleId]			UNIQUEIDENTIFIER	NULL	
	--	,	[CountryId]			INT					NULL
	--	,	[PhoneNo]			NVARCHAR(255)		NULL		
	--)

	-- Create temp reservation table.
	CREATE TABLE #tmpReservation
	(
			[RowNum]				INT					NOT NULL
		,	[TitleId]				UNIQUEIDENTIFIER	NULL
		,   [LastName]				NVARCHAR(500)		NULL	
		,	[FirstName]				NVARCHAR(500)		NULL	
		,	[ProfileId]				UNIQUEIDENTIFIER	NOT NULL
		,	[CountryId]				INT					NULL
		,	[PhoneNo]				NVARCHAR(500)		NULL	
		,	[ArrivalDate]			DATETIME			NULL
		,	[NoOfNight]				INT					NULL
		,	[DepartureDate]			DATETIME			NULL
		,	[NoOfAdult]				INT					NULL
		,	[NoOfChildren]			INT					NULL
		,	[NoOfInfant]			INT					NULL	
		,	[NoOfRoom]				INT					NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NULL
		,	[RoomNo]				NVARCHAR(500)		NULL	
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RateCodeId]			UNIQUEIDENTIFIER	NULL
		,	[Rate]					NUMERIC(18,2)		NULL
		,	[CurrencyId]			UNIQUEIDENTIFIER	NULL
		,	[RtcId]					UNIQUEIDENTIFIER	NULL
		,	[IsFixedRate]			BIT					NULL
		,	[ETA]					TIME(7)				NULL
		,	[ReservationTypeId]		UNIQUEIDENTIFIER	NULL
		,	[MarketId]				UNIQUEIDENTIFIER	NULL	
		,	[ReservationSourceId]	UNIQUEIDENTIFIER	NULL
		,	[PaymentMethodId]		UNIQUEIDENTIFIER	NULL
		,	[CreditCardNo]			NVARCHAR(255)		NULL
		,	[CardExpiryDate]		NVARCHAR(255)		NULL	
		,	[CVVNo]					NVARCHAR(255)		NULL
	)

	---- Insert data in temp profile table.
	--INSERT INTO #tmpProfile
	--	(
	--		 [RowNum]
	--		,[ProfileId]
	--		,[LastName]
	--		,[FirstName]	
	--		,[TitleId]	
	--		,[CountryId]
	--		,[PhoneNo]
	--	)
	--SELECT TOP (@TopCount)
	--	ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
	--	PR.Id AS [ProfileId],
	--	PR.[LastName] AS [LastName],
	--	PR.[FirstName] AS [FirstName],
	--	PR.[TitleId],
	--	PR.[CountryId],
	--	PR.[TelephoneNo]
	--FROM	[IndividualProfile] PR 
	--WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
	--		AND ISNULL(PR.IsDummyProfile,0) = 1
	--		AND PR.[CreatedBy] = @UserId 
	--ORDER BY [LastName]


	-- Insert data in temp reservation table.
	INSERT INTO #tmpReservation
		(
				[RowNum]				
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]			
		)
		SELECT TOP (@TopCount)
			ROW_NUMBER() OVER (ORDER BY CreatedOn DESC) AS [RowNum]
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]	
	FROM	[TempBulkReservationMaster]
	WHERE	ISNULL(IsDeleted,0) = 0 				
		

	-- Update Profile details in temp reservation table.
	SET @CreatedBy = (SELECT TOP 1 CreatedBy 
							FROM	[TempBulkReservationMaster] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(CreatedBy,0) <> 0)

	--UPDATE TR
	--	SET	TR.ProfileId	=	TP.ProfileId	,
	--		TR.LastName		=	TP.LastName		,
	--		TR.FirstName	=	TP.FirstName	,
	--		TR.TitleId		=	TP.TitleId		,
	--		TR.CountryId	=	TP.CountryId	,
	--		TR.PhoneNo		=	TP.PhoneNo	
	--FROM #tmpProfile TP INNER JOIN #tmpReservation TR ON TP.RowNum = TR.RowNum

	/************** STEP 2 : Populate Temp Bulk Reservation Table **************/

	-- Delete all the data from TempBulkReservation by user id.
	DELETE FROM TempBulkReservation WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL	
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@Email					NVARCHAR(2000)		=	NULL
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL

	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		=	NULL
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)
	DECLARE		@RtcId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@IsFixedRate			BIT					=	0
	
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL
	DECLARE		@MarketId				UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	NULL
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	NULL
	DECLARE		@CVVNo					NVARCHAR(255)		=	NULL


	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  
					[RowNum]				
				,	[TitleId]				
				,   [LastName]				
				,	[FirstName]				
				,	[ProfileId]				
				,	[CountryId]				
				,	[PhoneNo]				
				,	[ArrivalDate]			
				,	[NoOfNight]				
				,	[DepartureDate]			
				,	[NoOfAdult]				
				,	[NoOfChildren]			
				,	[NoOfInfant]			
				,	[NoOfRoom]				
				,	[RoomId]				
				,	[RoomNo]				
				,	[RoomTypeId]			
				,	[RateCodeId]			
				,	[Rate]					
				,	[CurrencyId]			
				,	[RtcId]					
				,	[IsFixedRate]			
				,	[ETA]					
				,	[ReservationTypeId]		
				,	[MarketId]				
				,	[ReservationSourceId]	
				,	[PaymentMethodId]		
				,	[CreditCardNo]			
				,	[CardExpiryDate]		
				,	[CVVNo]		
		FROM #tmpReservation 
		ORDER BY RowNum ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation 
			INTO	
					@RowNum				
				, 	@TitleId			
				, 	@LastName			
				, 	@FirstName			
				, 	@ProfileId			
				, 	@CountryId			
				, 	@PhoneNo			
				, 	@ArrivalDate		
				, 	@NoOfNight			
				, 	@DepartureDate		
				, 	@NoOfAdult			
				, 	@NoOfChildren		
				, 	@NoOfInfant			
				, 	@NoOfRoom			
				, 	@RoomId				
				, 	@RoomNo				
				, 	@RoomTypeId			
				, 	@RateTypeId			
				, 	@Rate				
				, 	@CurrencyId			
				, 	@RtcId				
				, 	@IsFixedRate		
				, 	@ETA				
				, 	@ReservationTypeId	
				, 	@MarketId			
				, 	@ReservationSourceId
				, 	@PaymentMethodId	
				, 	@CreditCardNo		
				, 	@CardExpiryDate		
				, 	@CVVNo				 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			--Clear variables.
			SET @FirstName = ''
			SET @LastName = ''
			SET @Email = ''
			SET @PhoneNo = ''

			SELECT TOP 1 @FirstName = FirstName, @LastName = LastName, @Email = Email, @PhoneNo = TelephoneNo
					FROM IndividualProfile 
					WHERE	ISNULL(IsDeleted,0) = 0 
							AND ISNULL(IsDummyProfile,0) = 1
							AND CreatedBy = @CreatedBy	
							AND Id = @ProfileId

			--Clear variables.
			SET @ProfileId	=	NULL
			SET @TitleId	=	NULL

			--Get Profile details by user id (student)
			SELECT TOP 1 @ProfileId = Id , @TitleId = TitleId
					FROM IndividualProfile 
					WHERE	ISNULL(IsDeleted,0) = 0 
							AND ISNULL(IsDummyProfile,0) = 1
							AND CreatedBy	=	@UserId	
							AND FirstName	=	@FirstName
							AND LastName	=	@LastName
							AND Email		=	@Email
							AND TelephoneNo	=	@PhoneNo

			-- Add data in TempBulkReservation Table.
			INSERT INTO TempBulkReservation
				(
						[Id]
					,	[TitleId]				
					,   [LastName]				
					,	[FirstName]				
					,	[ProfileId]				
					,	[CountryId]				
					,	[PhoneNo]				
					,	[ArrivalDate]			
					,	[NoOfNight]				
					,	[DepartureDate]			
					,	[NoOfAdult]				
					,	[NoOfChildren]			
					,	[NoOfInfant]			
					,	[NoOfRoom]				
					,	[RoomId]				
					,	[RoomNo]				
					,	[RoomTypeId]			
					,	[RateCodeId]			
					,	[Rate]					
					,	[CurrencyId]			
					,	[RtcId]					
					,	[IsFixedRate]			
					,	[ETA]					
					,	[ReservationTypeId]		
					,	[MarketId]				
					,	[ReservationSourceId]	
					,	[PaymentMethodId]		
					,	[CreditCardNo]			
					,	[CardExpiryDate]		
					,	[CVVNo]	
					,	[CreatedBy]
					,	[CreatedOn]
					,	[IsActive]
				)
				VALUES
				(
						 NEWID()
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
					,	@UserId
					,	GETDATE()
					,	1
				)

			FETCH NEXT FROM cur_reservation 
				INTO	
						@RowNum				
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation



	----DROP Table #tmpProfile
	--IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	--BEGIN
	--	DROP TABLE #tmpProfile
	--END


	--DROP Table #tmpReservation
	IF(OBJECT_ID('tempdb..#tmpReservation') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpReservation
	END

   
END


/************************************************************************************************************************ 
	SP Name : DeleteAllData
	Comment : Create SP DeleteAllData	
***********************************************************************************************************************/ 



/****** Object:  StoredProcedure [dbo].[DeleteAllData]    Script Date: 2/28/2018 3:19:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteAllData]	
AS
BEGIN
	SET NOCOUNT ON;

		-- ReservationRoomMapping	
	DELETE FROM [dbo].[ReservationRoomMapping] 
	
	-- ReservationPreferenceMapping
	DELETE FROM [dbo].[ReservationPreferenceMapping]		
	
	-- CheckInCheckOutDetail
	DELETE FROM  [dbo].[CheckInCheckOutDetail] 

	-- ReservationCharges
	DELETE FROM [dbo].[ReservationCharges] 	
	
	-- ReservationLog
	DELETE FROM [dbo].[ReservationLog] 

	-- ReservationRemarks
	DELETE FROM [dbo].[ReservationRemarks] 	

	-- ReservationPackageMapping
	DELETE FROM [dbo].[ReservationPackageMapping]

	-- ReservationAddOnsMapping
	DELETE FROM  [dbo].[ReservationAddOnsMapping]	

	-- Reservation
	DELETE FROM  [dbo].[Reservation] 
	
	-- ProfilePreferenceMapping	
	DELETE FROM [dbo].[ProfilePreferenceMapping] 
		
	-- IndividualProfile
	--DELETE FROM [dbo].[IndividualProfile] 

	--UsersActivityLog
	DELETE FROM [dbo].[UsersActivityLog] 

	--TempBulkReservationMaster
	DELETE FROM [dbo].[TempBulkReservationMaster] 

	--TempBulkReservation
	DELETE FROM [dbo].[TempBulkReservation] 


    
END


/******** Add new column to TempBulkReservation *************/

ALTER TABLE TempBulkReservation ADD RowNum INT NULL
GO




/************************************************************************************************************************ 
	SP Name : GetTempBulkReservationByDate
	Comment : Changes in SP GetTempBulkReservationByDate	
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[GetTempBulkReservationByDate]    Script Date: 2/28/2018 3:24:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetTempBulkReservationByDate]
	@Date	DATETIME	,
	@UserId INT	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation] TBR
			INNER JOIN [dbo].[IndividualProfile] PR ON TBR.ProfileId = PR.Id
				AND ISNULL(PR.IsDeleted,0) = 0 
				AND PR.[CreatedBy] = @UserId
		WHERE ISNULL(TBR.IsActive,0)  = 1 AND ISNULL(TBR.IsDeleted,0) = 0 
			  AND TBR.[CreatedBy] = @UserId
			  AND CAST(TBR.CreatedOn  AS DATE) = CAST(@Date AS DATE)
		ORDER BY TBR.RowNum
END




/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservation
	Comment : Changes in SP LoadTempBulkReservation	
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservation]    Script Date: 2/28/2018 3:05:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservation] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservation]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50

	SET @TopCount = (SELECT COUNT(*) FROM TempBulkReservationMaster WHERE ISNULL(IsDeleted,0) = 0)

	DECLARE @CreatedBy INT = NULL

	/*************** STEP 1 : Populate Temp Profile & Reservation Table *********/

	---- Create temp profile table.
	--CREATE TABLE #tmpProfile
	--(
	--		[RowNum]			INT					NOT NULL
	--	,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
	--	,   [LastName]			NVARCHAR(500)		NULL	
	--	,	[FirstName]			NVARCHAR(500)		NULL	
	--	,	[TitleId]			UNIQUEIDENTIFIER	NULL	
	--	,	[CountryId]			INT					NULL
	--	,	[PhoneNo]			NVARCHAR(255)		NULL		
	--)

	-- Create temp reservation table.
	CREATE TABLE #tmpReservation
	(
			[RowNum]				INT					NOT NULL
		,	[TitleId]				UNIQUEIDENTIFIER	NULL
		,   [LastName]				NVARCHAR(500)		NULL	
		,	[FirstName]				NVARCHAR(500)		NULL	
		,	[ProfileId]				UNIQUEIDENTIFIER	NOT NULL
		,	[CountryId]				INT					NULL
		,	[PhoneNo]				NVARCHAR(500)		NULL	
		,	[ArrivalDate]			DATETIME			NULL
		,	[NoOfNight]				INT					NULL
		,	[DepartureDate]			DATETIME			NULL
		,	[NoOfAdult]				INT					NULL
		,	[NoOfChildren]			INT					NULL
		,	[NoOfInfant]			INT					NULL	
		,	[NoOfRoom]				INT					NULL
		,	[RoomId]				UNIQUEIDENTIFIER	NULL
		,	[RoomNo]				NVARCHAR(500)		NULL	
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RateCodeId]			UNIQUEIDENTIFIER	NULL
		,	[Rate]					NUMERIC(18,2)		NULL
		,	[CurrencyId]			UNIQUEIDENTIFIER	NULL
		,	[RtcId]					UNIQUEIDENTIFIER	NULL
		,	[IsFixedRate]			BIT					NULL
		,	[ETA]					TIME(7)				NULL
		,	[ReservationTypeId]		UNIQUEIDENTIFIER	NULL
		,	[MarketId]				UNIQUEIDENTIFIER	NULL	
		,	[ReservationSourceId]	UNIQUEIDENTIFIER	NULL
		,	[PaymentMethodId]		UNIQUEIDENTIFIER	NULL
		,	[CreditCardNo]			NVARCHAR(255)		NULL
		,	[CardExpiryDate]		NVARCHAR(255)		NULL	
		,	[CVVNo]					NVARCHAR(255)		NULL
	)

	---- Insert data in temp profile table.
	--INSERT INTO #tmpProfile
	--	(
	--		 [RowNum]
	--		,[ProfileId]
	--		,[LastName]
	--		,[FirstName]	
	--		,[TitleId]	
	--		,[CountryId]
	--		,[PhoneNo]
	--	)
	--SELECT TOP (@TopCount)
	--	ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
	--	PR.Id AS [ProfileId],
	--	PR.[LastName] AS [LastName],
	--	PR.[FirstName] AS [FirstName],
	--	PR.[TitleId],
	--	PR.[CountryId],
	--	PR.[TelephoneNo]
	--FROM	[IndividualProfile] PR 
	--WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
	--		AND ISNULL(PR.IsDummyProfile,0) = 1
	--		AND PR.[CreatedBy] = @UserId 
	--ORDER BY [LastName]


	-- Insert data in temp reservation table.
	INSERT INTO #tmpReservation
		(
				[RowNum]				
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]			
		)
		SELECT TOP (@TopCount)
			ROW_NUMBER() OVER (ORDER BY CreatedOn DESC) AS [RowNum]
			,	[TitleId]				
			,   [LastName]				
			,	[FirstName]				
			,	[ProfileId]				
			,	[CountryId]				
			,	[PhoneNo]				
			,	[ArrivalDate]			
			,	[NoOfNight]				
			,	[DepartureDate]			
			,	[NoOfAdult]				
			,	[NoOfChildren]			
			,	[NoOfInfant]			
			,	[NoOfRoom]				
			,	[RoomId]				
			,	[RoomNo]				
			,	[RoomTypeId]			
			,	[RateCodeId]			
			,	[Rate]					
			,	[CurrencyId]			
			,	[RtcId]					
			,	[IsFixedRate]			
			,	[ETA]					
			,	[ReservationTypeId]		
			,	[MarketId]				
			,	[ReservationSourceId]	
			,	[PaymentMethodId]		
			,	[CreditCardNo]			
			,	[CardExpiryDate]		
			,	[CVVNo]	
	FROM	[TempBulkReservationMaster]
	WHERE	ISNULL(IsDeleted,0) = 0 				
		

	-- Update Profile details in temp reservation table.
	SET @CreatedBy = (SELECT TOP 1 CreatedBy 
							FROM	[TempBulkReservationMaster] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(CreatedBy,0) <> 0)

	--UPDATE TR
	--	SET	TR.ProfileId	=	TP.ProfileId	,
	--		TR.LastName		=	TP.LastName		,
	--		TR.FirstName	=	TP.FirstName	,
	--		TR.TitleId		=	TP.TitleId		,
	--		TR.CountryId	=	TP.CountryId	,
	--		TR.PhoneNo		=	TP.PhoneNo	
	--FROM #tmpProfile TP INNER JOIN #tmpReservation TR ON TP.RowNum = TR.RowNum

	/************** STEP 2 : Populate Temp Bulk Reservation Table **************/

	-- Delete all the data from TempBulkReservation by user id.
	DELETE FROM TempBulkReservation WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL	
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@Email					NVARCHAR(2000)		=	NULL
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL

	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		=	NULL
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)
	DECLARE		@RtcId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@IsFixedRate			BIT					=	0
	
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL
	DECLARE		@MarketId				UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 	=	NULL
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	NULL
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	NULL
	DECLARE		@CVVNo					NVARCHAR(255)		=	NULL


	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  
					[RowNum]				
				,	[TitleId]				
				,   [LastName]				
				,	[FirstName]				
				,	[ProfileId]				
				,	[CountryId]				
				,	[PhoneNo]				
				,	[ArrivalDate]			
				,	[NoOfNight]				
				,	[DepartureDate]			
				,	[NoOfAdult]				
				,	[NoOfChildren]			
				,	[NoOfInfant]			
				,	[NoOfRoom]				
				,	[RoomId]				
				,	[RoomNo]				
				,	[RoomTypeId]			
				,	[RateCodeId]			
				,	[Rate]					
				,	[CurrencyId]			
				,	[RtcId]					
				,	[IsFixedRate]			
				,	[ETA]					
				,	[ReservationTypeId]		
				,	[MarketId]				
				,	[ReservationSourceId]	
				,	[PaymentMethodId]		
				,	[CreditCardNo]			
				,	[CardExpiryDate]		
				,	[CVVNo]		
		FROM #tmpReservation 
		ORDER BY RowNum ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation 
			INTO	
					@RowNum				
				, 	@TitleId			
				, 	@LastName			
				, 	@FirstName			
				, 	@ProfileId			
				, 	@CountryId			
				, 	@PhoneNo			
				, 	@ArrivalDate		
				, 	@NoOfNight			
				, 	@DepartureDate		
				, 	@NoOfAdult			
				, 	@NoOfChildren		
				, 	@NoOfInfant			
				, 	@NoOfRoom			
				, 	@RoomId				
				, 	@RoomNo				
				, 	@RoomTypeId			
				, 	@RateTypeId			
				, 	@Rate				
				, 	@CurrencyId			
				, 	@RtcId				
				, 	@IsFixedRate		
				, 	@ETA				
				, 	@ReservationTypeId	
				, 	@MarketId			
				, 	@ReservationSourceId
				, 	@PaymentMethodId	
				, 	@CreditCardNo		
				, 	@CardExpiryDate		
				, 	@CVVNo				 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			--Clear variables.
			SET @FirstName = ''
			SET @LastName = ''
			SET @Email = ''
			SET @PhoneNo = ''

			SELECT TOP 1 @FirstName = FirstName, @LastName = LastName, @Email = Email, @PhoneNo = TelephoneNo
					FROM IndividualProfile 
					WHERE	ISNULL(IsDeleted,0) = 0 
							AND ISNULL(IsDummyProfile,0) = 1
							AND CreatedBy = @CreatedBy	
							AND Id = @ProfileId

			--Clear variables.
			SET @ProfileId	=	NULL
			SET @TitleId	=	NULL

			--Get Profile details by user id (student)
			SELECT TOP 1 @ProfileId = Id , @TitleId = TitleId
					FROM IndividualProfile 
					WHERE	ISNULL(IsDeleted,0) = 0 
							AND ISNULL(IsDummyProfile,0) = 1
							AND CreatedBy	=	@UserId	
							AND FirstName	=	@FirstName
							AND LastName	=	@LastName
							AND Email		=	@Email
							AND TelephoneNo	=	@PhoneNo

			-- Add data in TempBulkReservation Table.
			INSERT INTO TempBulkReservation
				(
						[Id]
					,	[TitleId]				
					,   [LastName]				
					,	[FirstName]				
					,	[ProfileId]				
					,	[CountryId]				
					,	[PhoneNo]				
					,	[ArrivalDate]			
					,	[NoOfNight]				
					,	[DepartureDate]			
					,	[NoOfAdult]				
					,	[NoOfChildren]			
					,	[NoOfInfant]			
					,	[NoOfRoom]				
					,	[RoomId]				
					,	[RoomNo]				
					,	[RoomTypeId]			
					,	[RateCodeId]			
					,	[Rate]					
					,	[CurrencyId]			
					,	[RtcId]					
					,	[IsFixedRate]			
					,	[ETA]					
					,	[ReservationTypeId]		
					,	[MarketId]				
					,	[ReservationSourceId]	
					,	[PaymentMethodId]		
					,	[CreditCardNo]			
					,	[CardExpiryDate]		
					,	[CVVNo]	
					,	[CreatedBy]
					,	[CreatedOn]
					,	[IsActive]
					,	[RowNum]
				)
				VALUES
				(
						 NEWID()
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
					,	@UserId
					,	GETDATE()
					,	1
					,	@RowNum
				)

			FETCH NEXT FROM cur_reservation 
				INTO	
						@RowNum				
					, 	@TitleId			
					, 	@LastName			
					, 	@FirstName			
					, 	@ProfileId			
					, 	@CountryId			
					, 	@PhoneNo			
					, 	@ArrivalDate		
					, 	@NoOfNight			
					, 	@DepartureDate		
					, 	@NoOfAdult			
					, 	@NoOfChildren		
					, 	@NoOfInfant			
					, 	@NoOfRoom			
					, 	@RoomId				
					, 	@RoomNo				
					, 	@RoomTypeId			
					, 	@RateTypeId			
					, 	@Rate				
					, 	@CurrencyId			
					, 	@RtcId				
					, 	@IsFixedRate		
					, 	@ETA				
					, 	@ReservationTypeId	
					, 	@MarketId			
					, 	@ReservationSourceId
					, 	@PaymentMethodId	
					, 	@CreditCardNo		
					, 	@CardExpiryDate		
					, 	@CVVNo	
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation



	----DROP Table #tmpProfile
	--IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	--BEGIN
	--	DROP TABLE #tmpProfile
	--END


	--DROP Table #tmpReservation
	IF(OBJECT_ID('tempdb..#tmpReservation') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpReservation
	END

   
END



/************************************************************************************************************************ 
	SP Name : GetTempBulkReservation
	Comment : Changes in SP GetTempBulkReservation		
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[GetTempBulkReservation]    Script Date: 2/28/2018 3:29:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetTempBulkReservation]
	@UserId INT	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[TempBulkReservation] TBR
			INNER JOIN [dbo].[IndividualProfile] PR ON TBR.ProfileId = PR.Id
				AND ISNULL(PR.IsDeleted,0) = 0 
				AND PR.[CreatedBy] = @UserId
		WHERE ISNULL(TBR.IsActive,0)  = 1 AND ISNULL(TBR.IsDeleted,0) = 0 
			  AND TBR.[CreatedBy] = @UserId
		ORDER BY TBR.RowNum
END



/************************************************************************************************************************ 
	SP Name : GetUsersReservationByDate
	Comment : Changes in SP GetUsersReservationByDate		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetUsersReservationByDate]    Script Date: 2/28/2018 3:38:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetUsersReservationByDate]
	@Date		DATETIME	,
	@UserId		INT
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
				AND CAST([CreatedOn] AS DATE) =  CAST(@Date AS DATE)
			ORDER BY CreatedOn
		
END



/************************************************************************************************************************ 
	SP Name : LoadTempBulkReservationMaster
	Comment : Changes in SP LoadTempBulkReservationMaster		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[LoadTempBulkReservationMaster]    Script Date: 2/28/2018 3:46:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [LoadTempBulkReservationMaster] @UserId = 1
***/

ALTER PROCEDURE [dbo].[LoadTempBulkReservationMaster]
	@UserId INT
AS
BEGIN	
	SET NOCOUNT ON;

	
	-- TOP Reservation Flag
	DECLARE @TopCount INT  = 50


	/************************ STEP 1 : Populate Temp Profile & Room Table ************************/

	-- Create temp profile table.
	CREATE TABLE #tmpProfile
	(
			[RowNum]			INT					NOT NULL
		,	[ProfileId]			UNIQUEIDENTIFIER	NOT NULL				
		,   [LastName]			NVARCHAR(500)		NULL	
		,	[FirstName]			NVARCHAR(500)		NULL	
		,	[TitleId]			UNIQUEIDENTIFIER	NULL	
		,	[CountryId]			INT					NULL
		,	[PhoneNo]			NVARCHAR(255)		NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NULL
		,	[RoomId]			UNIQUEIDENTIFIER	NULL
		,   [RoomNo]			NVARCHAR(255)		NULL
	)


	-- Create temp room table.
	CREATE TABLE #tmpRoom
	(
			[RowNum]			INT					NOT NULL		
		,	[RoomId]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]		UNIQUEIDENTIFIER	NOT NULL	
		,   [RoomNo]			NVARCHAR(255)		NULL
	)

	-- Insert data in temp profile table.
	INSERT INTO #tmpProfile
		(
			 [RowNum]
			,[ProfileId]
			,[LastName]
			,[FirstName]	
			,[TitleId]	
			,[CountryId]
			,[PhoneNo]
		)
	SELECT TOP (@TopCount)
		ROW_NUMBER() OVER (ORDER BY PR.LastName ASC) AS [RowNum],
		PR.Id AS [ProfileId],
		PR.[LastName] AS [LastName],
		PR.[FirstName] AS [FirstName],
		PR.[TitleId],
		PR.[CountryId],
		PR.[TelephoneNo]
	FROM	[IndividualProfile] PR 
	WHERE	ISNULL(PR.IsDeleted,0) = 0 AND ISNULL(PR.IsActive,0) = 1
			AND ISNULL(PR.IsDummyProfile,0) = 1
			AND PR.[CreatedBy] = @UserId 
	ORDER BY [LastName]

	-- Insert data in temp room table.
	INSERT INTO #tmpRoom
		(
			 [RowNum]
			,[RoomId]
			,[RoomTypeId]
			,[RoomNo]		
		)
	SELECT 
		ROW_NUMBER() OVER (ORDER BY A.RoomNo ASC) AS [RowNum],
		A.Id AS [RoomId],
		A.[RoomTypeId],
		A.[RoomNo]
	FROM 
	(
		SELECT DISTINCT TOP (@TopCount)
			 R.Id,
			 R.RoomTypeId,
			 R.RoomNo	 
		FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
			INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
				AND ISNULL(ROT.IsDeleted,0) = 0 
			INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
				AND ISNULL(R.IsDeleted,0) = 0 
			INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
				AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE ISNULL(RTRTM.IsDeleted,0) = 0	
		ORDER BY R.RoomNo ASC
	) AS A

	-- Update Room Details in temp profile table.
	UPDATE TP
		SET	TP.RoomId		=	TR.RoomId,
			TP.RoomTypeId	=	TR.RoomTypeId,
			TP.RoomNo		=	TR.RoomNo
	FROM #tmpProfile TP INNER JOIN #tmpRoom TR ON TP.RowNum = TR.RowNum

	/************************ STEP 2 : Populate Temp Bulk Reservation Master Table ************************/

	-- Delete all the date from TempBulkReservationMaster by user id.
	DELETE FROM TempBulkReservationMaster WHERE ISNULL(CreatedBy,0) = @UserId


	DECLARE		@RowNum					INT					
	DECLARE		@ProfileId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@LastName				NVARCHAR(500)		=	NULL
	DECLARE		@FirstName				NVARCHAR(500)		=	NULL
	DECLARE		@TitleId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@CountryId				INT					=	NULL
	DECLARE		@PhoneNo				NVARCHAR(255)		=	NULL
	DECLARE		@RoomTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomId					UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RoomNo					NVARCHAR(255)		=	NULL

	DECLARE		@ArrivalDate			DATETIME			=	GETDATE()
	DECLARE		@DepartureDate			DATETIME			=	DATEADD(DAY, 1, GETDATE())
	DECLARE		@ETA					TIME(7)				=	CAST('10:00 AM' AS TIME(7))
	DECLARE		@WeekDayName			NVARCHAR(50)		=	DATENAME(WEEKDAY,@ArrivalDate) 
	DECLARE		@NoOfNight				INT					=	1
	DECLARE		@NoOfAdult				INT					=	1
	DECLARE		@NoOfChildren			INT					=	2
	DECLARE		@NoOfInfant				INT					=	1
	DECLARE		@NoOfRoom				INT					=	1
	DECLARE		@IsWeekEndPrice			BIT					=	0
	DECLARE		@RateTypeId				UNIQUEIDENTIFIER	=	NULL
	DECLARE		@RateTypeCode			NVARCHAR(500)		=	NULL
	DECLARE		@Rate					NUMERIC(18,2)		
	DECLARE		@CurrencyId				UNIQUEIDENTIFIER	=	CAST('F15C97B6-4FC0-4AB7-A32D-C95261B9F945' AS UNIQUEIDENTIFIER)

	DECLARE		@MarketId				UNIQUEIDENTIFIER 
	DECLARE		@ReservationSourceId	UNIQUEIDENTIFIER 
	DECLARE		@ReservationTypeId		UNIQUEIDENTIFIER 
	DECLARE		@PaymentMethodId		UNIQUEIDENTIFIER 
	DECLARE		@CreditCardNo			NVARCHAR(255)		=	'4242'
	DECLARE		@CardExpiryDate			NVARCHAR(255)		=	'07/28'
	DECLARE		@CVVNo					NVARCHAR(255)		=	'745'



	-- GET TOP 1 Market.
	SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
							WHERE	ISNULL(IsDeleted,0) = 0 
									AND ISNULL(IsActive,0) = 1
							ORDER BY [Name])

	-- GET TOP 1 Reservation Type.
	SET @ReservationTypeId = (SELECT TOP 1 Id FROM [ReservationType] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Guarantee Type'
									ORDER BY [Name])

	-- GET TOP 1 Reservation Source.
	SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
									ORDER BY [Name])

	-- GET Payment Method 'Visa'
	SET @PaymentMethodId = (SELECT TOP 1 Id FROM [PaymentMethod] 
									WHERE	ISNULL(IsDeleted,0) = 0 
											AND ISNULL(IsActive,0) = 1
											AND [Name] = 'Visa'
									ORDER BY [Name])

	-- Check Week End.
	IF ISNULL(@WeekDayName,'') <> ''
	BEGIN
		IF (@WeekDayName = 'Friday' OR @WeekDayName = 'Saturday')
		BEGIN
			SET @IsWeekEndPrice = 1
		END
	END

	-- Loop through profile temp table and create temp bulk reservation.
	DECLARE cur_profile CURSOR STATIC FOR
		SELECT  RowNum, ProfileId, LastName, FirstName, TitleId, CountryId, PhoneNo, 
				RoomTypeId, RoomId, RoomNo 
			FROM #tmpProfile 
			ORDER BY RowNum ASC

	OPEN cur_profile
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		WHILE @@FETCH_STATUS = 0
		BEGIN
		
			--PRINT 'Row Num : ' + CAST(@RowNum AS VARCHAR(10))

			-- Get Top 1 Rate Type and Rate Details.
			SELECT	TOP 1 @RateTypeId = RTRTM.RateTypeId, @RateTypeCode = RAT.RateTypeCode, @Rate = RTRTM.Amount
			FROM	[dbo].[RoomTypeRateTypeMapping] RTRTM
					INNER JOIN [dbo].[RoomType] ROT ON RTRTM.RoomTypeId = ROT.Id
						AND ISNULL(ROT.IsDeleted,0) = 0 
					INNER JOIN [dbo].[Room] R ON R.RoomTypeId = ROT.Id 
						AND ISNULL(R.IsDeleted,0) = 0 
					INNER JOIN [dbo].[RateType] RAT ON RTRTM.RateTypeId = RAT.Id
						AND ISNULL(RAT.IsDeleted,0) = 0 
			WHERE	ISNULL(RTRTM.IsDeleted,0) = 0	
					AND RTRTM.RoomTypeId = @RoomTypeId		
					
			
			IF (@RateTypeCode  = 'BAR' OR @RateTypeCode  = 'BARBB' OR @RateTypeCode  = 'BARDBB')
			BEGIN				
				SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
										WHERE	ISNULL(IsDeleted,0) = 0 
												AND ISNULL(IsActive,0) = 1
												AND [Description] = 'Leisure'
											ORDER BY [Name])

				SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
												WHERE	ISNULL(IsDeleted,0) = 0 
														AND ISNULL(IsActive,0) = 1
														AND [Description] = 'Leisure'
												ORDER BY [Name])
			END

			IF (@RateTypeCode  = 'CORPBB' OR @RateTypeCode  = 'CORPDBB' OR @RateTypeCode  = 'CORPRO')
			BEGIN
				SET @MarketId = (SELECT TOP 1 Id FROM [Market] 
										WHERE	ISNULL(IsDeleted,0) = 0 
												AND ISNULL(IsActive,0) = 1
												AND [Description] = 'Corporate'
											ORDER BY [Name])
											
				-- GET TOP 1 Reservation Source.
				SET @ReservationSourceId = (SELECT TOP 1 Id FROM [ReservationSource] 
												WHERE	ISNULL(IsDeleted,0) = 0 
														AND ISNULL(IsActive,0) = 1
												ORDER BY [Name])
			END


			-- Add data in TempBulkReservationMaster Table.
			INSERT INTO TempBulkReservationMaster
				(
					 [Id]
					,[TitleId]
					,[LastName]
					,[FirstName]
					,[ProfileId]
					,[CountryId]
					,[PhoneNo]
					,[ArrivalDate]
					,[NoOfNight]
					,[DepartureDate]
					,[NoOfAdult]	
					,[NoOfChildren]
					,[NoOfInfant]			
					,[NoOfRoom]
					,[RoomId]
					,[RoomNo]
					,[RoomTypeId]
					,[RateCodeId]
					,[Rate]
					,[CurrencyId]
					,[ETA]
					,[ReservationTypeId]
					,[MarketId]
					,[ReservationSourceId]
					,[PaymentMethodId]
					,[CreditCardNo]
					,[CardExpiryDate]
					,[CVVNo]
					,[CreatedBy]
					,[CreatedOn]
					,[IsActive]
				)
				VALUES
				(
					 NEWID()
					,@TitleId
					,@LastName
					,@FirstName
					,@ProfileId
					,@CountryId
					,@PhoneNo
					,@ArrivalDate
					,@NoOfNight
					,@DepartureDate
					,@NoOfAdult
					,@NoOfChildren
					,@NoOfInfant
					,@NoOfRoom
					,@RoomId
					,@RoomNo
					,@RoomTypeId
					,@RateTypeId
					,@Rate
					,@CurrencyId
					,@ETA
					,@ReservationTypeId
					,@MarketId
					,@ReservationSourceId
					,@PaymentMethodId
					,@CreditCardNo
					,@CardExpiryDate
					,@CVVNo
					,@UserId
					,GETDATE()
					,1
				)

			FETCH NEXT FROM cur_profile 
			INTO	@RowNum, @ProfileId, @LastName, @FirstName, @TitleId, @CountryId, @PhoneNo,
					@RoomTypeId, @RoomId, @RoomNo 
		END
	END
	CLOSE cur_profile
	DEALLOCATE cur_profile



	--DROP Table #tmpProfile
	IF(OBJECT_ID('tempdb..#tmpProfile') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpProfile
	END


	--DROP Table #tmpRoom
	IF(OBJECT_ID('tempdb..#tmpRoom') IS NOT NULL)
	BEGIN
		DROP TABLE #tmpRoom
	END
END

/****************************************************************************************************************************/

Name : Nilesh
Date : 06-MAR-2018

/****************************************************************************************************************************/

/************************************************************************************************************************ 
	SP Name : SearchPendingCheckInReservation
	Comment : Create SP SearchPendingCheckInReservation		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchPendingCheckInReservation]    Script Date: 3/6/2018 11:27:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPendingCheckInReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=	1, 
		@RoomNumber						=	'',
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	2,
		@IsAdminUser					=	1
*/

CREATE PROCEDURE [dbo].[SearchPendingCheckInReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND P.CreatedBy = @CreatedBy
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0		
								AND ISNULL(R.IsCheckOut,0) = 0							
								AND ISNULL(R.IsCheckIn,0) = 0	
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
						AND P.CreatedBy = @CreatedBy
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0	
					AND ISNULL(R.IsCheckOut,0) = 0	
					AND ISNULL(R.IsCheckIn,0) = 0	
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 
					--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND (ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0))

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy = @CreatedBy
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END



/************************************************************************************************************************ 
	SP Name : GetReservationById
	Comment : Change in SP GetReservationById		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetReservationById]    Script Date: 3/6/2018 12:04:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationById]
	@Id			UNIQUEIDENTIFIER	=	NULL	,
	@UserId		INT					=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND (ISNULL(@UserId,0) = 0 OR [CreatedBy] = @UserId)
		
END



/************************************************************************************************************************ 
	SP Name : GetIndividualProfileById
	Comment : Change in SP GetIndividualProfileById		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetIndividualProfileById]    Script Date: 3/6/2018 12:17:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetIndividualProfileById]
	@Id			UNIQUEIDENTIFIER	=	NULL	,
	@UserId		INT					=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
				AND (ISNULL(@UserId,0) = 0 OR [CreatedBy] = @UserId)
		
END


/****************************************************************************************************************************

Name : Nilesh
Date : 07-MAR-2018

/********************************************************************************************************************************/



/************************************************************************************************************************ 
	SP Name : SearchAdvancePreference
	Comment : Change in SP SearchAdvancePreference		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchAdvancePreference]    Script Date: 3/7/2018 1:03:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvancePreference]
			@PreferenceGroupId	=	NULL ,
			@Preference			=	'' 
*/
ALTER PROCEDURE [dbo].[SearchAdvancePreference]
	@PreferenceGroupId		UNIQUEIDENTIFIER	=	NULL,
	@Preference				NVARCHAR(500)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  P.[Description] ASC

				) AS RowNum,
				P.[Id], 
				PG.[Name] AS PreferenceGroupName,
				PG.[Description] AS PreferenceGroupDescription,
				P.[Description] AS Preference,
				P.[Code] AS PreferenceCode,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[Preferences] P
					INNER JOIN PreferenceGroup PG  ON P.PreferenceGroupId = PG.Id AND ISNULL(PG.IsDeleted,0) = 0
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@Preference,'') = '' OR P.[Description] LIKE '%'+ @Preference +'%')  
						AND (@PreferenceGroupId IS NULL OR P.[PreferenceGroupId]  = @PreferenceGroupId)
						


END


/****************************************************************************************************************************
Name : Nilesh
Date : 10-MAR-2018
/***************************************************************************************************************************/

/************ Add IsDummyReservation column in Reservation table ********************/

ALTER TABLE Reservation ADD IsDummyReservation BIT NULL
GO

/************************************************************************************************************************ 
	SP Name : AddReservation
	Comment : Change in SP AddReservation		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 3/10/2018 11:41:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfInfant				INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,	
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountApprovedBy		UNIQUEIDENTIFIER	=	NULL	,
	@DiscountReason			NVARCHAR(MAX)		=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,	
	@FolioNumber			BIGINT				=	NULL	,
	@IsDummyReservation		BIT					=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
		   ,[NoOfInfant]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]           
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountApprovedBy]
		   ,[DiscountReason]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]		   
		   ,[FolioNumber]
		   ,[IsDummyReservation]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
				, @NoOfInfant
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId							
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountApprovedBy
				, @DiscountReason
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice				
				, @FolioNumber
				, @IsDummyReservation
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END


/************************************************************************************************************************ 
	SP Name : DeleteReservationByUserId
	Comment : Change in SP DeleteReservationByUserId		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeleteReservationByUserId]    Script Date: 3/10/2018 11:44:25 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[DeleteReservationByUserId]
	@UserId					INT					,	
	@UpdatedBy				INT					,
	@IsDummyReservation		BIT		=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER 
	
	-- Get reservations by users
	DECLARE cur_reservation CURSOR STATIC FOR
		SELECT  Id
			FROM	[dbo].[Reservation]
			WHERE	ISNULL(IsDeleted,0) = 0 					
					AND [CreatedBy] = @UserId
					AND ISNULL(IsDummyReservation,0) = ISNULL(@IsDummyReservation,0)
			ORDER BY CreatedOn ASC

	OPEN cur_reservation
	IF @@CURSOR_ROWS > 0
	BEGIN
		FETCH NEXT FROM cur_reservation INTO @ReservationId
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF @ReservationId IS NOT NULL
			BEGIN
				--Delete reservation.
				EXEC [dbo].[DeleteReservation] 
						@Id			=	@ReservationId	,
						@UpdatedBy	=	@UpdatedBy		,
						@UserId		=	@UserId
			END
				
			FETCH NEXT FROM cur_reservation INTO @ReservationId
		END
	END
	CLOSE cur_reservation
	DEALLOCATE cur_reservation

	SELECT @UserId AS Id    
END




/************************************************************************************************************************ 
	SP Name : GetUsersReservationByDate
	Comment : Change in SP GetUsersReservationByDate		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetUsersReservationByDate]    Script Date: 3/10/2018 12:20:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetUsersReservationByDate]
	@Date					DATETIME				,
	@UserId					INT						,
	@IsDummyReservation		BIT			=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND [CreatedBy] = @UserId
				AND CAST([CreatedOn] AS DATE) =  CAST(@Date AS DATE)
				AND ISNULL(IsDummyReservation,0) = ISNULL(@IsDummyReservation,0)
			ORDER BY CreatedOn
		
END


/************************************************************************************************************************ 
	SP Name : SearchBreakfastReport
	Comment : Create SP SearchBreakfastReport		
***********************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchBreakfastReport]    Script Date: 3/10/2018 3:00:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchBreakfastReport] 
		@LastName				=	NULL	,
		@FirstName				=	NULL	,
		@ConfirmationNo			=	NULL	,
		@ArrivalDate			=	NULL	,
		@DepartureDate			=	NULL	,
		@RoomNumber				=	NULL	,
		@RoomTypeId				=	NULL	,
		@RateTypeId				=	NULL	,		
		@PageNum				=	1		,
		@PageSize				=	10		,
		@SortColumn				=	NULL	,
		@SortDirection			=	NULL	,
		@UserId					=	2
		
*/
CREATE PROCEDURE [dbo].[SearchBreakfastReport]		
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,	
	@ConfirmationNo			NVARCHAR(500)		=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@RoomNumber				NVARCHAR(255)		=	NULL	,	
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,	
	@RateTypeId				UNIQUEIDENTIFIER	=	NULL	,	
	@PageNum				INT					=	1		,
	@PageSize				INT					=	10		,
	@SortColumn				NVARCHAR(255)		=	NULL	,
	@SortDirection			NVARCHAR(20)		=	NULL	,
	@UserId					INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(500)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Remarks]					NVARCHAR(MAX)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL		
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Reservation] R
							 INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
							 LEFT JOIN [dbo].[ReservationPackageMapping] RPM ON RPM.ReservationId = R.Id
								AND ISNULL(RPM.IsDeleted,0) = 0
							 LEFT JOIN [dbo].[Package] PCK ON PCK.Id = RPM.PackageId
								AND ISNULL(PCK.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.ConfirmationNumber = @ConfirmationNo)								
								AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)									
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
								AND (@DepartureDate IS NULL OR CAST(R.[DepartureDate] AS DATE) = CAST(@DepartureDate AS DATE))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
								AND PCK.[Name] LIKE '%Breakfast%'
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]		
			,[ProfileId]	
			,[FirstName]		
			,[LastName]				
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNumbers]
			,[RoomTypeCode]
			,[RateTypeCode]
			,[Remarks]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.ProfileId	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]										
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,'' AS [RoomNumbers]
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]	
				,'' AS [Remarks]
				,ISNULL(R.[IsReservationCancel],0) AS [IsReservationCancel]			
				,ISNULL(R.[IsCheckIn],0) AS [IsCheckIn]
				,ISNULL(R.[IsCheckOut],0) AS [IsCheckOut]
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
						AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
					LEFT JOIN [dbo].[ReservationPackageMapping] RPM ON RPM.ReservationId = R.Id
						AND ISNULL(RPM.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Package] PCK ON PCK.Id = RPM.PackageId
						AND ISNULL(PCK.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.ConfirmationNumber = @ConfirmationNo)								
					AND (@RateTypeId IS NULL OR R.[RateCodeId] = @RateTypeId)																
					AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)									
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (@DepartureDate IS NULL OR CAST(R.[DepartureDate] AS DATE) = CAST(@DepartureDate AS DATE))
					AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
					AND PCK.[Name] LIKE '%Breakfast%'
																			

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Remarks by comma separated.
	UPDATE temp
		SET Remarks = (STUFF(( SELECT ', '+ CAST(RR.Remarks AS varchar(MAX))					
				FROM ReservationRemarks RR												
				WHERE	ISNULL(RR.IsDeleted,0) = 0
						AND RR.ReservationId = temp.Id
						AND RR.CreatedBy  = @UserId
						AND ISNULL(RR.Remarks,'') <> ''
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	

	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @UserId
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]		
			,temp.[ProfileId]	
			,temp.[FirstName]		
			,temp.[LastName]				
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]			
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS [RoomNumbers]
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,ISNULL(temp.[Remarks],'') AS [Remarks]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE	(ISNULL(@RoomNumber,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNumber +'%')
			AND temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/************************************************************************************************************************ 
	SP Name : GetReservationRoomMapping
	Comment : Change in SP GetReservationRoomMapping		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetReservationRoomMapping]    Script Date: 3/10/2018 5:34:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationRoomMapping] 		
		@ReservationId	=	NULL	,
		@RoomId			=	NULL	,
		@UserId			=	1
*/
ALTER PROCEDURE [dbo].[GetReservationRoomMapping]		
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@RoomId			UNIQUEIDENTIFIER	=	NULL	,
	@UserId			INT					=	NULL		
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT *,R.RoomNo AS RoomNo,R.[Description] AS RoomDescription,R.StatusId
			,ISNULL(RS.[Name],'') AS RoomStatusName,ISNULL(RS.[Code],'') AS RoomStatusCode
			,ISNULL(RS.[ColorCode],'') AS RoomStatusColorCode
	 FROM [dbo].[ReservationRoomMapping] RRM
			INNER JOIN [dbo].[Room] R ON R.Id = RRM.RoomId 
				AND ISNULL(R.IsDeleted,0) = 0
			LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = R.StatusId
				AND ISNULL(RS.IsDeleted,0) = 0
		WHERE	ISNULL(RRM.IsDeleted,0) = 0
				AND (ISNULL(@UserId,0) = 0 OR RRM.[CreatedBy] = @UserId)
				AND (@ReservationId IS NULL OR RRM.ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RRM.RoomId = @RoomId)
		ORDER BY RRM.CreatedOn

END


/************************************************************************************************************************ 
	SP Name : GetReservationCharges
	Comment : Change in SP GetReservationCharges		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 3/10/2018 5:35:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationCharges]
		@ReservationId			=	'3836abff-095a-43f8-98ea-b5c5db75bcc9'	,
		@AdditionalChargeId		=	NULL									,
		@UserId					=	1
*/

ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@UserId					INT					=	NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeSource = 'AC' -- Additional  Charge				
				AND (ISNULL(@UserId,0) = 0 OR RC.[CreatedBy] = @UserId)

	UNION

	
    SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeSource = 'PKM' -- Package
				AND (ISNULL(@UserId,0) = 0 OR RC.[CreatedBy] = @UserId)

	UNION

	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		RC.Code,RC.Description, 3 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
				AND RC.AdditionalChargeSource <> 'PKM' -- Package
				AND (ISNULL(@UserId,0) = 0 OR RC.[CreatedBy] = @UserId)
	UNION
	SELECT RC.Id,RC.ReservationId,RC.AdditionalChargeId,ISNULL(RC.AdditionalChargeSource,'') AS AdditionalChargeSource ,
		RC.TransactionDate,RC.Amount,RC.Qty,RC.Supplement,RC.Reference,
		RC.IsActive,RC.IsDeleted,RC.CreatedBy,RC.CreatedOn,RC.UpdatedBy,RC.UpdatedOn,
		(CASE WHEN CHARINDEX('Cash',RC.Description) > 0 THEN RC.Code ELSE CONCAT('XXXXXXXXXXXX',RIGHT(RE.CreditCardNo, 4)) END )AS Code,
		RC.Description,4 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
				INNER JOIN Reservation RE ON RC.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0					
					AND (ISNULL(@UserId,0) = 0 OR RE.[CreatedBy] = @UserId)
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '9004') -- Check Out (Payment)
				AND (ISNULL(@UserId,0) = 0 OR RC.[CreatedBy] = @UserId)


	ORDER BY SortOrder
END


/**********************************************************************************************************************

Name : Nilesh
Date : 17-MAR-2018

/**********************************************************************************************************************/

/************************************************************************************************************************ 
	SP Name : SearchBreakfastReport
	Comment : Change in SP SearchBreakfastReport		
***********************************************************************************************************************/ 
/****** Object:  StoredProcedure [dbo].[SearchBreakfastReport]    Script Date: 3/17/2018 11:03:38 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchBreakfastReport] 		
		@Date				=	NULL	,			
		@PageNum			=	1		,
		@PageSize			=	10		,
		@SortColumn			=	NULL	,
		@SortDirection		=	NULL	,
		@UserId				=	2
		
*/
ALTER PROCEDURE [dbo].[SearchBreakfastReport]		
	@Date				DATETIME			=	NULL	,		
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	,
	@UserId				INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NOT NULL		
		,   [GuestName]					NVARCHAR(MAX)		NULL				
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL		
		,   [CompanyName]				NVARCHAR(MAX)		NULL
		,	[VipId]						UNIQUEIDENTIFIER	NULL		
		,   [VipName]					NVARCHAR(MAX)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(500)		NULL	
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Remarks]					NVARCHAR(MAX)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL		
		,	[IsBreakFastPackageAdded]	BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Reservation] R
							 INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
							 LEFT JOIN [dbo].[Vip] V ON V.Id = R.VipId
								AND ISNULL(V.IsDeleted,0) = 0 
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@Date IS NULL OR (CAST(@Date AS DATE) BETWEEN CAST(R.[ArrivalDate] AS DATE) AND CAST(R.[DepartureDate] AS DATE)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
								AND ISNULL(R.IsCheckIn,0) = 1
								AND ISNULL(R.IsCheckOut,0) = 0 
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]		
			,[ProfileId]	
			,[GuestName]
			,[CompanyId]
			,[CompanyName]
			,[VipId]
			,[VipName]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNumbers]
			,[RateTypeCode]
			,[Remarks]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[IsBreakFastPackageAdded]
			,[CreatedOn]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'GuestName' and @SortDirection = 'asc'
						THEN LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) END ASC,
					CASE WHEN @SortColumn = 'GuestName' and @SortDirection = 'desc'
						THEN LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'VipName' and @SortDirection = 'asc'
						THEN V.[Description] END ASC,
					CASE WHEN @SortColumn = 'VipName' and @SortDirection = 'desc'
						THEN V.[Description] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],''))))  END ASC

			) AS RowNum
			,R.[Id]		
			,R.ProfileId	
			,LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) AS [GuestName]
			,R.[CompanyId]
			,'' AS CompanyName
			,R.[VipId]
			,ISNULL(V.[Description],'') AS [VipName]
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,'' AS [RoomNumbers]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]	
			,'' AS [Remarks]
			,ISNULL(R.[IsReservationCancel],0) AS [IsReservationCancel]			
			,ISNULL(R.[IsCheckIn],0) AS [IsCheckIn]
			,ISNULL(R.[IsCheckOut],0) AS [IsCheckOut]
			,(CASE WHEN (SELECT COUNT(*) 
							FROM ReservationPackageMapping RPM INNER JOIN Package P ON
							P.Id = RPM.PackageId AND ISNULL(P.IsDeleted,0) = 0
							WHERE ISNULL(RPM.IsDeleted,0) = 0 AND RPM.ReservationId = R.Id
							AND P.[Name] LIKE '%Breakfast%') > 0 
					THEN 1 ELSE 0 END) AS [IsBreakFastPackageAdded]
			,R.[CreatedOn]
		FROM [dbo].[Reservation] R
				INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
					AND ISNULL(P.IsDeleted,0) = 0 
					AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
				LEFT JOIN [dbo].[Vip] V ON V.Id = R.VipId
					AND ISNULL(V.IsDeleted,0) = 0 
				LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@Date IS NULL OR (CAST(@Date AS DATE) BETWEEN CAST(R.[ArrivalDate] AS DATE) AND CAST(R.[DepartureDate] AS DATE)))
				AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
				AND ISNULL(R.IsCheckIn,0) = 1 
				AND ISNULL(R.IsCheckOut,0) = 0 
																			

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Remarks by comma separated.
	UPDATE temp
		SET Remarks = (STUFF(( SELECT ', '+ CAST(RR.Remarks AS varchar(MAX))					
				FROM ReservationRemarks RR												
				WHERE	ISNULL(RR.IsDeleted,0) = 0
						AND RR.ReservationId = temp.Id
						AND RR.CreatedBy  = @UserId
						AND ISNULL(RR.Remarks,'') <> ''
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	

	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @UserId
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]		
			,temp.[ProfileId]	
			,temp.[GuestName]		
			,temp.[CompanyId]				
			,temp.[CompanyName]
			,temp.[VipId]			
			,temp.[VipName]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]			
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS [RoomNumbers]			
			,temp.[RateTypeCode]
			,ISNULL(temp.[Remarks],'') AS [Remarks]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[IsBreakFastPackageAdded]
			,temp.[CreatedOn]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/************************************************************************************************************************ 
	SP Name : GetBreakfastReport
	Comment : Create SP GetBreakfastReport		
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[GetBreakfastReport]    Script Date: 3/17/2018 11:03:38 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetBreakfastReport] 		
		@Date				=	NULL	,					
		@UserId				=	2
		
*/
CREATE PROCEDURE [dbo].[GetBreakfastReport]		
	@Date				DATETIME			=	NULL	,			
	@UserId				INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NOT NULL		
		,   [GuestName]					NVARCHAR(MAX)		NULL				
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL		
		,   [CompanyName]				NVARCHAR(MAX)		NULL
		,	[VipId]						UNIQUEIDENTIFIER	NULL		
		,   [VipName]					NVARCHAR(MAX)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(500)		NULL	
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Remarks]					NVARCHAR(MAX)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL		
		,	[IsBreakFastPackageAdded]	BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	

		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]		
			,[ProfileId]	
			,[GuestName]
			,[CompanyId]
			,[CompanyName]
			,[VipId]
			,[VipName]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNumbers]
			,[RateTypeCode]
			,[Remarks]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[IsBreakFastPackageAdded]
			,[CreatedOn]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],''))))  ASC

			) AS RowNum
			,R.[Id]		
			,R.ProfileId	
			,LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) AS [GuestName]
			,R.[CompanyId]
			,'' AS CompanyName
			,R.[VipId]
			,ISNULL(V.[Description],'') AS [VipName]
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,'' AS [RoomNumbers]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]	
			,'' AS [Remarks]
			,ISNULL(R.[IsReservationCancel],0) AS [IsReservationCancel]			
			,ISNULL(R.[IsCheckIn],0) AS [IsCheckIn]
			,ISNULL(R.[IsCheckOut],0) AS [IsCheckOut]
			,(CASE WHEN (SELECT COUNT(*) 
							FROM ReservationPackageMapping RPM INNER JOIN Package P ON
							P.Id = RPM.PackageId AND ISNULL(P.IsDeleted,0) = 0
							WHERE ISNULL(RPM.IsDeleted,0) = 0 AND RPM.ReservationId = R.Id
							AND P.[Name] LIKE '%Breakfast%') > 0 
					THEN 1 ELSE 0 END) AS [IsBreakFastPackageAdded]
			,R.[CreatedOn]
		FROM [dbo].[Reservation] R
				INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
					AND ISNULL(P.IsDeleted,0) = 0 
					AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
				LEFT JOIN [dbo].[Vip] V ON V.Id = R.VipId
					AND ISNULL(V.IsDeleted,0) = 0 
				LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@Date IS NULL OR (CAST(@Date AS DATE) BETWEEN CAST(R.[ArrivalDate] AS DATE) AND CAST(R.[DepartureDate] AS DATE)))
				AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
				AND ISNULL(R.IsCheckIn,0) = 1 
				AND ISNULL(R.IsCheckOut,0) = 0 
																			

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Remarks by comma separated.
	UPDATE temp
		SET Remarks = (STUFF(( SELECT ', '+ CAST(RR.Remarks AS varchar(MAX))					
				FROM ReservationRemarks RR												
				WHERE	ISNULL(RR.IsDeleted,0) = 0
						AND RR.ReservationId = temp.Id
						AND RR.CreatedBy  = @UserId
						AND ISNULL(RR.Remarks,'') <> ''
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	

	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @UserId
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	SELECT 
			temp.[Id]		
			,temp.[ProfileId]	
			,temp.[GuestName]		
			,temp.[CompanyId]				
			,temp.[CompanyName]
			,temp.[VipId]			
			,temp.[VipName]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]			
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS [RoomNumbers]			
			,temp.[RateTypeCode]
			,ISNULL(temp.[Remarks],'') AS [Remarks]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[IsBreakFastPackageAdded]
			,temp.[CreatedOn]			
	FROM	
		#tempReservation AS temp
	ORDER BY temp.RoomNumbers

END


/**********************************************************************************************************************
Name : Nilesh
Date : 26-MAR-2018
/**********************************************************************************************************************/

/************************************************************************************************************************ 
	SP Name : SearchBreakfastReport
	Comment : Change in SP SearchBreakfastReport		
***********************************************************************************************************************/ 


/****** Object:  StoredProcedure [dbo].[SearchBreakfastReport]    Script Date: 3/26/2018 10:53:40 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchBreakfastReport] 		
		@Date				=	NULL	,			
		@PageNum			=	1		,
		@PageSize			=	10		,
		@SortColumn			=	NULL	,
		@SortDirection		=	NULL	,
		@UserId				=	2
		
*/
ALTER PROCEDURE [dbo].[SearchBreakfastReport]		
	@Date				DATETIME			=	NULL	,		
	@PageNum			INT					=	1		,
	@PageSize			INT					=	10		,
	@SortColumn			NVARCHAR(255)		=	NULL	,
	@SortDirection		NVARCHAR(20)		=	NULL	,
	@UserId				INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT

	--- POPULATE Breakfast Rate Type Temp table: START
	CREATE TABLE #tempBreakfastRateType
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,		
	);

	INSERT INTO #tempBreakfastRateType ([Id], [Name])
		SELECT Id, LTRIM(RTRIM(RT.[RateTypeCode])) AS RateTypeCode
			FROM [dbo].[RateType] RT
			WHERE	ISNULL(RT.IsDeleted,0) = 0
					AND LTRIM(RTRIM(RT.[RateTypeCode])) IN ('BARBB','BARDBB','CORPBB','CORPDBB')

	--- POPULATE Breakfast Rate Type Temp table: END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NOT NULL		
		,   [GuestName]					NVARCHAR(MAX)		NULL				
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL		
		,   [CompanyName]				NVARCHAR(MAX)		NULL
		,	[VipId]						UNIQUEIDENTIFIER	NULL		
		,   [VipName]					NVARCHAR(MAX)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(500)		NULL	
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Remarks]					NVARCHAR(MAX)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL		
		,	[IsBreakFastPackageAdded]	BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Reservation] R
							 INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
							 LEFT JOIN [dbo].[Vip] V ON V.Id = R.VipId
								AND ISNULL(V.IsDeleted,0) = 0 
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@Date IS NULL OR (CAST(@Date AS DATE) BETWEEN CAST(R.[ArrivalDate] AS DATE) AND CAST(R.[DepartureDate] AS DATE)))
								AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
								AND ISNULL(R.IsCheckIn,0) = 1
								AND ISNULL(R.IsCheckOut,0) = 0 
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]		
			,[ProfileId]	
			,[GuestName]
			,[CompanyId]
			,[CompanyName]
			,[VipId]
			,[VipName]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNumbers]
			,[RateTypeCode]
			,[Remarks]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[IsBreakFastPackageAdded]
			,[CreatedOn]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'GuestName' and @SortDirection = 'asc'
						THEN LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) END ASC,
					CASE WHEN @SortColumn = 'GuestName' and @SortDirection = 'desc'
						THEN LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) END DESC,

					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
						THEN R.[ArrivalDate] END ASC,
					CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
						THEN R.[ArrivalDate] END DESC,

					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
						THEN R.[DepartureDate] END ASC,
					CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
						THEN R.[DepartureDate] END DESC,

					CASE WHEN @SortColumn = 'VipName' and @SortDirection = 'asc'
						THEN V.[Description] END ASC,
					CASE WHEN @SortColumn = 'VipName' and @SortDirection = 'desc'
						THEN V.[Description] END DESC,

					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
						THEN RAT.[RateTypeCode] END ASC,
					CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
						THEN RAT.[RateTypeCode] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],''))))  END ASC

			) AS RowNum
			,R.[Id]		
			,R.ProfileId	
			,LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) AS [GuestName]
			,R.[CompanyId]
			,'' AS CompanyName
			,R.[VipId]
			,ISNULL(V.[Description],'') AS [VipName]
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,'' AS [RoomNumbers]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]	
			,'' AS [Remarks]
			,ISNULL(R.[IsReservationCancel],0) AS [IsReservationCancel]			
			,ISNULL(R.[IsCheckIn],0) AS [IsCheckIn]
			,ISNULL(R.[IsCheckOut],0) AS [IsCheckOut]
			,(CASE WHEN EXISTS (
			
						SELECT DISTINCT RPM.Id
							FROM ReservationPackageMapping RPM INNER JOIN Package P ON
							P.Id = RPM.PackageId AND ISNULL(P.IsDeleted,0) = 0
							WHERE ISNULL(RPM.IsDeleted,0) = 0 AND RPM.ReservationId = R.Id
							AND P.[Name] LIKE '%Breakfast%'
						UNION 
						SELECT DISTINCT RC.Id
							FROM ReservationCharges RC INNER JOIN AdditionalCharges AC ON
							AC.Id = RC.AdditionalChargeId AND ISNULL(AC.IsDeleted,0) = 0
							WHERE ISNULL(RC.IsDeleted,0) = 0 AND RC.ReservationId = R.Id
							AND AC.[Description] LIKE '%Breakfast%'
						UNION
						SELECT NEWID() AS Id
							FROM #tempBreakfastRateType TBRT 
							WHERE TBRT.Id  = R.RateCodeId
						)
					THEN 1 ELSE 0 END) AS [IsBreakFastPackageAdded]
			,R.[CreatedOn]
		FROM [dbo].[Reservation] R
				INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
					AND ISNULL(P.IsDeleted,0) = 0 
					AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
				LEFT JOIN [dbo].[Vip] V ON V.Id = R.VipId
					AND ISNULL(V.IsDeleted,0) = 0 
				LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@Date IS NULL OR (CAST(@Date AS DATE) BETWEEN CAST(R.[ArrivalDate] AS DATE) AND CAST(R.[DepartureDate] AS DATE)))
				AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
				AND ISNULL(R.IsCheckIn,0) = 1 
				AND ISNULL(R.IsCheckOut,0) = 0							

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Remarks by comma separated.
	UPDATE temp
		SET Remarks = (STUFF(( SELECT ', '+ CAST(RR.Remarks AS varchar(MAX))					
				FROM ReservationRemarks RR												
				WHERE	ISNULL(RR.IsDeleted,0) = 0
						AND RR.ReservationId = temp.Id
						AND RR.CreatedBy  = @UserId
						AND ISNULL(RR.Remarks,'') <> ''
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	

	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @UserId
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	-- PAGING STARTED
	SELECT 
			temp.[Id]		
			,temp.[ProfileId]	
			,temp.[GuestName]		
			,temp.[CompanyId]				
			,temp.[CompanyName]
			,temp.[VipId]			
			,temp.[VipName]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]			
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS [RoomNumbers]			
			,temp.[RateTypeCode]
			,ISNULL(temp.[Remarks],'') AS [Remarks]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[IsBreakFastPackageAdded]
			,temp.[CreatedOn]
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/************************************************************************************************************************ 
	SP Name : GetBreakfastReport
	Comment : Change in SP GetBreakfastReport		
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetBreakfastReport]    Script Date: 3/26/2018 10:59:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetBreakfastReport] 		
		@Date				=	NULL	,					
		@UserId				=	2
		
*/
ALTER PROCEDURE [dbo].[GetBreakfastReport]		
	@Date				DATETIME			=	NULL	,			
	@UserId				INT					=	NULL	

AS
BEGIN	
	SET NOCOUNT ON;

	--POPULATE Breakfast Rate Type Temp table: START
	CREATE TABLE #tempBreakfastRateType
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,		
	);

	INSERT INTO #tempBreakfastRateType ([Id], [Name])
		SELECT Id, LTRIM(RTRIM(RT.[RateTypeCode])) AS RateTypeCode
			FROM [dbo].[RateType] RT
			WHERE	ISNULL(RT.IsDeleted,0) = 0
					AND LTRIM(RTRIM(RT.[RateTypeCode])) IN ('BARBB','BARDBB','CORPBB','CORPDBB')
	--POPULATE Breakfast Rate Type Temp table: END


	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NOT NULL		
		,   [GuestName]					NVARCHAR(MAX)		NULL				
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL		
		,   [CompanyName]				NVARCHAR(MAX)		NULL
		,	[VipId]						UNIQUEIDENTIFIER	NULL		
		,   [VipName]					NVARCHAR(MAX)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(500)		NULL	
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[Remarks]					NVARCHAR(MAX)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL		
		,	[IsBreakFastPackageAdded]	BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	

		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]		
			,[ProfileId]	
			,[GuestName]
			,[CompanyId]
			,[CompanyName]
			,[VipId]
			,[VipName]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomNumbers]
			,[RateTypeCode]
			,[Remarks]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[IsBreakFastPackageAdded]
			,[CreatedOn]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],''))))  ASC

			) AS RowNum
			,R.[Id]		
			,R.ProfileId	
			,LTRIM(RTRIM(CONCAT(ISNULL(R.[FirstName],''), ' ', ISNULL(R.[LastName],'')))) AS [GuestName]
			,R.[CompanyId]
			,'' AS CompanyName
			,R.[VipId]
			,ISNULL(V.[Description],'') AS [VipName]
			,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
			,R.[NoOfNight]		
			,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
			,R.[NoOfAdult]		
			,R.[NoOfChildren]
			,R.[NoOfRoom]		
			,'' AS [RoomNumbers]
			,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]	
			,'' AS [Remarks]
			,ISNULL(R.[IsReservationCancel],0) AS [IsReservationCancel]			
			,ISNULL(R.[IsCheckIn],0) AS [IsCheckIn]
			,ISNULL(R.[IsCheckOut],0) AS [IsCheckOut]
			,(CASE WHEN EXISTS (
						SELECT DISTINCT RPM.Id
							FROM ReservationPackageMapping RPM INNER JOIN Package P ON
							P.Id = RPM.PackageId AND ISNULL(P.IsDeleted,0) = 0
							WHERE ISNULL(RPM.IsDeleted,0) = 0 AND RPM.ReservationId = R.Id
							AND P.[Name] LIKE '%Breakfast%'
						UNION 
						SELECT DISTINCT RC.Id
							FROM ReservationCharges RC INNER JOIN AdditionalCharges AC ON
							AC.Id = RC.AdditionalChargeId AND ISNULL(AC.IsDeleted,0) = 0
							WHERE ISNULL(RC.IsDeleted,0) = 0 AND RC.ReservationId = R.Id
							AND AC.[Description] LIKE '%Breakfast%'
						UNION
						SELECT NEWID() AS Id
							FROM #tempBreakfastRateType TBRT 
							WHERE TBRT.Id  = R.RateCodeId
						) 
					THEN 1 ELSE 0 END) AS [IsBreakFastPackageAdded]
			,R.[CreatedOn]
		FROM [dbo].[Reservation] R
				INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
					AND ISNULL(P.IsDeleted,0) = 0 
					AND ISNULL(P.CreatedBy,0) = ISNULL(@UserId,0)
				LEFT JOIN [dbo].[Vip] V ON V.Id = R.VipId
					AND ISNULL(V.IsDeleted,0) = 0 
				LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
					AND ISNULL(RAT.IsDeleted,0) = 0 
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@Date IS NULL OR (CAST(@Date AS DATE) BETWEEN CAST(R.[ArrivalDate] AS DATE) AND CAST(R.[DepartureDate] AS DATE)))
				AND (ISNULL(R.CreatedBy,0) = ISNULL(@UserId,0))
				AND ISNULL(R.IsCheckIn,0) = 1 
				AND ISNULL(R.IsCheckOut,0) = 0 
																			

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Remarks by comma separated.
	UPDATE temp
		SET Remarks = (STUFF(( SELECT ', '+ CAST(RR.Remarks AS varchar(MAX))					
				FROM ReservationRemarks RR												
				WHERE	ISNULL(RR.IsDeleted,0) = 0
						AND RR.ReservationId = temp.Id
						AND RR.CreatedBy  = @UserId
						AND ISNULL(RR.Remarks,'') <> ''
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	

	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @UserId
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 	


	SELECT 
			temp.[Id]		
			,temp.[ProfileId]	
			,temp.[GuestName]		
			,temp.[CompanyId]				
			,temp.[CompanyName]
			,temp.[VipId]			
			,temp.[VipName]
			,temp.[ArrivalDate]
			,temp.[NoOfNight]			
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS [RoomNumbers]			
			,temp.[RateTypeCode]
			,ISNULL(temp.[Remarks],'') AS [Remarks]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[IsBreakFastPackageAdded]
			,temp.[CreatedOn]			
	FROM	
		#tempReservation AS temp
	ORDER BY temp.RoomNumbers

END


/************************************************************************************************************************ 
	SP Name : SearchGuest
	Comment : Change in SP SearchGuest		
***********************************************************************************************************************/ 


USE [SuccessHotelierHub_Dev]
GO
/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 3/26/2018 11:19:00 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	0,
		@IsShowCheckedIn				=	1,
		@IsShowDueOut					=	0,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL,
		@CreatedBy						=	1	,
		@IsAdminUser					=	1
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@IsShowDueOut					BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL,
	@CreatedBy						INT					=	NULL,
	@IsAdminUser					BIT					=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	--- POPULATE RESERVATION STATUS TEMP TABLE : START
	CREATE TABLE #tempStatus
	(
		[Id]	UNIQUEIDENTIFIER	NOT NULL	,
		[Name]	NVARCHAR(500)		NULL		,
		[Code]	NVARCHAR(255)		NULL
	);

	IF ISNULL(@IsShowCheckedIn,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id,	[Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDIN'
				
		SET @IsShowDueOut = 1	
						
	END

	IF ISNULL(@IsShowCheckedOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'CHECKEDOUT'
	END

	IF ISNULL(@IsShowDueOut,0) = 1
	BEGIN
		INSERT INTO #tempStatus ([Id], [Name], [Code])
		SELECT Id, [Name], [Code] FROM [dbo].[ReservationStatus] 
			WHERE	ISNULL(IsDeleted,0) = 0
					AND [Code] = 'DUEOUT'
	END

	--- POPULATE RESERVATION STATUS TEMP TABLE : END

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL	
		,	[Email]						NVARCHAR(1000)		NULL	
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
								AND P.[CreatedBy] = @CreatedBy
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
								AND ISNULL(CO.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
								AND ISNULL(ROT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
								AND ISNULL(RAT.IsDeleted,0) = 0
							LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
								AND ISNULL(RS.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
								--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
								AND R.[CreatedBy] = @CreatedBy
								AND 
								(
									 (SELECT COUNT(*) FROM #tempStatus) = 0
										OR 
									 (
										(CASE	WHEN 
												(ISNULL(R.IsCheckOut,0) = 0
												AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
											THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
											ELSE  R.ReservationStatusId  
											END
										)
									) IN (SELECT Id FROM #tempStatus)
								)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]		
			,[Email]		
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]		
				,ISNULL(P.Email,'') AS [Email]										
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[GuestBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
						AND P.[CreatedBy] = @CreatedBy
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
					--AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
					--AND (ISNULL(@IsAdminUser,0) = 1 OR (@CreatedBy IS NULL OR ISNULL(R.CreatedBy,0) = ISNULL(@CreatedBy,0)))
					AND R.[CreatedBy] = @CreatedBy
					AND 
					(
							(SELECT COUNT(*) FROM #tempStatus) = 0
							OR 
							(
							(CASE	WHEN 
									(ISNULL(R.IsCheckOut,0) = 0
									AND CAST(R.DepartureDate AS DATE) = CAST(ISNULL(@DepartureDate,GETDATE()) AS DATE))
								THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'DUEOUT')
								ELSE  R.ReservationStatusId  
								END
							)
						) IN (SELECT Id FROM #tempStatus)
					)
	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						AND RRM.CreatedBy  = @CreatedBy
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[Email]			
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END


