Name : Nilesh
Date : 03-JAN-2018

/************************************************************************************************************************ 
	SP Name : GetRateSheetDetail
	Comment : Added IsShowWeekEndPrice paramenter
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetRateSheetDetail]    Script Date: 1/3/2018 4:05:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRateSheetDetail] 
		@RateTypeId = '0853E143-6F2B-48CC-B322-4714142D9A00',
		@RoomTypeId = '488FE9ED-4AA6-45D9-88F6-67FE6D5886D6',
		@IsShowWeekEndPrice = 0
*/
ALTER PROCEDURE [dbo].[GetRateSheetDetail]
	@RateTypeId				UNIQUEIDENTIFIER,
	@RoomTypeId				UNIQUEIDENTIFIER,
	@IsShowWeekEndPrice		BIT = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Amount AS DECIMAL(10,2)
	SET @Amount = 0

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
		Id				UNIQUEIDENTIFIER	NULL,
		RoomTypeId		UNIQUEIDENTIFIER	NULL,
		RateTypeId		UNIQUEIDENTIFIER	NULL,
		Amount			DECIMAL(18,2)		NULL,
		[Description]	NVARCHAR(1000)		NULL
	) 

	IF ISNULL(@IsShowWeekEndPrice,0) = 0
	BEGIN
		--1.) Get amount from mapping table. (Show WeekDay Price)

		--IF EXISTS (SELECT * FROM [RoomTypeRateTypeMapping] RTRTM 
		--			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
		--					AND RTRTM.RateTypeId = @RateTypeId 
		--					AND RTRTM.RoomTypeId = @RoomTypeId)
		--BEGIN
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, RTRTM.[Description]
			FROM [RoomTypeRateTypeMapping] RTRTM 
			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
					AND RTRTM.RateTypeId = @RateTypeId 
					AND RTRTM.RoomTypeId = @RoomTypeId
			ORDER BY CreatedOn DESC
		--END
	END
	ELSE
	BEGIN
		--IF ISNULL((SELECT COUNT(*) FROM #tempRoomTypeRateTypeMapping),0) = 0 
		--BEGIN

			--2.) Show Amount from RateType table. (Show WeekEnd Price)
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 NULL, NULL, Id AS RateTypeId, ISNULL(Amount,0) AS Amount, [Description]
			FROM RateType
			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
					AND Id = @RateTypeId
			ORDER BY CreatedOn DESC

		--END
	END


	SELECT * FROM #tempRoomTypeRateTypeMapping
END


/************************************************************************************************************************ 
	SP Name : AddReservationRoomMapping
	Comment : Rename SP "AddReservationRoomMapping" to "AddUpdateReservationRoomMapping"
	
***********************************************************************************************************************/ 

EXEC sp_rename 'AddReservationRoomMapping','AddUpdateReservationRoomMapping'



/************************************************************************************************************************ 
	SP Name : AddUpdateReservationRoomMapping
	Comment : Added logic for update mapping.
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddUpdateReservationRoomMapping]    Script Date: 1/3/2018 4:32:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUpdateReservationRoomMapping]
	@ReservationId		UNIQUEIDENTIFIER			,	
	@RoomId				UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT * FROM [ReservationRoomMapping] 
						WHERE ISNULL(IsDeleted,0) = 0 AND [ReservationId] = @ReservationId AND [RoomId] = @RoomId)
	BEGIN
		DECLARE @Id UNIQUEIDENTIFIER
		SET @Id = NEWID()

		INSERT INTO [dbo].[ReservationRoomMapping]
			   ([Id]
			   ,[ReservationId]			   
			   ,[RoomId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@ReservationId					
					,@RoomId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[ReservationRoomMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [ReservationId] = @ReservationId 
					AND [RoomId] = @RoomId
	END
			
	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : GetReservationRoomMapping
	Comment : Create SP.
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetReservationRoomMapping]    Script Date: 1/3/2018 4:35:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetReservationRoomMapping] 		
		@ReservationId = NULL,
		@RoomId = NULL
*/
CREATE PROCEDURE [dbo].[GetReservationRoomMapping]		
	@ReservationId	UNIQUEIDENTIFIER = NULL,
	@RoomId			UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT *,R.RoomNo AS RoomNo,R.[Description] AS RoomDescription,R.StatusId
			,ISNULL(RS.[Name],'') AS RoomStatusName,ISNULL(RS.[Code],'') AS RoomStatusCode
			,ISNULL(RS.[ColorCode],'') AS RoomStatusColorCode
	 FROM [dbo].[ReservationRoomMapping] RRM
			INNER JOIN [dbo].[Room] R ON R.Id = RRM.RoomId 
				AND ISNULL(R.IsDeleted,0) = 0
			LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = R.StatusId
				AND ISNULL(RS.IsDeleted,0) = 0
		WHERE	ISNULL(RRM.IsDeleted,0) = 0
				AND (@ReservationId IS NULL OR RRM.ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RRM.RoomId = @RoomId)
		ORDER BY RRM.CreatedOn

END


/*********************** Comment : Remove RoomId Column from Reservation Table ***************/

ALTER TABLE Reservation DROP COLUMN RoomId 
GO

	
/************************************************************************************************************************ 
	SP Name : AddReservation
	Comment : Remove RoomId Parameter from the SP : AddReservation
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 1/3/2018 6:15:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountReasonId]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountReasonId	
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    ,@ConfirmationNumber	
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END
	
	
/************************************************************************************************************************ 
	SP Name : UpdateReservation
	Comment : Remove RoomId Parameter from the SP : UpdateReservation
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 1/3/2018 6:16:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountReasonId]		=	@DiscountReasonId
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Name : Nilesh
Date : 04-JAN-2018

	
/************************************************************************************************************************ 
	SP Name : GetPreferenceGroupById
	Comment : Create SP : GetPreferenceGroupById
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[GetPreferenceGroupById]    Script Date: 1/4/2018 3:55:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPreferenceGroupById]	
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PreferenceGroup]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END

	
/************************************************************************************************************************ 
	SP Name : AddPreferenceGroup
	Comment : Create SP : AddPreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[AddPreferenceGroup]    Script Date: 1/4/2018 3:56:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddPreferenceGroup]	
	@Name				NVARCHAR(500),
	@Description		NVARCHAR(MAX),
	@IsActive			BIT,	
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].PreferenceGroup
           ([Id]		   
           ,[Name]
           ,[Description]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Description
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : UpdatePreferenceGroup
	Comment : Create SP : UpdatePreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[UpdatePreferenceGroup]    Script Date: 1/4/2018 3:58:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdatePreferenceGroup]
	@Id					UNIQUEIDENTIFIER,
	@Name				NVARCHAR(500),
	@Description		NVARCHAR(MAX),
	@IsActive			BIT,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[PreferenceGroup] 
		SET	[Name] = @Name
           ,[Description]	= @Description
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/************************************************************************************************************************ 
	SP Name : DeletePreferenceGroup
	Comment : Create SP : DeletePreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[DeletePreferenceGroup]    Script Date: 1/4/2018 3:59:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeletePreferenceGroup]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[PreferenceGroup] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/************************************************************************************************************************ 
	SP Name : SearchPreferenceGroup
	Comment : Create SP : SearchPreferenceGroup
	
***********************************************************************************************************************/ 

/****** Object:  StoredProcedure [dbo].[SearchPreferenceGroup]    Script Date: 1/4/2018 4:00:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPreferenceGroup] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchPreferenceGroup]		
	@Name			NVARCHAR(500)	=	NULL,
	@Description	NVARCHAR(MAX)	=	NULL,
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPreferenceGroup
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL
		,	[Name]					NVARCHAR(500)		NOT NULL		
		,   [Description]			NVARCHAR(MAX)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PreferenceGroup] PG
						WHERE	ISNULL(PG.IsDeleted,0) = 0
								AND (ISNULL(@Name,'') = '' OR PG.[Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR PG.[Description] LIKE '%'+ @Description +'%')	
						)


		INSERT INTO #tempPreferenceGroup ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN PG.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN PG.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN PG.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN PG.[Name] END DESC,

						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN PG.[Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN PG.[Description] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN PG.[Name] END ASC

				) AS RowNum,
				PG.[ID],
				PG.[Name],				
				PG.[Description],
				PG.[CreatedOn],
				PG.[IsActive]
			FROM [dbo].[PreferenceGroup] PG
			WHERE	ISNULL(PG.IsDeleted,0) = 0
					AND (ISNULL(@Name,'') = '' OR PG.[Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Description,'') = '' OR PG.[Description] LIKE '%'+ @Description +'%')		

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[Name],			
			temp.[Description],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPreferenceGroup AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Name : Nilesh
Date : 05-JAN-2018

/*********** Create Table : CheckInCheckOutDetail ***********/



/****** Object:  Table [dbo].[CheckInCheckOutDetail]    Script Date: 1/5/2018 3:23:20 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CheckInCheckOutDetail](
	[Id] [uniqueidentifier] NOT NULL,
	[ReservationId] [uniqueidentifier] NOT NULL,
	[ProfileId] [uniqueidentifier] NOT NULL,
	[CheckInDate] [datetime] NOT NULL,
	[CheckInTime] [time](7) NULL,
	[CheckOutDate] [datetime] NULL,
	[CheckOutTime] [time](7) NULL,
	[IsActive] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_CheckInCheckOutDetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[CheckInCheckOutDetail]  WITH CHECK ADD  CONSTRAINT [FK_CheckInCheckOutDetail_Reservation] FOREIGN KEY([ReservationId])
REFERENCES [dbo].[Reservation] ([Id])
GO

ALTER TABLE [dbo].[CheckInCheckOutDetail] CHECK CONSTRAINT [FK_CheckInCheckOutDetail_Reservation]
GO


/************* Add IsCheckIn and IsCheckOut Flag in Reservation Table **********************/

ALTER TABLE Reservation ADD IsCheckIn BIT NULL
GO

ALTER TABLE Reservation ADD IsCheckOut BIT NULL
GO


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Create SP : SearchArrivals
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/5/2018 3:11:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT				NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 0
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
					AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomNumbers]
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : AddCheckInDetail
	Comment : Create SP : AddCheckInDetail
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCheckInDetail]    Script Date: 1/5/2018 4:05:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCheckInDetail]	
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId		UNIQUEIDENTIFIER	=	NULL	,
	@CheckInDate	DATETIME						,
	@CheckInTime	TIME(7)				=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@CreatedBy		INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[CheckInCheckOutDetail]
           ([Id]
           ,[ReservationId]
           ,[ProfileId]
		   ,[CheckInDate]
		   ,[CheckInTime]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@ReservationId
			   ,@ProfileId
			   ,@CheckInDate
			   ,@CheckInTime
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : UpdateReservationCheckInFlag
	Comment : Create SP : UpdateReservationCheckInFlag
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCheckInFlag]    Script Date: 1/5/2018 4:48:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationCheckInFlag]
	@Id				UNIQUEIDENTIFIER	,
	@IsCheckIn		BIT					,
	@UpdatedBy		INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Reservation] 
		SET	[IsCheckIn] = @IsCheckIn           
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateRoomOccupiedFlag
	Comment : Create SP : UpdateRoomOccupiedFlag
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomOccupiedFlag]    Script Date: 1/5/2018 4:48:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomOccupiedFlag]
	@Id				UNIQUEIDENTIFIER	,
	@IsOccupied		BIT					,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[IsOccupied]	= @IsOccupied           
		   ,[UpdatedBy]		= @UpdatedBy		   
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Added IsOccupied flag condition & Added paramenter IsShowCheckedInReservation.
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 1/5/2018 7:57:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	0,
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)	
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)							
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)														

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Name : Nilesh
Date : 08-JAN-2018

/*********************	 Create Table AdditionalCharges **************/


/****** Object:  Table [dbo].[AdditionalCharges]    Script Date: 1/8/2018 1:13:48 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[AdditionalCharges](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](25) NOT NULL,
	[Description] [nvarchar](1000) NOT NULL,
	[Price] [decimal](18, 2) NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_AdditionalCharges] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddAdditionalCharges
	Comment : Create SP : AddAdditionalCharges
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddAdditionalCharges]    Script Date: 1/8/2018 1:17:04 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddAdditionalCharges]	
	@Code				NVARCHAR(25),
	@Description		NVARCHAR(1000),
	@Price				DECIMAL(18,2),
	@IsActive			BIT,	
	@CreatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[AdditionalCharges]
           ([Id]		   
           ,[Code]
           ,[Description]
		   ,[Price]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Code
			   ,@Description
			   ,@Price
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : UpdateAdditionalCharges
	Comment : Create SP : UpdateAdditionalCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateAdditionalCharges]    Script Date: 1/8/2018 1:19:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateAdditionalCharges]
	@Id					UNIQUEIDENTIFIER,
	@Code				NVARCHAR(25),
	@Description		NVARCHAR(1000),
	@Price				DECIMAL(18,2),
	@IsActive			BIT,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[AdditionalCharges] 
		SET	[Code]			=	@Code
           ,[Description]	=	@Description
		   ,[Price]			=	@Price
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteAdditionalCharges
	Comment : Create SP : DeleteAdditionalCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteAdditionalCharges]    Script Date: 1/8/2018 1:20:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteAdditionalCharges]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[AdditionalCharges] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetAdditionalChargesById
	Comment : Create SP : GetAdditionalChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesById]    Script Date: 1/8/2018 1:21:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAdditionalChargesById]
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Description]
END


/*******************************************************************************************************************
	SP Name : GetAdditionalCharges
	Comment : Create SP : GetAdditionalCharges
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetAdditionalCharges]    Script Date: 1/8/2018 1:22:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAdditionalCharges]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Description]
END



/*******************************************************************************************************************
	SP Name : SearchAdditionalCharges
	Comment : Create SP : SearchAdditionalCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdditionalCharges]    Script Date: 1/8/2018 1:22:59 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdditionalCharges] '', '', 0, 1, 10
*/

CREATE PROCEDURE [dbo].[SearchAdditionalCharges]		
	@Code			NVARCHAR(25)	=	NULL,
	@Description	NVARCHAR(1000)	=	NULL,
	@Price			DECIMAL(10,2)	=	NULL,
	@PageNum		INT = 1,
	@PageSize		INT = 10,
	@SortColumn		NVARCHAR(255)	=	NULL,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempAdditionalCharges
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]					NVARCHAR(25)		NULL
		,   [Description]			NVARCHAR(1000)		NOT NULL
		,	[Price]					DECIMAL(18,2)		NULL
		,	[CreatedOn]				DATETIME			NULL
		,   [IsActive]				BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[AdditionalCharges] AC							
						WHERE	ISNULL(AC.IsDeleted,0) = 0
								AND (ISNULL(@Code,'') = '' OR AC.Code LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Description,'') = '' OR AC.[Description] LIKE '%'+ @Description +'%')	
								AND (ISNULL(@Price,0) = 0 OR AC.Price = @Price)  
						)


		INSERT INTO #tempAdditionalCharges ([RowNum], [Id], [Code], [Description], [Price], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN AC.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN AC.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN AC.[Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN AC.[Code] END DESC,

						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN AC.[Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN AC.[Description] END DESC,

						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'asc'
							THEN AC.[Price] END ASC,
						CASE WHEN @SortColumn = 'Price' and @SortDirection = 'desc'
							THEN AC.[Price] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN AC.[Description] END ASC

				) AS RowNum,
				AC.[ID],				
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn],
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC							
			WHERE	ISNULL(AC.IsDeleted,0) = 0
					AND (ISNULL(@Code,'') = '' OR AC.Code LIKE '%'+ @Code +'%')  
					AND (ISNULL(@Description,'') = '' OR AC.[Description] LIKE '%'+ @Description +'%')	
					AND (ISNULL(@Price,0) = 0 OR AC.Price = @Price) 	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],
			temp.[Description],
			temp.[Price],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempAdditionalCharges AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : CheckAdditionalChargeCodeAvailable
	Comment : Create SP : CheckAdditionalChargeCodeAvailable
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[CheckAdditionalChargeCodeAvailable]    Script Date: 1/8/2018 4:01:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckAdditionalChargeCodeAvailable] 
		@Id = NULL,
		@Code = 'COMP'
*/

CREATE PROCEDURE [dbo].[CheckAdditionalChargeCodeAvailable]
	@Id		UNIQUEIDENTIFIER	=	NULL,
	@Code	NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[AdditionalCharges] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY Code 
END



/*******************************************************************************************************************
	SP Name : GetAdditionalChargesByCode
	Comment : Create SP : GetAdditionalChargesByCode
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesByCode]    Script Date: 1/8/2018 1:21:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetAdditionalChargesByCode]
	@Code NVARCHAR(25) NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Code = @Code
		ORDER BY [Description]
END


/********************** Create New Table : ReservationCharges ***************************/


/****** Object:  Table [dbo].[ReservationCharges]    Script Date: 1/8/2018 5:33:58 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationCharges](
	[Id] [uniqueidentifier] NOT NULL,
	[ReservationId] [uniqueidentifier] NULL,
	[AdditionalChargeId] [uniqueidentifier] NULL,	
	[TransactionDate] [datetime] NULL,
	[Amount] [decimal](18, 2) NULL,
	[Qty] [int] NULL,
	[Supplement] [nvarchar](255) NULL,
	[Reference] [nvarchar](500) NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_ReservationCharges] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[ReservationCharges]  WITH CHECK ADD  CONSTRAINT [FK_ReservationCharges_AdditionalCharges] FOREIGN KEY([AdditionalChargeId])
REFERENCES [dbo].[AdditionalCharges] ([Id])
GO

ALTER TABLE [dbo].[ReservationCharges] CHECK CONSTRAINT [FK_ReservationCharges_AdditionalCharges]
GO

ALTER TABLE [dbo].[ReservationCharges]  WITH CHECK ADD  CONSTRAINT [FK_ReservationCharges_Reservation] FOREIGN KEY([ReservationId])
REFERENCES [dbo].[Reservation] ([Id])
GO

ALTER TABLE [dbo].[ReservationCharges] CHECK CONSTRAINT [FK_ReservationCharges_Reservation]
GO


/*******************************************************************************************************************
	SP Name : AddReservationCharges
	Comment : Create SP : AddReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationCharges]    Script Date: 1/8/2018 5:35:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationCharges]
           ([Id]		   
           ,[ReservationId]
           ,[AdditionalChargeId]
		   ,[TransactionDate]
		   ,[Amount]
		   ,[Qty]
		   ,[Supplement]
		   ,[Reference]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@AdditionalChargeId
			   ,@TransactionDate
			   ,@Amount
			   ,@Qty
			   ,@Supplement
			   ,@Reference
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : UpdateReservationCharges
	Comment : Create SP : UpdateReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCharges]    Script Date: 1/8/2018 5:40:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationCharges]
	@Id						UNIQUEIDENTIFIER				,
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[ReservationId]			=	@ReservationId
           ,[AdditionalChargeId]	=	@AdditionalChargeId
		   ,[TransactionDate]		=	@TransactionDate
		   ,[Amount]				=	@Amount
		   ,[Qty]					=	@Qty
		   ,[Supplement]			=	@Supplement
		   ,[Reference]				=	@Reference
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationCharges
	Comment : Create SP : DeleteReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationCharges]    Script Date: 1/8/2018 5:44:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationCharges]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment : Create SP : GetReservationChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 1/8/2018 5:45:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationChargesById]
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY CreatedOn
END

/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment : Create SP : GetReservationCharges
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 1/8/2018 5:45:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR AdditionalChargeId = @AdditionalChargeId)
		ORDER BY CreatedOn
END



/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Create SP : SearchGuest
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/8/2018 6:26:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	NULL,
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

CREATE PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]			
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,
							
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,
							
						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[Rate] AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,NULL AS ReservationStatusId
				,'' AS ReservationStatusName
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED
END



/************************************************************************************************************************************/

Name : Nilesh
Date : 09-JAN-2018


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Changes in SearchArrivals SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/9/2018 11:03:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT				NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 0
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
					AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/******************** Add TotalPrice & TotalBalance Amount in Reservation Table.  *************/

ALTER TABLE Reservation Add TotalPrice DECIMAL(18,2) NULL
GO

ALTER TABLE Reservation Add TotalBalance DECIMAL(18,2) NULL
GO

/*******************************************************************************************************************
	SP Name : AddReservation
	Comment : Added two new parameter TotalPrice & TotalBalance AddReservation SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservation]    Script Date: 1/9/2018 12:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservation]	
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@ConfirmationNumber		NVARCHAR(255)					,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@CreatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ReservationId UNIQUEIDENTIFIER
	SET @ReservationId = NEWID()

	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	INSERT INTO [dbo].[Reservation]
           ([Id]
           ,[TitleId]
           ,[LastName]
           ,[FirstName]
           ,[ProfileId]
           ,[MemberTypeId]
           ,[CountryId]
           ,[LanguageId]
           ,[VipId]
           ,[PhoneNo]
           ,[MemberNo]
           ,[MemberLvt]
           ,[AgentId]
           ,[CompanyId]
           ,[GroupId]
           ,[SourceId]
           ,[ContactId]
           ,[ArrivalDate]
           ,[NoOfNight]
           ,[DepartureDate]
           ,[NoOfAdult]
           ,[NoOfChildren]
           ,[NoOfRoom]
           ,[RoomTypeId]
           ,[RtcId]           
           ,[ExtnId]
           ,[RateCodeId]
           ,[IsFixedRate]
           ,[Rate]
           ,[CurrencyId]
           ,[PackageId]
           ,[BlockCodeId]
           ,[ETA]
           ,[ReservationTypeId]
           ,[MarketId]
           ,[ReservationSourceId]
           ,[OriginId]
           ,[PaymentMethodId]
           ,[CreditCardNo]
           ,[CardExpiryDate]
           ,[CVVNo]
           ,[ApprovalCode]
           ,[ApprovalAmount]
           ,[SuitWith]
           ,[IsEmailConfirmation]
           ,[GuestBalance]
           ,[DiscountAmount]
           ,[DiscountPercentage]
           ,[DiscountReasonId]
           ,[TARecordLocator]
           ,[SpecialsId]
           ,[ReservationComments]
		   ,[InHouseComments]
		   ,[CashieringComments]
		   ,[HouseKeepingComments]
           ,[ItemInventoryId]
           ,[Remarks]
		   ,[ConfirmationNumber]
		   ,[TotalPrice]
		   ,[TotalBalance]
           ,[CreatedBy]
           ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
				@ReservationId
				, @TitleId							
				, @LastName						
				, @FirstName						
				, @ProfileId			
				, @MemberTypeId		
				, @CountryId			
				, @LanguageId			
				, @VipId				
				, @PhoneNo			
				, @MemberNo			
				, @MemberLvt			
				, @AgentId			
				, @CompanyId			
				, @GroupId			
				, @SourceId			
				, @ContactId			
				, @ArrivalDate		
				, @NoOfNight			
				, @DepartureDate		
				, @NoOfAdult			
				, @NoOfChildren
    			, @NoOfRoom			
				, @RoomTypeId			
				, @RtcId								
				, @ExtnId				
				, @RateCodeId			
				, @IsFixedRate		
				, @Rate				
				, @CurrencyId			
				, @PackageId			
				, @BlockCodeId		
				, @ETATime				
				, @ReservationTypeId	
				, @MarketId			
				, @ReservationSourceId
				, @OriginId			
				, @PaymentMethodId	
				, @CreditCardNo		
				, @CardExpiryDate		
				, @CVVNo				
				, @ApprovalCode		
				, @ApprovalAmount		
				, @SuitWith			
				, @IsEmailConfirmation
				, @GuestBalance		
				, @DiscountAmount		
				, @DiscountPercentage	
				, @DiscountReasonId	
				, @TARecordLocator	
				, @SpecialsId			
				, @ReservationComments			
				, @InHouseComments
				, @CashieringComments
				, @HouseKeepingComments
				, @ItemInventoryId	
				, @Remarks		
			    , @ConfirmationNumber	
				, @TotalPrice
				, @TotalBalance
				, @CreatedBy
				, GETDATE()
				, @IsActive		
			)	
			
			
		SELECT @ReservationId AS ReservationId				

END



/*******************************************************************************************************************
	SP Name : UpdateReservation
	Comment : Added two new parameter TotalPrice & TotalBalance UpdateReservation SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservation]    Script Date: 1/9/2018 12:06:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservation]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,
	@TitleId				UNIQUEIDENTIFIER	=	NULL	,
	@LastName				NVARCHAR(255)		=	NULL	,
	@FirstName				NVARCHAR(255)		=	NULL	,
	@ProfileId				UNIQUEIDENTIFIER	=	NULL	,
	@MemberTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@CountryId				INT					=	NULL	,
	@LanguageId				UNIQUEIDENTIFIER	=	NULL	,
	@VipId					UNIQUEIDENTIFIER	=	NULL	,
	@PhoneNo				NVARCHAR(50)		=	NULL	,
	@MemberNo				NVARCHAR(255)		=	NULL	,
	@MemberLvt				NVARCHAR(255)		=	NULL	,
	@AgentId				UNIQUEIDENTIFIER	=	NULL	,
	@CompanyId				UNIQUEIDENTIFIER	=	NULL	,
	@GroupId				UNIQUEIDENTIFIER	=	NULL	,
	@SourceId				UNIQUEIDENTIFIER	=	NULL	,
	@ContactId				UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate			DATETIME			=	NULL	,
	@NoOfNight				INT					=	NULL	,
	@DepartureDate			DATETIME			=	NULL	,
	@NoOfAdult				INT					=	NULL	,
	@NoOfChildren			INT					=	NULL	,
	@NoOfRoom				INT					=	NULL	,
	@RoomTypeId				UNIQUEIDENTIFIER	=	NULL	,
	@RtcId					UNIQUEIDENTIFIER	=	NULL	,	
	@ExtnId					UNIQUEIDENTIFIER	=	NULL	,
	@RateCodeId				UNIQUEIDENTIFIER	=	NULL	,
	@IsFixedRate			BIT					=	NULL	,
	@Rate					DECIMAL(18,2)		=	NULL	,
	@CurrencyId				UNIQUEIDENTIFIER	=	NULL	,
	@PackageId				UNIQUEIDENTIFIER	=	NULL	,
	@BlockCodeId			UNIQUEIDENTIFIER	=	NULL	,
	@ETA					TIME(7)				=	NULL	,
	@ReservationTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@MarketId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationSourceId	UNIQUEIDENTIFIER	=	NULL	,
	@OriginId				UNIQUEIDENTIFIER	=	NULL	,
	@PaymentMethodId		UNIQUEIDENTIFIER	=	NULL	,
	@CreditCardNo			NVARCHAR(255)		=	NULL	,
	@CardExpiryDate			NVARCHAR(50)		=	NULL	,
	@CVVNo					NVARCHAR(255)		=	NULL	,
	@ApprovalCode			NVARCHAR(255)		=	NULL	,
	@ApprovalAmount			DECIMAL(18,2)		=	NULL	,
	@SuitWith				NVARCHAR(255)		=	NULL	,
	@IsEmailConfirmation	BIT					=	NULL	,
	@GuestBalance			DECIMAL(18,2)		=	NULL	,
	@DiscountAmount			DECIMAL(18,2)		=	NULL	,
	@DiscountPercentage		DECIMAL(18,2)		=	NULL	,
	@DiscountReasonId		UNIQUEIDENTIFIER	=	NULL	,
	@TARecordLocator		NVARCHAR(255)		=	NULL	,
	@SpecialsId				UNIQUEIDENTIFIER	=	NULL	,
	@ReservationComments	NVARCHAR(MAX)		=	NULL	,
	@InHouseComments		NVARCHAR(MAX)		=	NULL	,
	@CashieringComments		NVARCHAR(MAX)		=	NULL	,
	@HouseKeepingComments	NVARCHAR(MAX)		=	NULL	,
	@ItemInventoryId		UNIQUEIDENTIFIER	=	NULL	,
	@Remarks				NVARCHAR(MAX)		=	NULL	,
	@TotalPrice				DECIMAL(18,2)		=	NULL	,
	@TotalBalance			DECIMAL(18,2)		=	NULL	,
	@IsActive				BIT					=	NULL	,
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @ETATime TIME(7) = NULL

	--IF ISNULL(@ETA,'') <> ''
	--BEGIN
	--	SET @ETATime = CAST(@ETA AS TIME(7))
	--END

	SET @ETATime = @ETA

	UPDATE [dbo].[Reservation] SET           
		[TitleId]				=	@TitleId
		,[LastName]				=	@LastName
		,[FirstName]			=	@FirstName	
		,[ProfileId]			=	@ProfileId
		,[MemberTypeId]			=	@MemberTypeId
		,[CountryId]			=	@CountryId
		,[LanguageId]			=	@LanguageId
		,[VipId]				=	@VipId
		,[PhoneNo]				=	@PhoneNo
		,[MemberNo]				=	@MemberNo
		,[MemberLvt]			=	@MemberLvt
		,[AgentId]				=	@AgentId
		,[CompanyId]			=	@CompanyId
		,[GroupId]				=	@GroupId
		,[SourceId]				=	@SourceId
		,[ContactId]			=	@ContactId
		,[ArrivalDate]			=	@ArrivalDate
		,[NoOfNight]			=	@NoOfNight
		,[DepartureDate]		=	@DepartureDate
		,[NoOfAdult]			=	@NoOfAdult
		,[NoOfChildren]			=	@NoOfChildren
		,[NoOfRoom]				=	@NoOfRoom
		,[RoomTypeId]			=	@RoomTypeId
		,[RtcId]				=	@RtcId		
		,[ExtnId]				=	@ExtnId
		,[RateCodeId]			=	@RateCodeId
		,[IsFixedRate]			=	@IsFixedRate
		,[Rate]					=	@Rate
		,[CurrencyId]			=	@CurrencyId
		,[PackageId]			=	@PackageId
		,[BlockCodeId]			=	@BlockCodeId
		,[ETA]					=	@ETATime
		,[ReservationTypeId]	=	@ReservationTypeId
		,[MarketId]				=	@MarketId
		,[ReservationSourceId]	=	@ReservationSourceId
		,[OriginId]				=	@OriginId
		,[PaymentMethodId]		=	@PaymentMethodId
		,[CreditCardNo]			=	@CreditCardNo
		,[CardExpiryDate]		=	@CardExpiryDate
		,[CVVNo]				=	@CVVNo
		,[ApprovalCode]			=	@ApprovalCode
		,[ApprovalAmount]		=	@ApprovalAmount
		,[SuitWith]				=	@SuitWith
		,[IsEmailConfirmation]	=	@IsEmailConfirmation
		,[GuestBalance]			=	@GuestBalance
		,[DiscountAmount]		=	@DiscountAmount
		,[DiscountPercentage]	=	@DiscountPercentage
		,[DiscountReasonId]		=	@DiscountReasonId
		,[TARecordLocator]		=	@TARecordLocator
		,[SpecialsId]			=	@SpecialsId
		,[ReservationComments]	=	@ReservationComments
		,[InHouseComments]		=	@InHouseComments
		,[CashieringComments]	=	@CashieringComments
		,[HouseKeepingComments]	=	@HouseKeepingComments
		,[ItemInventoryId]		=	@ItemInventoryId
		,[Remarks]				=	@Remarks
		,[TotalPrice]			=	@TotalPrice
		,[TotalBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()
		,[IsActive]				=	@IsActive
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
			
	SELECT @Id AS ReservationId				

END


/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Changes in SearchGuest SP.
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/9/2018 12:13:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'7',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]			
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,NULL AS ReservationStatusId
				,'' AS ReservationStatusName
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment : Changes in GetReservationCharges SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 1/9/2018 12:38:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
		ORDER BY RC.CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment : Changes in GetReservationChargesById SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 1/9/2018 12:40:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationChargesById]
	@Id UNIQUEIDENTIFIER NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
		FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (RC.Id = @Id)							
		ORDER BY RC.CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceAdditionalCharge
	Comment : Create SearchAdvanceAdditionalCharge SP.
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceAdditionalCharge]    Script Date: 1/9/2018 3:29:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceAdditionalCharge]
			@Code	= ''			
*/

CREATE PROCEDURE [dbo].[SearchAdvanceAdditionalCharge]
	@Code		NVARCHAR(50)	=	NULL
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  AC.[Code] ASC

				) AS RowNum,
				AC.[Id], 
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn], 
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC					
				WHERE	ISNULL(IsActive,0)  = 1 AND ISNULL(AC.IsDeleted,0) = 0
						AND (
								ISNULL(@Code,'') = '' OR 
								(AC.[Code] LIKE '%'+ @Code +'%' 
									OR AC.[Description] LIKE '%'+ @Code +'%')
							)
						


END


/******************** Add Code & Description column in ReservationCharges Table ************/

ALTER TABLE ReservationCharges ADD [Code] [nvarchar](25) NULL
GO

ALTER TABLE ReservationCharges ADD [Description] [nvarchar](1000) NULL
GO




/*******************************************************************************************************************
	SP Name : AddReservationCharges
	Comment : Added Code & Description Parameter in AddReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationCharges]    Script Date: 1/8/2018 5:35:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationCharges]	
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@Code					NVARCHAR(25)		=	NULL	,
	@Description			NVARCHAR(1000)		=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@CreatedBy				INT					=	NULL	

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationCharges]
           ([Id]		   
           ,[ReservationId]
           ,[AdditionalChargeId]
		   ,[Code]
		   ,[Description]
		   ,[TransactionDate]
		   ,[Amount]
		   ,[Qty]
		   ,[Supplement]
		   ,[Reference]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@AdditionalChargeId
			   ,@Code
			   ,@Description
			   ,@TransactionDate
			   ,@Amount
			   ,@Qty
			   ,@Supplement
			   ,@Reference
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : UpdateReservationCharges
	Comment : Added Code & Description Parameters in  UpdateReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCharges]    Script Date: 1/8/2018 5:40:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTEr PROCEDURE [dbo].[UpdateReservationCharges]
	@Id						UNIQUEIDENTIFIER				,
	@ReservationId			UNIQUEIDENTIFIER	=	NULL	,
	@AdditionalChargeId		UNIQUEIDENTIFIER	=	NULL	,
	@Code					NVARCHAR(25)		=	NULL	,
	@Description			NVARCHAR(1000)		=	NULL	,
	@TransactionDate		DATETIME			=	NULL	,
	@Amount					DECIMAL(18,2)		=	NULL	,
	@Qty					INT					=	NULL	,
	@Supplement				NVARCHAR(255)		=	NULL	,
	@Reference				NVARCHAR(500)		=	NULL	,
	@IsActive				BIT					=	NULL	,	
	@UpdatedBy				INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationCharges] 
		SET	[ReservationId]			=	@ReservationId
           ,[AdditionalChargeId]	=	@AdditionalChargeId
		   ,[Code]					=	@Code
		   ,[Description]			=	@Description
		   ,[TransactionDate]		=	@TransactionDate
		   ,[Amount]				=	@Amount
		   ,[Qty]					=	@Qty
		   ,[Supplement]			=	@Supplement
		   ,[Reference]				=	@Reference
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[IsActive]		=	@IsActive
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : UpdateReservationTotalBalance
	Comment : Create SP :  UpdateReservationTotalBalance
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationTotalBalance]    Script Date: 1/9/2018 4:50:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationTotalBalance]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,	
	@TotalBalance			DECIMAL(18,2)		=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET
		[TotalBalance]			=	@TotalBalance
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				

END

/*** Add required data in AdditionalCharges table *****/

INSERT INTO [dbo].[AdditionalCharges] ([Id],[Code],[Description], [Price], [CreatedBy], [CreatedOn], [IsActive]) 
	VALUES (NEWID(), '1000' ,'Room Rent', 0, 1, GETDATE(), 1)
INSERT INTO [dbo].[AdditionalCharges] ([Id],[Code],[Description], [Price], [CreatedBy], [CreatedOn], [IsActive]) 
	VALUES (NEWID(), '9004' ,'Check Out', 0, 1, GETDATE(), 1)
	

/*** Added Check Out Reference Column in CheckInCheckOutDetail Table ******/

ALTER TABLE CheckInCheckOutDetail Add CheckOutReference NVARCHAR(1000) NULL
GO
	
	
/*******************************************************************************************************************
	SP Name : GetCheckInDetails
	Comment : Create SP :  GetCheckInDetails
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCheckInDetails]    Script Date: 1/9/2018 5:37:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetCheckInDetails]
	@ReservationId	UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId		UNIQUEIDENTIFIER	=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[CheckInCheckOutDetail]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ReservationId = @ReservationId
				AND ProfileId = @ProfileId
		ORDER BY CreatedOn DESC
END


/*******************************************************************************************************************
	SP Name : UpdateCheckOutDetail
	Comment : Create SP :  UpdateCheckOutDetail
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCheckOutDetail]    Script Date: 1/9/2018 5:27:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCheckOutDetail]	
	@Id					UNIQUEIDENTIFIER				,
	@ReservationId		UNIQUEIDENTIFIER	=	NULL	,
	@ProfileId			UNIQUEIDENTIFIER	=	NULL	,
	@CheckOutDate		DATETIME						,
	@CheckOutTime		TIME(7)				=	NULL	,
	@CheckOutReference	NVARCHAR(1000)		=	NULL	,
	@IsActive			BIT					=	NULL	,	
	@UpdatedBy			INT					=	NULL

AS
BEGIN
	SET NOCOUNT ON;


	UPDATE [dbo].[CheckInCheckOutDetail]
           SET		CheckOutDate		=	@CheckOutDate
				,	CheckOutTime		=	@CheckOutTime
				,	CheckOutReference	=	@CheckOutReference
				,	UpdatedBy			=	@UpdatedBy
				,	UpdatedOn			=	GETDATE()
		   WHERE	ISNULL(IsDeleted,0) = 0
					AND Id = @Id


		SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : UpdateReservationCheckOutFlag
	Comment : Create SP : UpdateReservationCheckOutFlag
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationCheckOutFlag]    Script Date: 1/5/2018 4:48:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationCheckOutFlag]
	@Id				UNIQUEIDENTIFIER	,
	@IsCheckOut		BIT					,
	@UpdatedBy		INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Reservation] 
		SET	[IsCheckOut] = @IsCheckOut           
		   ,[UpdatedBy]	= @UpdatedBy		   
		   ,[UpdatedOn]	= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : SearchReservation
	Comment : Changes in SP SearchReservation
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchReservation]    Script Date: 1/9/2018 7:17:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservation] 
		@LastName						=	NULL,
		@FirstName						=	NULL,	
		@CVVNo							=	NULL,
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,		
		@SourceId						=	NULL,		
		@AgentId						=	NULL,		
		@ContactId						=	NULL,	
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalFrom					=	NULL,
		@ArrivalTo						=	NULL,
		@ConfirmationNo					=	'',
		@IsShowCancelledReservation		=	0,
		@IsShowCheckedInReservation		=	0,
		@IsShowCheckedOutReservation	=	0,
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchReservation]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@CVVNo							NVARCHAR(255)		=	NULL,
	@TARecordLocator				NVARCHAR(255)		=	NULL,
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,		
	@SourceId						UNIQUEIDENTIFIER	=	NULL,		
	@AgentId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalFrom					DATETIME			=	NULL,
	@ArrivalTo						DATETIME			=	NULL,
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@IsShowCancelledReservation		BIT					=	NULL,
	@IsShowCheckedInReservation		BIT					=	NULL,
	@IsShowCheckedOutReservation	BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))	
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)	
								AND (
										@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,0)
									)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)							
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'asc'
							THEN R.[PhoneNo] END ASC,
						CASE WHEN @SortColumn = 'PhoneNo' and @SortDirection = 'desc'
							THEN R.[PhoneNo] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')
								AND (ISNULL(@CVVNo,'') = '' OR R.[CVVNo] LIKE '%'+ @CVVNo +'%')
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)
								AND (@SourceId IS NULL OR R.[SourceId] = @SourceId)
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')																
								AND (@ArrivalFrom IS NULL OR CAST(R.[ArrivalDate] AS DATE) >= CAST(@ArrivalFrom AS DATE))
								AND (@ArrivalTo IS NULL OR CAST(R.[ArrivalDate] AS DATE) <= CAST(@ArrivalTo AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (
										@IsShowCancelledReservation IS NULL OR ISNULL(R.[IsReservationCancel],0) = ISNULL(@IsShowCancelledReservation,0)
									)
								AND (
										@IsShowCheckedInReservation IS NULL OR ISNULL(R.[IsCheckIn],0) = ISNULL(@IsShowCheckedInReservation,0)
									)	
								AND (
										@IsShowCheckedOutReservation IS NULL OR ISNULL(R.[IsCheckOut],0) = ISNULL(@IsShowCheckedOutReservation,0)
									)
								--AND (
								--		@IsShowCancelledReservation IS NULL OR 
								--		ISNULL(R.[IsReservationCancel],0) IN (CASE WHEN @IsShowCancelledReservation = 0 THEN 0 ELSE ISNULL(R.[IsReservationCancel],0) END)
								--	)														

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/**++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++**/

Name : Nilesh
Date : 10-JAN-2018

/*******************************************************************************************************************
	SP Name : SearchAdvanceAdditionalCharge
	Comment : Changes in SP SearchAdvanceAdditionalCharge
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceAdditionalCharge]    Script Date: 1/10/2018 11:33:49 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceAdditionalCharge]
			@Code	= ''			
*/
ALTER PROCEDURE [dbo].[SearchAdvanceAdditionalCharge]
	@Code		NVARCHAR(50)	=	NULL
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  AC.[Code] ASC

				) AS RowNum,
				AC.[Id], 
				AC.[Code],
				AC.[Description],
				AC.[Price],
				AC.[CreatedOn], 
				AC.[IsActive]
			FROM [dbo].[AdditionalCharges] AC					
				WHERE	ISNULL(IsActive,0)  = 1 AND ISNULL(AC.IsDeleted,0) = 0
						AND (
								ISNULL(@Code,'') = '' OR 
								(AC.[Code] LIKE '%'+ @Code +'%' 
									OR AC.[Description] LIKE '%'+ @Code +'%')
							)

						--Avoid Room Rent and CheckOut
						AND ISNULL(AC.[Code],'') NOT IN ('1000','9004')
						


END


/*******************************************************************************************************************
	SP Name : SearchArrivals
	Comment : Added RoomNumber, IsShowCheckIn search paramenter in SP SearchArrivals
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchArrivals]    Script Date: 1/10/2018 11:46:25 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchArrivals] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@TARecordLocator				=	NULL,
		@CompanyId						=	NULL,		
		@ContactId						=	NULL,	
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,					
		@AgentId						=	NULL,				
		@MemberTypeId					=	NULL,		
		@MemberNo						=	NULL,	
		@ArrivalDate					=	NULL,		
		@ConfirmationNo					=	'',
		@PostalCode						=	'',
		@IsShowCheckedIn				=1, 
		@RoomNumber						=	'',
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchArrivals]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@TARecordLocator				NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,		
	@ContactId						UNIQUEIDENTIFIER	=	NULL,	
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,			
	@AgentId						UNIQUEIDENTIFIER	=	NULL,				
	@MemberTypeId					UNIQUEIDENTIFIER	=	NULL,		
	@MemberNo						NVARCHAR(255)		=	NULL,	
	@ArrivalDate					DATETIME			=	NULL,	
	@ConfirmationNo					NVARCHAR(255)		=	NULL,
	@PostalCode						NVARCHAR(255)		=	NULL,
	@RoomNumber						NVARCHAR(255)		=	NULL,
	@IsShowCheckedIn				BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[ProfileId]					UNIQUEIDENTIFIER	NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL
		,   [PhoneNo]					NVARCHAR(50)		NULL
		,   [ArrivalDate]				NVARCHAR(25)		NULL		
		,   [NoOfNight]					INT					NULL
		,   [DepartureDate]				NVARCHAR(25)		NULL		
		,   [NoOfAdult]					INT					NULL
		,	[NoOfChildren]				INT					NULL
		,	[NoOfRoom]					INT					NULL
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,	[RoomTypeCode]				NVARCHAR(255)		NULL
		,	[RateTypeCode]				NVARCHAR(255)		NULL	
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0								
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
								AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
								AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
								AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
								AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
								AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
								AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))								
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')
								AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]	
			,[ProfileId]		
			,[FirstName]		
			,[LastName]		
			,[PhoneNo]		
			,[ArrivalDate]
			,[NoOfNight]					
			,[DepartureDate]
			,[NoOfAdult]		
			,[NoOfChildren]
			,[NoOfRoom]		
			,[RoomTypeCode]
			,[RateTypeCode]
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]		
				,R.[ProfileId]	
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]				
				,ISNULL(R.[PhoneNo],'') AS [PhoneNo]				
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate
				,R.[NoOfNight]		
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,R.[NoOfAdult]		
				,R.[NoOfChildren]
				,R.[NoOfRoom]		
				,ISNULL(ROT.[RoomTypeCode],'') AS [RoomTypeCode]
				,ISNULL(RAT.[RateTypeCode],'') AS [RateTypeCode]
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0					
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')								
					AND (ISNULL(@TARecordLocator,'') = '' OR R.[TARecordLocator] LIKE '%'+ @TARecordLocator +'%')
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)
					AND (@ContactId IS NULL OR R.[ContactId] = @ContactId)
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)								
					AND (@AgentId IS NULL OR R.[AgentId] = @AgentId)								
					AND (@MemberTypeId IS NULL OR R.[MemberTypeId] = @MemberTypeId)								
					AND (ISNULL(@MemberNo,'') = '' OR R.[MemberNo] LIKE '%'+ @MemberNo +'%')
					AND (@ArrivalDate IS NULL OR CAST(R.[ArrivalDate] AS DATE) = CAST(@ArrivalDate AS DATE))
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')					
					AND (@IsShowCheckedIn IS NULL OR ISNULL(R.IsCheckIn,0) = @IsShowCheckedIn) 

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,temp.[ProfileId]
			,temp.[FirstName]		
			,temp.[LastName]		
			,temp.[PhoneNo]		
			,temp.[ArrivalDate]
			,temp.[NoOfNight]		
			,temp.[DepartureDate]
			,temp.[NoOfAdult]		
			,temp.[NoOfChildren]
			,temp.[NoOfRoom]		
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[RoomTypeCode]
			,temp.[RateTypeCode]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNumber,'') = '' OR temp.RoomNumbers LIKE '%' + @RoomNumber +'%')
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Added DepartureDate, IsShowCheckedOut search paramenter in SP SearchGuest
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/10/2018 1:00:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=1,
		@PageNum						=1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@PageNum						INT					=1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
								AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,NULL AS ReservationStatusId
				,'' AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
					AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END

/**** DROP City Table *****/

DROP TABLE [dbo].[City]
GO


/**** DROP State Table *****/

DROP TABLE [dbo].[State]
GO

/*** Drop FK_Reservation_Country Constraint  ***/

ALTER TABLE [dbo].[Reservation] DROP CONSTRAINT [FK_Reservation_Country]
GO


/**** DROP Country Table *****/

DROP TABLE [dbo].[Country]
GO


/*** Create Country Table ***/


/****** Object:  Table [dbo].[Country]    Script Date: 1/10/2018 4:17:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Country](
	[Id] [int]  NOT NULL,
	[Code] [nvarchar](10) NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_Country] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/**** Create State Table ****/


/****** Object:  Table [dbo].[State]    Script Date: 1/10/2018 4:17:35 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[State](
	[Id] [int] NOT NULL,
	[CountryId] [int] NOT NULL,
	[Code] [nvarchar](10) NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_State] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[State]  WITH CHECK ADD  CONSTRAINT [FK_State_Country] FOREIGN KEY([CountryId])
REFERENCES [dbo].[Country] ([Id])
GO

ALTER TABLE [dbo].[State] CHECK CONSTRAINT [FK_State_Country]
GO


/****  Create City Table ****/


/****** Object:  Table [dbo].[City]    Script Date: 1/10/2018 4:17:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[City](
	[Id] [int] NOT NULL,
	[StateId] [int] NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_City] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[City]  WITH CHECK ADD  CONSTRAINT [FK_City_State] FOREIGN KEY([StateId])
REFERENCES [dbo].[State] ([Id])
GO

ALTER TABLE [dbo].[City] CHECK CONSTRAINT [FK_City_State]
GO



/*******************************************************************************************************************
	SP Name : AddCountry
	Comment : Create SP AddCountry
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCountry]    Script Date: 1/10/2018 5:10:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCountry]
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM Country)

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[Country]
           ([Id]
           ,[Code]
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@Code
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateCountry
	Comment : Create SP UpdateCountry
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCountry]    Script Date: 1/10/2018 5:10:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCountry]
	@Id				INT						,
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Country]
		SET [Code]	=	@Code
           ,[Name]	=	@Name		   
		   ,[UpdatedBy]	=	@UpdatedBy
		   ,[UpdatedOn]	=	GETDATE()
		   ,[IsActive]	=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteCountry
	Comment : Create SP DeleteCountry
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteCountry]    Script Date: 1/10/2018 5:29:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteCountry]
	@Id			INT,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Country] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : GetCountryById
	Comment : Create SP GetCountryById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCountryById]    Script Date: 1/10/2018 5:31:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].GetCountryById
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Country]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END

/*******************************************************************************************************************
	SP Name : SearchCountry
	Comment : Create SP SearchCountry
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchCountry]    Script Date: 1/10/2018 5:32:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCountry] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchCountry]		
	@Code			NVARCHAR(20)	=	NULL	,
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempCountry
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,   [Code]			NVARCHAR(20)		NOT NULL
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Country]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempCountry ([RowNum], [Id], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],
				[Code],
				[Name],
				[CreatedOn],
				[IsActive]
			FROM [dbo].[Country]
				WHERE	ISNULL(IsDeleted,0) = 0
						AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
						AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[Code],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempCountry AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/***++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++***/

Name : Nilesh
Date : 11-JAN-2018


/*******************************************************************************************************************
	SP Name : AddState
	Comment : Create SP AddState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddState]    Script Date: 1/10/2018 7:49:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddState]
	@CountryId		INT						,
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM [dbo].[State])

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[State]
           ([Id]
		   ,[CountryId]
           ,[Code]
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@CountryId
			   ,@Code
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateState
	Comment : Create SP UpdateState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateState]    Script Date: 1/10/2018 7:51:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateState]
	@Id				INT						,
	@CountryId		INT						,
	@Code			NVARCHAR(20)			,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[State]
		SET	[CountryId]		=	@CountryId 
		   ,[Code]			=	@Code
           ,[Name]			=	@Name		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteState
	Comment : Create SP DeleteState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteState]    Script Date: 1/10/2018 8:02:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteState]
	@Id			INT,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[State] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetStateById
	Comment : Create SP GetStateById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetStateById]    Script Date: 1/10/2018 7:52:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetStateById]
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[State]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchState
	Comment : Create SP SearchState
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchState]    Script Date: 1/10/2018 7:53:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchState] NULL, '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchState]		
	@CountryId		INT				=	NULL	,
	@Code			NVARCHAR(20)	=	NULL	,
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempState
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,	[CountryId]		INT					NULL
		,   [CountryName]	NVARCHAR(255)		NULL
		,   [Code]			NVARCHAR(20)		NOT NULL
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[State]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@CountryId,0) = 0 OR [CountryId] = @CountryId)
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempState ([RowNum], [Id], [CountryId], [CountryName], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN S.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN S.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN S.[Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN S.[Code] END DESC,

						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN S.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN S.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN S.[Name] END ASC

				) AS RowNum,
				S.[ID],
				S.[CountryId],
				C.[Name] AS CountryName,
				S.[Code],
				S.[Name],
				S.[CreatedOn],
				S.[IsActive]
			FROM [dbo].[State] S
					INNER JOIN [dbo].[Country] C ON S.CountryId = C.Id
					AND ISNULL(C.IsDeleted,0) = 0
				WHERE	ISNULL(S.IsDeleted,0) = 0
						AND (ISNULL(@CountryId,0) = 0 OR S.[CountryId] = @CountryId)
						AND (ISNULL(@Code,'') = '' OR S.[Code] LIKE '%'+ @Code +'%')  
						AND (ISNULL(@Name,'') = '' OR S.[Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[CountryId],
			temp.[CountryName],
			temp.[Code],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempState AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : AddCity
	Comment : Create SP AddCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCity]    Script Date: 1/10/2018 8:06:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddCity]
	@StateId		INT						,	
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM [dbo].[City])

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[City]
           ([Id]
		   ,[StateId]           
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@StateId			   
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateCity
	Comment : Create SP UpdateCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCity]    Script Date: 1/10/2018 8:08:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateCity]
	@Id				INT						,
	@StateId		INT						,	
	@Name			NVARCHAR(255)			,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[City]
		SET	[StateId]		=	@StateId 		   
           ,[Name]			=	@Name		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteCity
	Comment : Create SP DeleteCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteCity]    Script Date: 1/10/2018 8:09:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteCity]
	@Id			INT,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[City] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetCityById
	Comment : Create SP GetCityById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCityById]    Script Date: 1/10/2018 8:10:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetCityById]
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

     SELECT CI.*,S.Id AS StateId,C.Id AS CountryId FROM [dbo].[City] CI
				LEFT JOIN [dbo].[State] S ON S.Id = CI.StateId
					AND ISNULL(S.IsDeleted,0) = 0
				LEFT JOIN [dbo].[Country] C ON C.Id = S.CountryId
					AND ISNULL(C.IsDeleted,0) = 0
		WHERE	ISNULL(CI.IsDeleted,0) = 0 
				AND CI.Id = @Id
		ORDER BY CI.[Name]
END


/*******************************************************************************************************************
	SP Name : SearchCity
	Comment : Create SP SearchCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchCity]    Script Date: 1/10/2018 8:10:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCity] 0, 0, '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchCity]		
	@CountryId		INT				=	NULL	,
	@StateId		INT				=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempCity
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,	[CountryId]		INT					NULL
		,   [CountryName]	NVARCHAR(255)		NULL
		,	[StateId]		INT					NULL
		,   [StateName]	NVARCHAR(255)		NULL		
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT CI.Id) 
						FROM [dbo].[City] CI
								INNER JOIN [dbo].[State] S ON CI.StateId = S.Id
								AND ISNULL(S.IsDeleted,0) = 0
						WHERE	ISNULL(CI.IsDeleted,0) = 0
								AND (ISNULL(@CountryId,0) = 0 OR S.[CountryId] = @CountryId)
								AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
								AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempCity 
		(
			[RowNum], 
			[Id], 
			[CountryId], 
			[CountryName], 
			[StateId], 
			[StateName],
			[Name], 
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN CI.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN CI.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'asc'
							THEN S.[Name] END ASC,
						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'desc'
							THEN S.[Name] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN CI.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN CI.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN CI.[Name] END ASC

				) AS RowNum,
				CI.[ID],
				S.[CountryId],
				C.[Name] AS CountryName,
				CI.[StateId],
				S.[Name] AS StateName,				
				CI.[Name],
				CI.[CreatedOn],
				CI.[IsActive]
			FROM [dbo].[City] CI
					INNER JOIN [dbo].[State] S ON CI.StateId = S.Id
					AND ISNULL(S.IsDeleted,0) = 0
					INNER JOIN [dbo].[Country] C ON S.CountryId = C.Id
					AND ISNULL(C.IsDeleted,0) = 0
			WHERE	ISNULL(CI.IsDeleted,0) = 0
					AND (ISNULL(@CountryId,0) = 0 OR S.[CountryId] = @CountryId)
					AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
					AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[CountryId],
			temp.[CountryName],
			temp.[StateId],
			temp.[StateName],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempCity AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/******************************************************************************************************************************/

Name : Nilesh
Date : 12-JAN-2018

/*******************************************************************************************************************
	SP Name : GetCountries
	Comment : Changes in  GetCountries
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCountries]    Script Date: 1/11/2018 12:06:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetCountries]
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT * FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetStates
	Comment : Changes in  GetStates
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetStates]    Script Date: 1/11/2018 12:07:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetStates]
	@CountryId INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[State]	
		 WHERE	[CountryId] = @CountryId
				AND ISNULL(IsDeleted,0) = 0
				AND ISNULL(IsActive,0) = 1
		 ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetCities
	Comment : Changes in  GetCities
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCities]    Script Date: 1/11/2018 12:08:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetCities]
	@StateId INT
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[City]	
		 WHERE	[StateId] = @StateId
				AND ISNULL(IsDeleted,0) = 0
				AND ISNULL(IsActive,0) = 1
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : AddNationality
	Comment : Create SP AddNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddNationality]    Script Date: 1/11/2018 12:26:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddNationality]	
	@Name			NVARCHAR(255)			,	
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Nationality]
           ([Id]           
           ,[Name]		   
		   ,[Description]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Description
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateNationality
	Comment : Create SP UpdateNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateNationality]    Script Date: 1/11/2018 12:28:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateNationality]
	@Id				UNIQUEIDENTIFIER		,
	@Name			NVARCHAR(255)			,	
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Nationality]
		SET	[Name]			=	@Name		   
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteNationality
	Comment : Create SP DeleteNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteNationality]    Script Date: 1/11/2018 12:32:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteNationality]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Nationality] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetNationalityById
	Comment : Create SP GetNationalityById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetNationalityById]    Script Date: 1/11/2018 1:20:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetNationalityById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Nationality]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchNationality
	Comment : Create SP SearchNationality
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchNationality]    Script Date: 1/11/2018 1:21:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchNationality] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchNationality]			
	@Name			NVARCHAR(255)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempNationality
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,   [Description]	NVARCHAR(MAX)		NULL	
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Nationality]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  
						)


		INSERT INTO #tempNationality ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN [Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN [Description] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],				
				[Name],
				[Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Nationality]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Name],			
			temp.[Description],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempNationality AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/*******************************************************************************************************************
	SP Name : SearchAdvanceProfile
	Comment : Changes in SP SearchAdvanceProfile
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceProfile]    Script Date: 1/11/2018 1:08:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceProfile]
			@LastName			=	'' ,
			@FirstName			=	'' ,
			@ViewBy				=	NULL ,
			@City				=	'' ,
			@PostalCode			=	'' ,
			@MemberTypeId		=	NULL ,
			@MemberNo			=	'' ,
			@Keyword			=	'' ,
			@Communication		=	'' ,
			@ClientID			=	'' ,
			@CorpNo				=	'' ,
			@IATANo				=	'' ,
			@IsNegRates			=	0 ,
			@IsShowInActive		=	0
*/
ALTER PROCEDURE [dbo].[SearchAdvanceProfile]
	@LastName			NVARCHAR(255)		=	NULL,
	@FirstName			NVARCHAR(255)		=	NULL,
	@ViewBy				UNIQUEIDENTIFIER	=	NULL,
	@City				NVARCHAR(255)		=	NULL,
	@PostalCode			NVARCHAR(255)		=	NULL,
	@MemberTypeId		UNIQUEIDENTIFIER	=	NULL,
	@MemberNo			NVARCHAR(255)		=	NULL,
	@Keyword			NVARCHAR(255)		=	NULL,
	@Communication		NVARCHAR(255)		=	NULL,
	@ClientID			NVARCHAR(255)		=	NULL,
	@IATANo				NVARCHAR(255)		=	NULL,
	@CorpNo				NVARCHAR(255)		=	NULL,
	@IsNegRates			BIT					=	NULL,
	@IsShowInActive		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  P.[CreatedOn] DESC

				) AS RowNum,
				P.[Id], 
				T.Id AS TitleId,
				ISNULL(T.[Title],'') AS Title, 
				ISNULL(P.[FirstName],'') AS FirstName, 
				ISNULL(P.[LastName],'') AS LastName, 
				ISNULL(P.[TelephoneNo],'') AS TelephoneNo, 
				ISNULL(P.[Email],'') AS Email,   
				ISNULL(P.[Address],'') AS [Address],
				ISNULL(C.[Name],'') AS [City],
				ISNULL(P.[ZipCode],'') AS ZipCode,
				ISNULL(P.[CountryId],0) AS CountryId,
				ISNULL(P.[StateId],0) AS StateId,
				ISNULL(P.[CityId],0) AS CityId,
				P.[CreatedOn], 
				P.[IsActive]
			FROM [dbo].[IndividualProfile] P
					LEFT JOIN [dbo].[Title] T ON P.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ProfileType] PT ON P.ProfileTypeId= PT.Id AND ISNULL(PT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Vip] V ON P.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Nationality] N ON P.NationalityId= N.Id AND ISNULL(N.IsDeleted,0) = 0			
					LEFT JOIN [dbo].[City] C ON P.CityId = C.Id 
					LEFT JOIN [dbo].[State] S ON P.StateId = S.Id 
					LEFT JOIN [dbo].[Country] CO ON P.CountryId = CO.Id 
				WHERE	ISNULL(P.IsDeleted,0) = 0
						AND (ISNULL(@FirstName,'') = '' OR P.[FirstName] LIKE '%'+ @FirstName +'%')  
						AND (ISNULL(@LastName,'') = '' OR P.[LastName] LIKE '%'+ @LastName +'%')  
						AND (ISNULL(@City,'') = '' OR C.[Name] LIKE '%'+ @City +'%')  
						AND (ISNULL(@PostalCode,'') = '' OR P.[ZipCode] LIKE '%'+ @PostalCode +'%')  
						AND (@IsShowInActive IS NULL OR 
								P.IsActive IN  (CASE WHEN @IsShowInActive = 0 THEN 1 ELSE P.IsActive END))


END

/**+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++***/

Name : Nilesh
Date : 15-JAN-2018


/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment : Create SP GetRoomDetailsForRoomPlan
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 1/11/2018 1:08:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@RoomNo				=	'' 
*/
CREATE PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomStatus] RS ON R.StatusId = RS.Id AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END



/*******************************************************************************************************************
	SP Name : UpdateRoomCheckInStatus
	Comment : Create SP UpdateRoomCheckInStatus
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomCheckInStatus]    Script Date: 1/15/2018 3:17:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomCheckInStatus]
	@Id				UNIQUEIDENTIFIER	,
	@StatusId		UNIQUEIDENTIFIER	,
	@IsOccupied		BIT					,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[IsOccupied]	=	@IsOccupied   
		   ,[StatusId]		=	@StatusId        
		   ,[UpdatedBy]		=	@UpdatedBy			   	   
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateRoomCheckOutStatus
	Comment : Create SP UpdateRoomCheckOutStatus
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomCheckOutStatus]    Script Date: 1/15/2018 3:17:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomCheckOutStatus]
	@Id				UNIQUEIDENTIFIER	,
	@StatusId		UNIQUEIDENTIFIER	,
	@IsOccupied		BIT					,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[IsOccupied]	=	@IsOccupied   
		   ,[StatusId]		=	@StatusId        
		   ,[UpdatedBy]		=	@UpdatedBy			   	   
		   ,[UpdatedOn]		=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id    
END

/********* Create  Table ReservationLog ************/

/****** Object:  Table [dbo].[ReservationLog]    Script Date: 1/5/2018 3:23:20 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationLog](
	[Id] [uniqueidentifier] NOT NULL,
	[ReservationId] [uniqueidentifier] NOT NULL,
	[ProfileId] [uniqueidentifier] NOT NULL,
	[RoomId] [uniqueidentifier] NOT NULL,
	[RoomStatusId] [uniqueidentifier] NOT NULL,
	[CheckInDate] [datetime] NOT NULL,
	[CheckInTime] [time](7) NULL,
	[CheckOutDate] [datetime] NULL,
	[CheckOutTime] [time](7) NULL,
	[IsActive] [bit] NULL,	
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationLog] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[ReservationLog]  WITH CHECK ADD  CONSTRAINT [FK_ReservationLog_Reservation] FOREIGN KEY([ReservationId])
REFERENCES [dbo].[Reservation] ([Id])
GO

ALTER TABLE [dbo].[ReservationLog] CHECK CONSTRAINT [FK_ReservationLog_Reservation]
GO



/*******************************************************************************************************************
	SP Name : GetReservationLogById
	Comment : Create SP GetReservationLogById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationLogById]    Script Date: 1/15/2018 3:53:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationLogById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationLog]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY CreatedOn DESC
END

/*******************************************************************************************************************
	SP Name : AddReservationLog
	Comment : Create SP AddReservationLog
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationLog]    Script Date: 1/15/2018 3:56:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationLog]	
	@ReservationId		UNIQUEIDENTIFIER				,	
	@ProfileId			UNIQUEIDENTIFIER				,	
	@RoomId				UNIQUEIDENTIFIER				,	
	@RoomStatusId		UNIQUEIDENTIFIER	=	NULL	,	
	@CheckInDate		DATETIME			=	NULL	,	
	@CheckInTime		TIME(7)				=	NULL	,	
	@CheckOutDate		DATETIME			=	NULL	,	
	@CheckOutTime		TIME(7)				=	NULL	,	
	@IsActive			BIT					=	NULL	,		
	@CreatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationLog]
           ([Id]           
           ,[ReservationId]		   
		   ,[ProfileId]
		   ,[RoomId]
		   ,[RoomStatusId]
		   ,[CheckInDate]
		   ,[CheckInTime]
		   ,[CheckOutDate]
		   ,[CheckOutTime]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@ReservationId
			   ,@ProfileId
			   ,@RoomId
			   ,@RoomStatusId
			   ,@CheckInDate
			   ,@CheckInTime
			   ,@CheckOutDate
			   ,@CheckOutTime
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END





/*******************************************************************************************************************
	SP Name : UpdateReservationLog
	Comment : Create SP UpdateReservationLog
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationLog]    Script Date: 1/15/2018 3:56:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationLog]	
	@Id					UNIQUEIDENTIFIER				,	
	@ReservationId		UNIQUEIDENTIFIER				,	
	@ProfileId			UNIQUEIDENTIFIER				,	
	@RoomId				UNIQUEIDENTIFIER				,	
	@RoomStatusId		UNIQUEIDENTIFIER	=	NULL	,	
	@CheckInDate		DATETIME			=	NULL	,	
	@CheckInTime		TIME(7)				=	NULL	,	
	@CheckOutDate		DATETIME			=	NULL	,	
	@CheckOutTime		TIME(7)				=	NULL	,	
	@IsActive			BIT					=	NULL	,		
	@UpdatedBy			INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog]
		SET		[ReservationId]		   =	@ReservationId
			,	[ProfileId]			   =	@ProfileId
			,	[RoomId]			   =	@RoomId
			,	[RoomStatusId]		   =	@RoomStatusId
			,	[CheckInDate]		   =	@CheckInDate
			,	[CheckInTime]		   =	@CheckInTime
			,	[CheckOutDate]		   =	@CheckOutDate
			,	[CheckOutTime]		   =	@CheckOutTime
			,	[UpdatedBy]			   =	@UpdatedBy
			,	[UpdatedOn]			   =	GETDATE()
			,	[IsActive]			   =	@IsActive
     WHERE		ISNULL(IsDeleted,0) = 0
				AND Id = @Id

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : DeleteReservationLog
	Comment : Create SP DeleteReservationLog
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationLog]    Script Date: 1/15/2018 4:06:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationLog]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationLog] 
		SET		[IsDeleted]		=	1
			,	[UpdatedBy]		=	@UpdatedBy					   
			,	[UpdatedOn]		=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND Id = @Id

	SELECT @Id AS Id
    
END




/*******************************************************************************************************************
	SP Name : GetReservationLogDetails
	Comment : Create SP GetReservationLogDetails
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationLogDetails]    Script Date: 1/15/2018 3:53:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationLogDetails]
	@ReservationId	UNIQUEIDENTIFIER 	= 	NULL	,
	@RoomId			UNIQUEIDENTIFIER 	= 	NULL	,
	@Id 			UNIQUEIDENTIFIER 	= 	NULL	
	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationLog]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND (@ReservationId IS NULL OR ReservationId = @ReservationId)
				AND (@RoomId IS NULL OR RoomId = @RoomId)
				AND (@Id IS NULL OR Id = @Id)
		ORDER BY CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Changes in SP SearchAdvanceRoom
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 1/15/2018 6:28:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	'B86D365C-AAC5-46E9-BFF8-07A9FC6DE7C9'	,
			@ArrivalDate	=	'2018-01-02'	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@Type				NVARCHAR(255)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription
		
				
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1		
					--AND ISNULL(R.IsOccupied,0) = 0				
					AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
						


END




/*******************************************************************************************************************
	SP Name : GetRoomTypeDetailsForRateSheet
	Comment : Create SP GetRoomTypeDetailsForRateSheet
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetRoomTypeDetailsForRateSheet]    Script Date: 1/15/2018 5:43:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeDetailsForRateSheet] '', '2018/01/02'
*/

CREATE PROCEDURE [dbo].[GetRoomTypeDetailsForRateSheet]
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,
	@ArrivalDate	NVARCHAR(25)	=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT	RT.Id,
			ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
			ISNULL(RT.[Description],'') AS [Description],
			ISNULL(RT.RoomCapacity,'') AS [RoomCapacity],
			(ISNULL(RT.NoOfRooms,0) - 
					(SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 
							AND ISNULL(RL.IsDeleted,0) = 0 
							AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = RT.Id)
			)  AS AvailableRooms
		FROM RoomType RT
		WHERE	ISNULL(RT.IsDeleted,0) = 0 
				AND ISNULL(RT.IsActive,0) = 1
				AND (ISNULL(@RoomTypeCode,'') = '' OR RT.RoomTypeCode = @RoomTypeCode)
		ORDER BY RT.RoomTypeCode 
END


/************************************************************************************************************************/

Name: Nilesh
Date: 17-JAN-2018

/****** Drop Constraint FK_City_State **********/

ALTER TABLE [dbo].[City] DROP CONSTRAINT [FK_City_State];

/******** Allow StateId Null into City table ******/

ALTER TABLE [dbo].[City] ALTER COLUMN [StateId] INT NULL;


/******* Add CountryId column into City Table. ********/

ALTER TABLE [dbo].[City]
    ADD [CountryId] INT NULL;


/******** Allow RoomStatusId  Null into ReservationLog table ******/

ALTER TABLE [dbo].[ReservationLog] ALTER COLUMN [RoomStatusId] UNIQUEIDENTIFIER NULL;


	


/**** Create Table Floor *********/

/****** Object:  Table [dbo].[Floor]    Script Date: 1/17/2018 5:48:48 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Floor](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](25) NULL,
	[Name] [nvarchar](255) NOT NULL,
	[IsActive] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Floor] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


	
/******* Add FloorId  column into Room Table. ************/
ALTER TABLE [dbo].[Room]
    ADD [FloorId] UNIQUEIDENTIFIER NULL;

ALTER TABLE [dbo].[Room] WITH NOCHECK
	ADD CONSTRAINT [FK_Room_Floor] FOREIGN KEY ([FloorId]) REFERENCES [dbo].[Floor] ([Id]);
	
	
	
/*******************************************************************************************************************
	SP Name : AddFloor
	Comment : Create SP AddFloor
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[AddFloor]	
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Floor]
           ([Id]           
           ,[Name]		   
		   ,[Code]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Code
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END
GO

/*******************************************************************************************************************
	SP Name : ChangeRoomAllocation
	Comment : Create SP ChangeRoomAllocation
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[ChangeRoomAllocation]
	@ReservationId		UNIQUEIDENTIFIER,	
	@RoomId				UNIQUEIDENTIFIER,	
	@ArrivalDate		DATETIME,
	@DepartureDate		DATETIME,
	@UpdatedBy			INT

AS
BEGIN
	SET NOCOUNT ON;

	--Update Arrival Date & Departure in Reservation Table.
	UPDATE [dbo].[Reservation] 
		SET		[ArrivalDate]		=	 @ArrivalDate
				,[DepartureDate]	=	 @DepartureDate
				,[UpdatedBy]		=	 @UpdatedBy					   
				,[UpdatedOn]		=	GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND  Id = @ReservationId

	--Update RoomId in Room Reservation Mapping Table.
	UPDATE [dbo].[ReservationRoomMapping] 
		SET		[RoomId]		=	 @RoomId				
				,[UpdatedBy]	=	 @UpdatedBy					   
				,[UpdatedOn]	=	GETDATE()
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND  ReservationId = @ReservationId

	--Update CheckIn & CheckOut Date in CheckInCheckOutDetail Table.
	UPDATE [dbo].CheckInCheckOutDetail 
		SET		[CheckInDate]	=	@ArrivalDate
				,[CheckOutDate]	=	@DepartureDate
				,[UpdatedBy]	=	@UpdatedBy					   
				,[UpdatedOn]	=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND  ReservationId = @ReservationId

	--Update RoomId, CheckIn & CheckOut Date in Reservation Log Table.
	UPDATE [dbo].[ReservationLog] 
		SET		[RoomId]		=	@RoomId
				,[CheckInDate]	=	@ArrivalDate
				,[CheckOutDate]	=	@DepartureDate
				,[UpdatedBy]	=	@UpdatedBy					   
				,[UpdatedOn]	=	GETDATE()
     WHERE		ISNULL(IsDeleted,0) = 0 
				AND  ReservationId = @ReservationId

	SELECT @ReservationId AS Id
    
END
GO


/*******************************************************************************************************************
	SP Name : CheckCountryCodeAvailable
	Comment : Create SP CheckCountryCodeAvailable
	
*******************************************************************************************************************/

/*
	EXEC [CheckCountryCodeAvailable] 
		@Id = NULL,
		@Code = 'IE'
*/

CREATE PROCEDURE [dbo].[CheckCountryCodeAvailable]
	@Id		INT				=	NULL,
	@Code	NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[Country] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY Code 
END
GO




/*******************************************************************************************************************
	SP Name : CheckFloorCodeAvailable
	Comment : Create SP CheckFloorCodeAvailable
	
*******************************************************************************************************************/

/*
	EXEC [CheckFloorCodeAvailable] 
		@Id = NULL,
		@Code = 'COMP'
*/

CREATE PROCEDURE [dbo].[CheckFloorCodeAvailable]
	@Id			UNIQUEIDENTIFIER	=	NULL,
	@Code		NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[Floor]
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY [Name]
END
GO




/*******************************************************************************************************************
	SP Name : DeleteFloor
	Comment : Create SP DeleteFloor
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[DeleteFloor]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Floor] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END
GO


/*******************************************************************************************************************
	SP Name : GetFloorById
	Comment : Create SP GetFloorById
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[GetFloorById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Floor]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END
GO

/*******************************************************************************************************************
	SP Name : GetFloors
	Comment : Create SP GetFloors
	
*******************************************************************************************************************/

CREATE PROCEDURE [dbo].[GetFloors]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Floor]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END
GO



/*******************************************************************************************************************
	SP Name : GetReservationDetailsForRoomPlan
	Comment : Create SP GetReservationDetailsForRoomPlan
	
*******************************************************************************************************************/

/*
	EXEC [GetReservationDetailsForRoomPlan]
			@RoomId				=	'014D170C-97F1-4876-BB45-E1F7FC690217' ,			
			@StartDate			=	'2018/01/01',
			@EndDate			=	'2018/01/07'
*/
CREATE PROCEDURE [dbo].[GetReservationDetailsForRoomPlan]
	@RoomId				UNIQUEIDENTIFIER	=	NULL,	
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT DISTINCT
				RL.ReservationId, 
				RL.ProfileId, 
				ISNULL(RE.FirstName,'') AS FirstName,
				ISNULL(RE.LastName,'') AS LastName,
				ISNULL(RE.NoOfNight,0) AS NoOfNight,
				RL.RoomId, 
				RL.RoomStatusId, 
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				CONVERT(varchar(12),RL.CheckInDate,103) AS CheckInDateString,
				RL.CheckInDate,
				CONVERT(varchar(12),RL.CheckOutDate,103) AS CheckOutDateString,
				RL.CheckOutDate
			FROM ReservationLog RL 
				INNER JOIN Reservation RE ON RL.ReservationId = RE.Id
					AND ISNULL(RE.IsDeleted,0) = 0 
				INNER JOIN Room R ON RL.RoomId = R.Id
					AND ISNULL(R.IsDeleted,0) = 0  AND ISNULL(R.IsActive,0) = 1
				INNER JOIN IndividualProfile IPR ON IPR.Id = RE.ProfileId
					AND ISNULL(IPR.IsDeleted,0) = 0 AND ISNULL(IPR.IsActive,0) = 1
				LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
					AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 


			WHERE ISNULL(RL.IsDeleted,0) = 0 AND ISNULL(RL.IsActive,0) = 1 
				AND RL.RoomId = @RoomId
				AND (
						(CAST(RL.CheckInDate  AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
						OR (CAST(RL.CheckOutDate AS DATE)  BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE))
					) 

			ORDER BY RL.CheckInDate, RL.CheckOutDate ASC

END
GO



/*******************************************************************************************************************
	SP Name : SearchFloor
	Comment : Create SP SearchFloor
	
*******************************************************************************************************************/

/*
	EXEC [SearchFloor] '', '', 1, 10
*/

CREATE PROCEDURE [dbo].[SearchFloor]			
	@Code			NVARCHAR(25)	=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempFloor
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]			NVARCHAR(25)		NULL	
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Floor]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
						)


		INSERT INTO #tempFloor ([RowNum], [Id], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],				
				[Code],
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Floor]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],			
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempFloor AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END
GO


/*******************************************************************************************************************
	SP Name : UpdateFloor
	Comment : Create SP UpdateFloor
	
*******************************************************************************************************************/


CREATE PROCEDURE [dbo].[UpdateFloor]
	@Id				UNIQUEIDENTIFIER		,
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Floor]
		SET	[Name]			=	@Name		   
		   ,[Code]			=	@Code
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END
GO


	
/*******************************************************************************************************************
	SP Name : AddCity
	Comment : Changes in SP AddCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddCity]    Script Date: 1/17/2018 5:56:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddCity]
	@CountryId		INT						,	
	@StateId		INT				= NULL	,	
	@Name			NVARCHAR(255)			,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id INT
	SET @Id = (SELECT ISNULL(MAX(Id),0) AS MaxId FROM [dbo].[City])

	SET @Id = (ISNULL(@Id,0) + 1)

	INSERT INTO [dbo].[City]
           ([Id]
		   ,[CountryId]
		   ,[StateId]           
           ,[Name]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@CountryId
			   ,@StateId			   
			   ,@Name
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : AddRoom
	Comment : Changes in SP AddRoom
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRoom]    Script Date: 1/17/2018 5:57:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoom]
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RoomNo			NVARCHAR(255)				,
	@Type			NVARCHAR(50)		= NULL	,	
	@Description	NVARCHAR(1000)		= NULL	,	
	@StatusId		UNIQUEIDENTIFIER	= NULL	,	
	@FloorId		UNIQUEIDENTIFIER	= NULL	,	
	@IsOccupied		BIT					= NULL	,	
	@IsActive		BIT					= NULL	,		
	@CreatedBy		INT					= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Room]
           ([Id]
           ,[RoomTypeId]
           ,[RoomNo]
		   ,[Type]
		   ,[Description]
		   ,[StatusId]
		   ,[FloorId]
		   ,[IsOccupied]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeId
			   ,@RoomNo
			   ,@Type
			   ,@Description
			   ,@StatusId
			   ,@FloorId
			   ,@IsOccupied
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : CheckRoomNoAvailable
	Comment : Changes in SP CheckRoomNoAvailable
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckRoomNoAvailable]    Script Date: 1/17/2018 5:57:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckRoomNoAvailable] 
		@Id = NULL,
		@RoomNo = '1'
*/

ALTER PROCEDURE [dbo].[CheckRoomNoAvailable]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@RoomNo			NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[Room] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)				
				AND [RoomNo] = @RoomNo
		ORDER BY [RoomNo] 
END


/*******************************************************************************************************************
	SP Name : GetCities
	Comment : Changes in SP GetCities
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCities]    Script Date: 1/17/2018 5:59:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**
	EXEC [GetCities]  4132, 1
**/

ALTER PROCEDURE [dbo].[GetCities]
	@StateId		INT		=	NULL	,
	@CountryId		INT		=	NULL	
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[City]	C			
		 WHERE	(ISNULL(@StateId,0) = 0 OR [StateId] = @StateId)
				AND (ISNULL(@CountryId,0) = 0 OR [CountryId] = @CountryId)
				AND ISNULL(IsDeleted,0) = 0
				AND ISNULL(IsActive,0) = 1
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetCityById
	Comment : Changes in SP GetCityById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCityById]    Script Date: 1/17/2018 5:59:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetCityById]
	@Id INT = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT CI.*
		FROM [dbo].[City] CI
		WHERE	ISNULL(CI.IsDeleted,0) = 0 
				AND CI.Id = @Id
		ORDER BY CI.[Name]
END


/*******************************************************************************************************************
	SP Name : GetCountries
	Comment : Changes in SP GetCountries
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetCountries]    Script Date: 1/17/2018 6:01:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetCountries]
AS
BEGIN
	
	SET NOCOUNT ON;

	--Ireland
	SELECT *, 1 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
				AND [Code] = 'IE'
	UNION

	--United Kingdom
	SELECT *, 2 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
				AND [Code] = 'GB'
	UNION

	--United States
	SELECT *, 3 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
				AND [Code] = 'US'
	UNION

	SELECT *, 4 AS SortOrder FROM Country
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND ISNULL(IsActive,0) = 1
		ORDER BY 
				SortOrder ASC,
				[Name] ASC
END

/*******************************************************************************************************************
	SP Name : GetRoomDetailsForRoomPlan
	Comment : Changes in SP GetRoomDetailsForRoomPlan
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomDetailsForRoomPlan]    Script Date: 1/17/2018 6:02:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [GetRoomDetailsForRoomPlan]
			@RoomTypeId			=	NULL ,
			@RoomNo				=	'' ,
			@StartDate			=	'2018/01/01',
			@EndDate			=	'2018/01/07'
*/
ALTER PROCEDURE [dbo].[GetRoomDetailsForRoomPlan]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL,
	@RoomNo				NVARCHAR(255)		=	NULL,
	@StartDate			NVARCHAR(15)		=	NULL,
	@EndDate			NVARCHAR(15)		=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC, RT.RoomTypeCode ASC

				) AS RowNum,
				R.Id AS Id,
				R.RoomTypeId AS RoomTypeId,
				ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],
				R.StatusId AS RoomStatusId,
				ISNULL(RS.[Name],'') AS RoomStatus,
				ISNULL(RS.ColorCode,'') AS RoomStatusColor,
				ISNULL(R.IsOccupied,0) AS IsOccupied
			FROM [dbo].[Room] R 
					INNER JOIN [dbo].[RoomType] RT ON R.RoomTypeId = RT.Id AND ISNULL(RT.IsDeleted,0) = 0
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND (
												( CAST(RL.CheckInDate  AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
												OR 
												( CAST(RL.CheckOutDate AS DATE) BETWEEN CAST(@StartDate AS DATE) AND CAST(@EndDate AS DATE) )
										)
								) AS RL 
						ON RL.RoomId = R.Id
					LEFT JOIN [dbo].[RoomStatus] RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 

			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND (@RoomTypeId IS NULL OR R.RoomTypeId = @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo = @RoomNo)


END




/*******************************************************************************************************************
	SP Name : SearchCity
	Comment : Changes in SP SearchCity
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchCity]    Script Date: 1/17/2018 6:02:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchCity] 0, 0, '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchCity]		
	@CountryId		INT				=	NULL	,
	@StateId		INT				=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempCity
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			INT					NOT NULL
		,	[CountryId]		INT					NULL
		,   [CountryName]	NVARCHAR(255)		NULL
		,	[StateId]		INT					NULL
		,   [StateName]	NVARCHAR(255)		NULL		
		,   [Name]			NVARCHAR(255)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT CI.Id) 
						FROM [dbo].[City] CI	
							LEFT JOIN [dbo].[State] S ON CI.StateId = S.Id
								AND ISNULL(S.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] C ON CI.CountryId = C.Id
								AND ISNULL(C.IsDeleted,0) = 0															
						WHERE	ISNULL(CI.IsDeleted,0) = 0
								AND (ISNULL(@CountryId,0) = 0 OR CI.[CountryId] = @CountryId)
								AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
								AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%')  
						)


		INSERT INTO #tempCity 
		(
			[RowNum], 
			[Id], 
			[CountryId], 
			[CountryName], 
			[StateId], 
			[StateName],
			[Name], 
			[CreatedOn], 
			[IsActive]
		)
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN CI.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN CI.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'asc'
							THEN C.[Name] END ASC,
						CASE WHEN @SortColumn = 'CountryName' and @SortDirection = 'desc'
							THEN C.[Name] END DESC,

						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'asc'
							THEN S.[Name] END ASC,
						CASE WHEN @SortColumn = 'StateName' and @SortDirection = 'desc'
							THEN S.[Name] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN CI.[Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN CI.[Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN CI.[Name] END ASC

				) AS RowNum,
				CI.[ID],
				CI.[CountryId],
				C.[Name] AS CountryName,
				CI.[StateId],
				S.[Name] AS StateName,				
				CI.[Name],
				CI.[CreatedOn],
				CI.[IsActive]
			FROM [dbo].[City] CI
					LEFT JOIN [dbo].[State] S ON CI.StateId = S.Id
					AND ISNULL(S.IsDeleted,0) = 0
					LEFT JOIN [dbo].[Country] C ON CI.CountryId = C.Id
					AND ISNULL(C.IsDeleted,0) = 0
			WHERE	ISNULL(CI.IsDeleted,0) = 0
					AND (ISNULL(@CountryId,0) = 0 OR CI.[CountryId] = @CountryId)
					AND (ISNULL(@StateId,0) = 0 OR CI.[StateId] = @StateId)
					AND (ISNULL(@Name,'') = '' OR CI.[Name] LIKE '%'+ @Name +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[CountryId],
			temp.[CountryName],
			temp.[StateId],
			temp.[StateName],
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempCity AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/*******************************************************************************************************************
	SP Name : UpdateCity
	Comment : Changes in SP UpdateCity
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateCity]    Script Date: 1/17/2018 6:03:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateCity]
	@Id				INT						,
	@CountryId		INT						,
	@StateId		INT				= NULL	,	
	@Name			NVARCHAR(255)			,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[City]
		SET	[CountryId]		=	@CountryId
		   ,[StateId]		=	@StateId 		   
           ,[Name]			=	@Name		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END





/*******************************************************************************************************************
	SP Name : UpdateRoom
	Comment : Changes in SP UpdateRoom
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoom]    Script Date: 1/17/2018 6:16:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRoom]
	@Id				UNIQUEIDENTIFIER			,
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RoomNo			NVARCHAR(255)				,
	@Type			NVARCHAR(50)		= NULL	,	
	@Description	NVARCHAR(1000)		= NULL	,	
	@StatusId		UNIQUEIDENTIFIER	= NULL	,	
	@FloorId		UNIQUEIDENTIFIER	= NULL	,	
	@IsOccupied		BIT					= NULL	,	
	@IsActive		BIT					= NULL	,	
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Room] 
		SET	[RoomTypeId]	= @RoomTypeId
           ,[RoomNo]		= @RoomNo
		   ,[Type]			= @Type
		   ,[Description]	= @Description
		   ,[StatusId]		= @StatusId
		   ,[FloorId]		= @FloorId
		   ,[IsOccupied]	= @IsOccupied
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : AddRoom
	Comment : Changes in SP AddRoom
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddRoom]    Script Date: 1/17/2018 6:17:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoom]
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RoomNo			NVARCHAR(255)				,
	@Type			NVARCHAR(50)		= NULL	,	
	@Description	NVARCHAR(1000)		= NULL	,	
	@StatusId		UNIQUEIDENTIFIER	= NULL	,	
	@FloorId		UNIQUEIDENTIFIER	= NULL	,	
	@IsOccupied		BIT					= NULL	,	
	@IsActive		BIT					= NULL	,		
	@CreatedBy		INT					= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Room]
           ([Id]
           ,[RoomTypeId]
           ,[RoomNo]
		   ,[Type]
		   ,[Description]
		   ,[StatusId]
		   ,[FloorId]
		   ,[IsOccupied]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeId
			   ,@RoomNo
			   ,@Type
			   ,@Description
			   ,@StatusId
			   ,@FloorId
			   ,@IsOccupied
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/********************************************************************************************************************/

Name : Nilesh
Date : 18-JAN-2018

/************ Add new column IsWeekEndPrice **********/
ALTER TABLE RoomTypeRateTypeMapping ADD IsWeekEndPrice BIT NULL
GO



/*******************************************************************************************************************
	SP Name : AddRoomTypeRateTypeMapping
	Comment : Changes in SP AddRoomTypeRateTypeMapping
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[AddRoomTypeRateTypeMapping]    Script Date: 1/18/2018 1:52:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoomTypeRateTypeMapping]
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RateTypeId		UNIQUEIDENTIFIER			,
	@Description	NVARCHAR(500)		= NULL	,
	@Amount			DECIMAL(18,2)				,	
	@IsWeekEndPrice	BIT					= NULL	,
	@IsActive		BIT					= NULL	,	
	@CreatedBy		INT					= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RoomTypeRateTypeMapping]
           ([Id]
           ,[RoomTypeId]
		   ,[RateTypeId]
           ,[Description]
		   ,[Amount]
		   ,[IsWeekEndPrice]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeId
			   ,@RateTypeId
			   ,@Description
			   ,@Amount
			   ,@IsWeekEndPrice
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : UpdateRoomTypeRateTypeMapping
	Comment : Changes in SP UpdateRoomTypeRateTypeMapping
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomTypeRateTypeMapping]    Script Date: 1/18/2018 1:52:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRoomTypeRateTypeMapping]
	@Id				UNIQUEIDENTIFIER				,
	@RoomTypeId		UNIQUEIDENTIFIER				,
	@RateTypeId		UNIQUEIDENTIFIER				,	
	@Description	NVARCHAR(500)		=	NULL	,	
	@Amount			DECIMAL(18,2)					,	
	@IsWeekEndPrice	BIT					=	NULL	,
	@IsActive		BIT								,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomTypeRateTypeMapping] 
		SET	[RoomTypeId]		=	@RoomTypeId
		   ,[RateTypeId]		=	@RateTypeId
           ,[Description]		=	@Description
		   ,[Amount]			=	@Amount
		   ,[IsWeekEndPrice]	=	@IsWeekEndPrice
		   ,[UpdatedBy]			=	@UpdatedBy
		   ,[IsActive]			=	@IsActive
		   ,[UpdatedOn]			=	GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchRoomTypeRateTypeMapping
	Comment : Changes in SP SearchRoomTypeRateTypeMapping
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchRoomTypeRateTypeMapping]    Script Date: 1/18/2018 2:01:19 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoomTypeRateTypeMapping] NULL,NULL, NULL, NULL, 1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoomTypeRateTypeMapping]		
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,
	@RateTypeId		UNIQUEIDENTIFIER	=	NULL	,		
	@Amount			DECIMAL(18,2)		=	NULL	,
	@IsWeekEndPrice	BIT					=	NULL	,	
	@PageNum		INT					=	1		,
	@PageSize		INT					=	10		,
	@SortColumn		NVARCHAR(255)		=	NULL	,
	@SortDirection	NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,   [RoomTypeCode]	NVARCHAR(50)		NULL
		,	[RateTypeId]	UNIQUEIDENTIFIER	NULL
		,   [RateTypeCode]	NVARCHAR(50)		NULL
		,   [Description]	NVARCHAR(1000)		NULL
		,   [Amount]		DECIMAL(18,2)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT RTRTM.Id) 
						FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
							INNER JOIN [dbo].[RoomType] ROT 
								ON ROT.Id = RTRTM.RoomTypeId AND ISNULL(ROT.IsDeleted,0) = 0
							INNER JOIN [dbo].RateType RAT 
								ON RAT.Id = RTRTM.RateTypeId AND ISNULL(RAT.IsDeleted,0) = 0
						WHERE	ISNULL(RTRTM.IsDeleted,0) = 0
								AND (@RoomTypeId IS NULL OR RTRTM.RoomTypeId = @RoomTypeId)  
								AND (@RateTypeId IS NULL OR RTRTM.RateTypeId = @RateTypeId)  
								AND (ISNULL(@Amount,0) = 0 OR RTRTM.Amount = @Amount)
								AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
						)


		INSERT INTO #tempRoomTypeRateTypeMapping 
				([RowNum], [Id], [RoomTypeId], [RoomTypeCode], [RateTypeId], [RateTypeCode],
					[Description], [Amount], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN RTRTM.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN RTRTM.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN ROT.[RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN ROT.[RoomTypeCode] END DESC,

						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'asc'
							THEN RAT.[RateTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RateTypeCode' and @SortDirection = 'desc'
							THEN RAT.[RateTypeCode] END DESC,

						CASE WHEN @SortColumn = 'Amount' and @SortDirection = 'asc'
							THEN RTRTM.[Amount] END ASC,
						CASE WHEN @SortColumn = 'Amount' and @SortDirection = 'desc'
							THEN RTRTM.[Amount] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN RTRTM.[CreatedOn] END DESC

				) AS RowNum,
				RTRTM.[ID],
				ROT.Id AS RoomTypeId,
				ROT.[RoomTypeCode],
				RAT.Id AS RateTypeId,
				RAT.[RateTypeCode],
				RTRTM.[Description],
				RTRTM.[Amount],
				RTRTM.[CreatedOn],
				RTRTM.[IsActive]
			FROM [dbo].[RoomTypeRateTypeMapping] RTRTM
				INNER JOIN [dbo].[RoomType] ROT ON ROT.Id = RTRTM.RoomTypeId AND ISNULL(ROT.IsDeleted,0) = 0
				INNER JOIN [dbo].RateType RAT ON RAT.Id = RTRTM.RateTypeId AND ISNULL(RAT.IsDeleted,0) = 0
				WHERE	ISNULL(RTRTM.IsDeleted,0) = 0
						AND (@RoomTypeId IS NULL OR RTRTM.RoomTypeId = @RoomTypeId)  
						AND (@RateTypeId IS NULL OR RTRTM.RateTypeId = @RateTypeId)  
						AND (ISNULL(@Amount,0) = 0 OR RTRTM.Amount = @Amount)
						AND ISNULL(RTRTM.IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum]		,
			temp.[Id]			,						
			temp.[RoomTypeId]	,
			temp.[RoomTypeCode]	,
			temp.[RateTypeId]	,
			temp.[RateTypeCode]	,
			temp.[Description]	,
			temp.[Amount]		,
			temp.[CreatedOn]	,	
			temp.[IsActive]		,
			@TotalCount AS TotalCount
	FROM	#tempRoomTypeRateTypeMapping AS temp
	WHERE	temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : CheckRoomTypeRateTypeMappingAvailable
	Comment : Changes in SP CheckRoomTypeRateTypeMappingAvailable
	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[CheckRoomTypeRateTypeMappingAvailable]    Script Date: 1/18/2018 1:55:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckRoomTypeRateTypeMappingAvailable] 
		@Id = 'DB45342E-A543-41F5-8021-682900548B6F',
		@RoomTypeId = 'E4D83BCE-DAB2-457A-98DA-2250C2ED6081',
		@RateTypeId = '83DC25DC-5D62-4CFB-A05B-8C17C9BF7E65',
		@IsWeekEndPrice	= NULL
		
*/

ALTER PROCEDURE [dbo].[CheckRoomTypeRateTypeMappingAvailable]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@RoomTypeId		UNIQUEIDENTIFIER			,
	@RateTypeId		UNIQUEIDENTIFIER			,
	@IsWeekEndPrice	BIT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [RoomTypeRateTypeMapping] 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND RoomTypeId = @RoomTypeId
				AND RateTypeId = @RateTypeId
				AND ISNULL(IsWeekEndPrice,0) = ISNULL(@IsWeekEndPrice,0)
				
		ORDER BY CreatedOn
END


/***************** Add WeekEndPrice Data ****/

INSERT INTO [RoomTypeRateTypeMapping] ([Id],[RoomTypeId],[RateTypeId],[Amount],[IsActive],[CreatedBy],[CreatedOn],[IsWeekEndPrice])

SELECT NEWID() AS Id, RoomTypeId, RateTypeId, Amount, 1 AS [IsActive], 1 AS [CreatedBy], 
GETDATE() AS [CreatedOn], 1 AS [IsWeekEndPrice]
 FROM [RoomTypeRateTypeMapping] WHERE ISNULL(IsDeleted,0) = 0 
AND ISNULL(IsWeekEndPrice,0) = 0


/*******************************************************************************************************************
	SP Name : GetRateSheetDetail
	Comment : Changes in SP GetRateSheetDetail
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRateSheetDetail]    Script Date: 1/18/2018 2:18:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRateSheetDetail] 
		@RateTypeId = '0853E143-6F2B-48CC-B322-4714142D9A00',
		@RoomTypeId = '488FE9ED-4AA6-45D9-88F6-67FE6D5886D6',
		@IsShowWeekEndPrice = 0
*/
ALTER PROCEDURE [dbo].[GetRateSheetDetail]
	@RateTypeId				UNIQUEIDENTIFIER,
	@RoomTypeId				UNIQUEIDENTIFIER,
	@IsShowWeekEndPrice		BIT = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Amount AS DECIMAL(10,2)
	SET @Amount = 0

	CREATE TABLE #tempRoomTypeRateTypeMapping
	(
		Id				UNIQUEIDENTIFIER	NULL,
		RoomTypeId		UNIQUEIDENTIFIER	NULL,
		RateTypeId		UNIQUEIDENTIFIER	NULL,
		Amount			DECIMAL(18,2)		NULL,
		[Description]	NVARCHAR(1000)		NULL
	) 

	IF ISNULL(@IsShowWeekEndPrice,0) = 0
	BEGIN
		--1.) Get amount from mapping table. (Show WeekDay Price)
			INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
			SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, RTRTM.[Description]
			FROM [RoomTypeRateTypeMapping] RTRTM 
			WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
					AND RTRTM.RateTypeId = @RateTypeId 
					AND RTRTM.RoomTypeId = @RoomTypeId
					AND ISNULL(IsWeekEndPrice,0) = 0
			ORDER BY CreatedOn DESC
		--END
	END
	ELSE
	BEGIN

		--2.) Get amount from mapping table. (Show WeekEnd Price)
		INSERT INTO #tempRoomTypeRateTypeMapping (Id, RoomTypeId, RateTypeId, Amount, [Description])
		SELECT TOP 1 RTRTM.Id, RTRTM.RoomTypeId, RTRTM.RateTypeId, ISNULL(RTRTM.Amount,0) AS Amount, RTRTM.[Description]
		FROM [RoomTypeRateTypeMapping] RTRTM 
		WHERE	ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
				AND RTRTM.RateTypeId = @RateTypeId 
				AND RTRTM.RoomTypeId = @RoomTypeId
				AND ISNULL(IsWeekEndPrice,0) = 1
		ORDER BY CreatedOn DESC
		
	END


	SELECT * FROM #tempRoomTypeRateTypeMapping
END


/******************************************************************************/

Name : Nilesh
Date : 18-JAN-2018 03:20 PM

/*******************************************************************************************************************
	SP Name : GetReservationCharges
	Comment : Changes in SP GetReservationCharges
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCharges]    Script Date: 1/18/2018 3:14:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCharges]	
	@ReservationId		UNIQUEIDENTIFIER = NULL,
	@AdditionalChargeId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*, 1 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId = (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	UNION

	SELECT RC.*, 2 AS SortOrder
			FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (@ReservationId IS NULL OR RC.ReservationId = @ReservationId)			
				AND (@AdditionalChargeId IS NULL OR RC.AdditionalChargeId = @AdditionalChargeId)
				AND RC.AdditionalChargeId <> (SELECT TOP 1 Id 
								FROM AdditionalCharges WHERE ISNULL(IsDeleted,0) = 0 
								AND [Code] = '1000') -- Room Rent

	ORDER BY SortOrder
END

/*********** Create new table ReservationType ******/


/****** Object:  Table [dbo].[ReservationType]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationType](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationType] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO





/*******************************************************************************************************************
	SP Name : AddReservationType
	Comment : Create SP AddReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationType]    Script Date: 1/18/2018 4:01:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationType]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationType]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateReservationType
	Comment : Create SP UpdateReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationType]    Script Date: 1/18/2018 4:05:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationType]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationType]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : GetReservationTypeById
	Comment : Create SP GetReservationTypeById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationTypeById]    Script Date: 1/18/2018 4:05:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationTypeById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationType]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : DeleteReservationType
	Comment : Create SP DeleteReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteReservationType]    Script Date: 1/18/2018 4:51:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationType]
	@Id			UNIQUEIDENTIFIER	,	
	@UpdatedBy	INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationType] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : SearchReservationType
	Comment : Create SP SearchReservationType
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationType]    Script Date: 1/18/2018 4:51:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationType] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchReservationType]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationType
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationType]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempReservationType ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationType]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/*******************************************************************************************************************
	SP Name : GetReservationTypes
	Comment : Create SP GetReservationTypes
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationTypes]    Script Date: 1/18/2018 4:06:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationTypes]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationType]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/**** Update ReservationTypeId In Existing Data of Reservation Table*******/

-- 1.) Create Reservation Type by Web (Master Screen)

-- Credit Card
UPDATE Reservation SET ReservationTypeId = 
(SELECT TOP 1 Id FROM ReservationType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Credit Card')
WHERE ReservationTypeId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944'


--6pm Courtesy Hold
UPDATE Reservation SET ReservationTypeId = 
(SELECT TOP 1 Id FROM ReservationType WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='6pm Courtesy Hold')
WHERE ReservationTypeId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945'


/**** Add Foreign Key of ReservationTypeId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_ReservationType] FOREIGN KEY ([ReservationTypeId]) REFERENCES [dbo].[ReservationType] ([Id]);


/*********** Create new table Package ******/


/****** Object:  Table [dbo].[Package]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Package](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Package] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddPackage
	Comment : Create SP AddPackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPackage]    Script Date: 1/18/2018 5:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddPackage]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Package]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdatePackage
	Comment : Create SP UpdatePackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePackage]    Script Date: 1/18/2018 5:55:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdatePackage]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Package]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeletePackage
	Comment : Create SP DeletePackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeletePackage]    Script Date: 1/18/2018 5:55:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeletePackage]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Package] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetPackageById
	Comment : Create SP GetPackageById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPackageById]    Script Date: 1/18/2018 5:57:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPackageById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Package]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetPackages
	Comment : Create SP GetPackages
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPackages]    Script Date: 1/18/2018 5:58:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPackages]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Package]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchPackage
	Comment : Create SP SearchPackage
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPackage]    Script Date: 1/18/2018 5:58:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPackage] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchPackage]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPackage
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Package]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempPackage ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Package]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPackage AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/**** Add Foreign Key of PackageId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_Package] FOREIGN KEY ([PackageId]) REFERENCES [dbo].[Package] ([Id]);
	
/*******************************************************************************************************/

/*********** Create new table Market ******/


/****** Object:  Table [dbo].[Market]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Market](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_Market] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



/*******************************************************************************************************************
	SP Name : AddMarket
	Comment : Create SP AddMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddMarket]    Script Date: 1/18/2018 6:37:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddMarket]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Market]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateMarket
	Comment : Create SP UpdateMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateMarket]    Script Date: 1/18/2018 6:38:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateMarket]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Market]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteMarket
	Comment : Create SP DeleteMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteMarket]    Script Date: 1/18/2018 6:38:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteMarket]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Market] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetMarketById
	Comment : Create SP GetMarketById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetMarketById]    Script Date: 1/18/2018 6:39:21 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMarketById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Market]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetMarkets
	Comment : Create SP GetMarkets
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetMarkets]    Script Date: 1/18/2018 6:39:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMarkets]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Market]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : SearchMarket
	Comment : Create SP SearchMarket
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchMarket]    Script Date: 1/18/2018 6:40:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchMarket] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchMarket]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempMarket
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Market]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempMarket ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Market]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempMarket AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/**** Update MarketId In Existing Data of Reservation Table*******/

-- 1.) Create Market by Web (Master Screen)

-- Digital
UPDATE Reservation SET MarketId = 
(SELECT TOP 1 Id FROM Market WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Digital')
WHERE (MarketId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944' OR MarketId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945')



/**** Add Foreign Key of MarketId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_Market] FOREIGN KEY ([MarketId]) REFERENCES [dbo].[Market] ([Id]);
	
/*******************************************************************************************************************
	SP Name : GetAdditionalChargesByCode
	Comment : Changes in SP GetAdditionalChargesByCode
	
*******************************************************************************************************************/
	
	
/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesByCode]    Script Date: 1/18/2018 7:01:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetAdditionalChargesByCode]
	@Code NVARCHAR(25) = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Code = @Code
		ORDER BY [Description]
END

/*******************************************************************************************************************
	SP Name : GetAdditionalChargesById
	Comment : Changes in SP GetAdditionalChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetAdditionalChargesById]    Script Date: 1/18/2018 7:02:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetAdditionalChargesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[AdditionalCharges]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Description]
END

/*******************************************************************************************************************
	SP Name : GetIndividualProfileById
	Comment : Changes in SP GetIndividualProfileById
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetIndividualProfileById]    Script Date: 1/18/2018 7:02:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetIndividualProfileById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[IndividualProfile]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END



/*******************************************************************************************************************
	SP Name : GetPreferenceById
	Comment : Changes in SP GetPreferenceById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPreferenceById]    Script Date: 1/18/2018 7:03:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetPreferenceById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Preferences]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Description]
END



/*******************************************************************************************************************
	SP Name : GetPreferenceGroupById
	Comment : Changes in SP GetPreferenceGroupById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPreferenceGroupById]    Script Date: 1/18/2018 7:03:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetPreferenceGroupById]	
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PreferenceGroup]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetRateTypeById
	Comment : Changes in SP GetRateTypeById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRateTypeById]    Script Date: 1/18/2018 7:04:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRateTypeById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RateType]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [RateTypeCode]
END



/*******************************************************************************************************************
	SP Name : GetReservationById
	Comment : Changes in SP GetReservationById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationById]    Script Date: 1/18/2018 7:05:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Reservation]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END




/*******************************************************************************************************************
	SP Name : GetReservationCancellationReasonById
	Comment : Changes in SP GetReservationCancellationReasonById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationCancellationReasonById]    Script Date: 1/18/2018 7:05:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationCancellationReasonById]
	@Id UNIQUEIDENTIFIER =  NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationCancellationReasons]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Code]
END




/*******************************************************************************************************************
	SP Name : GetReservationChargesById
	Comment : Changes in SP GetReservationChargesById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationChargesById]    Script Date: 1/18/2018 7:05:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetReservationChargesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT RC.*
		FROM [dbo].[ReservationCharges] RC				
		WHERE	ISNULL(RC.IsDeleted,0) = 0 	
				AND (RC.Id = @Id)							
		ORDER BY RC.CreatedOn DESC
END



/*******************************************************************************************************************
	SP Name : GetRoomById
	Comment : Changes in SP GetRoomById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomById]    Script Date: 1/18/2018 7:06:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRoomById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Room]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY TRY_PARSE([RoomNo] AS INT)
END


/*******************************************************************************************************************
	SP Name : GetRoomTypeById
	Comment : Changes in SP GetRoomTypeById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeById]    Script Date: 1/18/2018 7:08:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRoomTypeById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomType]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [RoomTypeCode]
END

/*******************************************************************************************************************
	SP Name : GetRoomTypeRateTypeMappingId
	Comment : Changes in SP GetRoomTypeRateTypeMappingId
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomTypeRateTypeMappingId]    Script Date: 1/18/2018 7:08:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetRoomTypeRateTypeMappingId]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomTypeRateTypeMapping]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [CreatedOn]
END

/****************************************************************************************************************************/

Name : Nilesh
Date : 19-JAN-2018

/************* Create New Table Reservation Source ***************/

/****** Object:  Table [dbo].[ReservationSource]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationSource](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationSource] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddReservationSource
	Comment : Create SP AddReservationSource
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationSource]    Script Date: 1/19/2018 11:59:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddReservationSource]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationSource]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateReservationSource
	Comment : Create SP UpdateReservationSource
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationSource]    Script Date: 1/19/2018 12:01:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationSource]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationSource]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteReservationSource
	Comment : Create SP DeleteReservationSource
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeleteReservationSource]    Script Date: 1/19/2018 12:02:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteReservationSource]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationSource]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetReservationSourceById
	Comment : Create SP GetReservationSourceById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationSourceById]    Script Date: 1/19/2018 12:03:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationSourceById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationSource]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetReservationSources
	Comment : Create SP GetReservationSources
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetReservationSources]    Script Date: 1/19/2018 12:03:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationSources]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationSource]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : SearchReservationSource
	Comment : Create SP SearchReservationSource
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationSource]    Script Date: 1/19/2018 12:04:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationSource] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchReservationSource]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationSource
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationSource]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempReservationSource ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationSource]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationSource AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/**** Update ReservationSourceId In Existing Data of Reservation Table*******/

-- 1.) Create Reservation Source by Web (Master Screen)

-- Guest Direct
UPDATE Reservation SET ReservationSourceId = 
(SELECT TOP 1 Id FROM ReservationSource WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Guest Direct')
WHERE ReservationSourceId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944'


-- CRS
UPDATE Reservation SET ReservationSourceId = 
(SELECT TOP 1 Id FROM ReservationSource WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='CRS')
WHERE ReservationSourceId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945'


/**** Add Foreign Key of ReservationSourceId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_ReservationSource] FOREIGN KEY ([ReservationSourceId]) REFERENCES [dbo].[ReservationSource] ([Id]);

	

/************* Create New Table Payment Method ***************/

/****** Object:  Table [dbo].[PaymentMethod]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PaymentMethod](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_PaymentMethod] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddPaymentMethod
	Comment : Create SP AddPaymentMethod
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPaymentMethod]    Script Date: 1/19/2018 11:59:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddPaymentMethod]	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[PaymentMethod]
           ([Id]           
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdatePaymentMethod
	Comment : Create SP UpdatePaymentMethod
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePaymentMethod]    Script Date: 1/19/2018 12:01:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdatePaymentMethod]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[Name]			=	@Name		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeletePaymentMethod
	Comment : Create SP DeletePaymentMethod
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[DeletePaymentMethod]    Script Date: 1/19/2018 12:02:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeletePaymentMethod]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : GetPaymentMethodById
	Comment : Create SP GetPaymentMethodById
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPaymentMethodById]    Script Date: 1/19/2018 12:03:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPaymentMethodById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PaymentMethod]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : GetPaymentMethods
	Comment : Create SP GetPaymentMethods
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetPaymentMethods]    Script Date: 1/19/2018 12:03:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPaymentMethods]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[PaymentMethod]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END



/*******************************************************************************************************************
	SP Name : SearchPaymentMethod
	Comment : Create SP SearchPaymentMethod
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPaymentMethod]    Script Date: 1/19/2018 12:04:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPaymentMethod] '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchPaymentMethod]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPaymentMethod
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PaymentMethod]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
						)


		INSERT INTO #tempPaymentMethod ([RowNum], [Id], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[PaymentMethod]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPaymentMethod AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/**** Update PaymentMethodId In Existing Data of Reservation Table*******/

-- 1.) Create Payment Method by Web (Master Screen)

-- Cash
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Cash')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F946'


-- Visa
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Visa')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-D95261B8F944'

-- American Express
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='American Express')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-D95261B9F945'

-- Discover
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Discover')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-G95261B0F937'

-- Master Card
UPDATE Reservation SET PaymentMethodId = 
(SELECT TOP 1 Id FROM PaymentMethod WHERE ISNULL(IsDeleted,0) = 0 AND [Name] ='Master Card')
WHERE PaymentMethodId = 'F15C97B6-4FC0-4AB7-A32D-G95261B0F939'


/**** Add Foreign Key of PaymentMethodId in Reservation Table****/

ALTER TABLE [dbo].[Reservation] WITH NOCHECK
	ADD CONSTRAINT [FK_Reservation_PaymentMethod] FOREIGN KEY ([PaymentMethodId]) REFERENCES [dbo].[PaymentMethod] ([Id]);
	
	

/**************************************************************************************************************/

/*************** Create new table UserRole ************/

/****** Object:  Table [dbo].[UserRole]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UserRole](
	[Id] [uniqueidentifier] NOT NULL,
	[Code] [nvarchar](25) NULL,
	[Name] [nvarchar](500) NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_UserRole] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*************** Create new table UserDetail ************/

/****** Object:  Table [dbo].[UserDetail]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[UserDetail](
	[Id] [uniqueidentifier] NOT NULL,
	[UserRoleId] [uniqueidentifier] NULL,
	[Name] [nvarchar](500) NOT NULL,
	[Email] [nvarchar](500) NOT NULL,
	[Password] [nvarchar] (2000) NOT NULL,	
	[UserId]	[int]	NOT NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_UserDetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddUserDetail
	Comment : Create SP AddUserDetail
	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[AddUserDetail]    Script Date: 1/19/2018 3:10:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUserDetail]	
	@UserRoleId		UNIQUEIDENTIFIER	=	NULL	,
	@Name			NVARCHAR(500)					,		
	@Email			NVARCHAR(500)					,		
	@Password		NVARCHAR(2000)					,
	@IsActive		BIT					=	NULL	,	
	@CreatedBy		INT					=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	DECLARE @UserId AS INT = 0
	SET @UserId = (SELECT ISNULL(MAX(UserId),0) AS MaxUserId FROM [dbo].[UserDetail])

	SET @UserId = (@UserId + 1)

	INSERT INTO [dbo].[UserDetail]
           ([Id]           
		   ,[UserRoleId]
           ,[Name]		
		   ,[Email]
		   ,[Password]   
		   ,[UserId]		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id		
			   ,@UserRoleId	   
			   ,@Name		
			   ,@Email
			   ,@Password
			   ,@UserId	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @UserId AS Id    
END



/*******************************************************************************************************************
	SP Name : GetUserLogin
	Comment : Create SP GetUserLogin
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserLogin]    Script Date: 1/19/2018 3:00:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetUserLogin]		
	@Email			NVARCHAR(500)		,		
	@Password		NVARCHAR(2000)					
	
AS
BEGIN
	SELECT UD.*,UR.Code AS UserRoleCode, UR.[Name] AS UserRoleName
		 FROM [UserDetail] UD	
			LEFT JOIN [UserRole] UR ON UR.Id = UD.UserRoleId
				AND ISNULL(UR.IsDeleted,0) = 0 AND ISNULL(UR.IsActive,0) = 1
		WHERE ISNULL(UD.IsDeleted,0) = 0 AND ISNULL(UD.IsActive,0) = 1
			AND ISNULL(UD.Email,'') = @Email
			AND ISNULL(UD.[Password],'') = @Password
END





/**************** Encryption Key in Web.Config ***********/

<add key="EncryptionKey" value="HotelierHub"/>


/*******************************************************************************************************************
	SP Name : CheckUserEmailExist
	Comment : Create SP CheckUserEmailExist
	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckUserEmailExist]    Script Date: 1/19/2018 3:24:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckUserEmailExist] 
		@Id = NULL,
		@Email = ''
*/

CREATE PROCEDURE [dbo].[CheckUserEmailExist]
	@Id			UNIQUEIDENTIFIER	=	NULL,
	@Email		NVARCHAR(500)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM [dbo].[UserDetail]
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Email = @Email
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : AddUserRole
	Comment : Create SP AddUserRole	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[AddUserRole]    Script Date: 1/19/2018 11:59:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUserRole]	
	@Code			NVARCHAR(25)			,	
	@Name			NVARCHAR(500)			,		
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UserRole]
           ([Id]           
		   ,[Code]		   		
           ,[Name]		   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id	
			   ,@Code
			   ,@Name			   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateUserRole
	Comment : Create SP UpdateUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUserRole]    Script Date: 1/19/2018 5:00:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateUserRole]
	@Id				UNIQUEIDENTIFIER		,	
	@Code			NVARCHAR(25)			,	
	@Name			NVARCHAR(500)			,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRole]
		SET	[Name]			=	@Name		   		   
		   ,[Code]	=	@Code
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : DeleteUserRole
	Comment : Create SP DeleteUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteUserRole]    Script Date: 1/19/2018 5:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteUserRole]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRole] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetUserRoleById
	Comment : Create SP GetUserRoleById	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserRoleById]    Script Date: 1/19/2018 5:02:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserRoleById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UserRole]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetUserRoles
	Comment : Create SP GetUserRoles	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetUserRoles]    Script Date: 1/19/2018 5:03:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetUserRoles]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[UserRole]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchUserRole
	Comment : Create SP SearchUserRole	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[SearchUserRole]    Script Date: 1/19/2018 5:03:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserRole] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchUserRole]					
	@Code			NVARCHAR(25)	=	NULL	,		
	@Name			NVARCHAR(500)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserRole
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(25)		NOT NULL	
		,   [Name]			NVARCHAR(500)		NOT NULL			
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[UserRole]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%') 								
						)


		INSERT INTO #tempUserRole ([RowNum], [Id], [Code], [Name], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],		
				[Code],						
				[Name],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[UserRole]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Code],				
			temp.[Name],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempUserRole AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/*******************************************************************************************************************
	SP Name : CheckUserRoleCodeAvailable
	Comment : Create SP CheckUserRoleCodeAvailable	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[CheckUserRoleCodeAvailable]    Script Date: 1/19/2018 5:05:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [CheckUserRoleCodeAvailable] 
		@Id = NULL,
		@Code = 'COMP'
*/

CREATE PROCEDURE [dbo].[CheckUserRoleCodeAvailable]
	@Id				UNIQUEIDENTIFIER	=	NULL,
	@Code			NVARCHAR(25)
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT * FROM UserRole 
		WHERE	ISNULL(IsDeleted,0) = 0 				
				AND (@Id IS NULL OR Id != @Id)
				AND Code = @Code
		ORDER BY [Name]
END


/************* Add User Roles ***********/

INSERT [dbo].[UserRole] ([Id], [Code], [Name], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) 
VALUES (N'c959e203-fa02-4507-a59c-8fdcd9613e32', N'ADMIN', N'Admin', 1, CAST(N'2018-01-19T13:19:06.530' AS DateTime), NULL, NULL, 1, NULL)

INSERT [dbo].[UserRole] ([Id], [Code], [Name], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) 
VALUES (N'36c62668-97b6-4b98-867f-b9c153363fc0', N'STUDENT', N'Student', 1, CAST(N'2018-01-19T13:19:06.533' AS DateTime), NULL, NULL, 1, NULL)

INSERT [dbo].[UserRole] ([Id], [Code], [Name], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn], [IsActive], [IsDeleted]) 
VALUES (N'0f14eeeb-e9f4-4fcb-9486-bdd9ddc7ebf1', N'TUTOR', N'Tutor', 1, CAST(N'2018-01-19T13:19:06.533' AS DateTime), NULL, NULL, 1, NULL)

/*** Add Admin User Login *****/
	
-- UserDetail
INSERT INTO [dbo].[UserDetail] ([Id],[Name],[Email],[Password],[CreatedOn],[IsActive],[UserId]) 
	VALUES (NEWID(), 'Admin' ,'admin@hotelierhub.com', 'c35n4z3mFEpQSquyRnYzFg==',  GETDATE(), 1, (SELECT (ISNULL(MAX(UserId),0) + 1) FROM UserDetail))

	
/****************************************************************************************************************************************/

Name : Nilesh
Date : 22-JAN-2018

/***** Add FloorNo & NoOfRoom column to [Floor] Table *****/

ALTER TABLE [Floor] ADD FloorNo INT NULL 
GO


ALTER TABLE [Floor] ADD NoOfRoom INT NULL 
GO

ALTER TABLE [Floor] ADD [Description] NVARCHAR(2000) NULL
GO


/*******************************************************************************************************************
	SP Name : AddFloor
	Comment : Changes in SP AddFloor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddFloor]    Script Date: 1/22/2018 2:50:05 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddFloor]	
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,		
	@FloorNo		INT				= NULL	,
	@NoOfRoom		INT				= NULL	,
	@Description	NVARCHAR(2000)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Floor]
           ([Id]           
           ,[Name]		   
		   ,[Code]
		   ,[FloorNo]
		   ,[NoOfRoom]
		   ,[Description]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name
			   ,@Code
			   ,@FloorNo
			   ,@NoOfRoom
			   ,@Description
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateFloor
	Comment : Changes in SP UpdateFloor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateFloor]    Script Date: 1/22/2018 2:51:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateFloor]
	@Id				UNIQUEIDENTIFIER		,
	@Code			NVARCHAR(25)	= NULL	,
	@Name			NVARCHAR(255)			,	
	@FloorNo		INT				= NULL	,
	@NoOfRoom		INT				= NULL	,
	@Description	NVARCHAR(2000)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Floor]
		SET	[Name]			=	@Name		   
		   ,[Code]			=	@Code
		   ,[FloorNo]		=	@FloorNo
		   ,[NoOfRoom]		=	@NoOfRoom
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : SearchFloor
	Comment : Changes in SP SearchFloor	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchFloor]    Script Date: 1/22/2018 2:52:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchFloor] '', '', 1, 10
*/

ALTER PROCEDURE [dbo].[SearchFloor]			
	@Code			NVARCHAR(25)	=	NULL	,	
	@Name			NVARCHAR(255)	=	NULL	,			
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempFloor
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Code]			NVARCHAR(25)		NULL	
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[FloorNo]		INT					NULL		
		,	[NoOfRoom]		INT					NULL	
		,	[Description]	NVARCHAR(2000)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Floor]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  
						)


		INSERT INTO #tempFloor ([RowNum], [Id], [Code], [Name], [FloorNo], [NoOfRoom], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],				
				[Code],
				[Name],
				[FloorNo],
				[NoOfRoom],
				[Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Floor]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],			
			temp.[Code],			
			temp.[Name],		
			temp.[FloorNo],	
			temp.[NoOfRoom],
			temp.[Description],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempFloor AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END


/*******************************************************************************************************************
	SP Name : GetMaxFloorNo
	Comment : Create SP GetMaxFloorNo	
*******************************************************************************************************************/



/****** Object:  StoredProcedure [dbo].[GetMaxFloorNo]    Script Date: 1/22/2018 3:28:32 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetMaxFloorNo]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT MAX(FloorNo) AS FloorNo FROM [dbo].[Floor]
		WHERE	ISNULL(IsDeleted,0) = 0 
END



/*******************************************************************************************************************
	SP Name : SearchRoom
	Comment : Create SP SearchRoom	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchRoom]    Script Date: 1/22/2018 3:51:28 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoom] NULL, NULL, '',1, 10
*/

CREATE PROCEDURE [dbo].[SearchRoom]
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,	
	@FloorId		UNIQUEIDENTIFIER	=	NULL	,	
	@RoomNo			NVARCHAR(255)		=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoom
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]			NVARCHAR(50)		NULL	
		,   [RoomNo]		NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]	NVARCHAR(255)		NULL
		,	[FloorId]		UNIQUEIDENTIFIER	NULL
		,	[FloorName]		NVARCHAR(255)		NULL
		,	[FloorNo]		INT					NULL				
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Room] R
							INNER JOIN [Floor] F ON F.Id = R.FloorId
								AND ISNULL(F.IsDeleted,0) = 0
							INNER JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
								AND ISNULL(RT.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
								AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
								AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  
						)


		INSERT INTO #tempRoom 
		(
			[RowNum]		, 
			[Id]			, 
			[Type]			, 
			[RoomNo]		, 
			[Description]	, 
			[RoomTypeId]	, 
			[RoomTypeCode]	,
			[FloorId]		, 
			[FloorName]		,
			[FloorNo]		,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN R.[Type] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN R.[Type] END DESC,

					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
						THEN R.[RoomNo] END ASC,
					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'desc'
						THEN R.[RoomNo] END DESC,

					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Name] END ASC

			) AS RowNum,
			R.Id,				
			ISNULL(R.[Type],'') AS [Type],
			ISNULL(R.[RoomNo],'') AS [RoomNo],
			ISNULL(R.[Description],'') AS [Description],
			R.RoomTypeId,
			ISNULL(RT.RoomTypeCode,'') AS [RoomTypeCode],
			R.FloorId,
			ISNULL(F.[Name],'') AS [FloorName],
			F.[FloorNo],
			R.[CreatedOn],
			R.[IsActive]
	FROM [dbo].[Room] R
			INNER JOIN [Floor] F ON F.Id = R.FloorId
				AND ISNULL(F.IsDeleted,0) = 0
			LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
				AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
				AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[FloorId],
			temp.[FloorName],
			temp.[FloorNo],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoom AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END

/*******************************************************************************************************************
	SP Name : GetRoomTypeDetailsForRateSheet
	Comment : Changes in SP GetRoomTypeDetailsForRateSheet	
*******************************************************************************************************************/
/****** Object:  StoredProcedure [dbo].[GetRoomTypeDetailsForRateSheet]    Script Date: 1/22/2018 5:13:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomTypeDetailsForRateSheet] '', '2018/01/02'
*/

ALTER PROCEDURE [dbo].[GetRoomTypeDetailsForRateSheet]
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,
	@ArrivalDate	NVARCHAR(25)	=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT	RT.Id,
			ISNULL(RT.RoomTypeCode,'') AS RoomTypeCode,
			ISNULL(RT.[Description],'') AS [Description],
			ISNULL(RT.RoomCapacity,'') AS [RoomCapacity],
			(
				(
					SELECT COUNT(*) As TotalRooms
					FROM Room 
					WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
						AND RoomTypeId = RT.Id
				)
				 - 
				(
					SELECT COUNT(DISTINCT RL.Id) 
					FROM Room R 
					INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
						AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
						AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
					INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
						AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsCheckOut,0) = 1
					WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = RT.Id
				)
			)  AS AvailableRooms
		FROM RoomType RT
		WHERE	ISNULL(RT.IsDeleted,0) = 0 
				AND ISNULL(RT.IsActive,0) = 1
				AND (ISNULL(@RoomTypeCode,'') = '' OR RT.RoomTypeCode = @RoomTypeCode)
		ORDER BY RT.RoomTypeCode 
END


/****** Remove NoOfRooms Column from RoomType Table ***/

ALTER TABLE RoomType DROP COLUMN NoOfRooms


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoomType
	Comment : Changes in SP SearchAdvanceRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoomType]    Script Date: 1/22/2018 5:29:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoomType]
			@RateTypeId		=	NULL	,
			@ArrivalDate	=	NULL	,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomTypeCode	=	''	,
			@Description	=	''		,
			@AvailableRooms	=	NULL	,
			@RoomCapacity	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoomType]
	@RateTypeId			UNIQUEIDENTIFIER	=	NULL,
	@ArrivalDate		DATETIME			=	NULL,
	@NoOfNight			INT					=	NULL,
	@DepartureDate		DATETIME			=	NULL,
	@RoomTypeCode		NVARCHAR(25)		=	NULL,
	@Description		NVARCHAR(1000)		=	NULL,
	@AvailableRooms		INT					=	NULL,
	@RoomCapacity		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT * FROM 
	(
		SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  ROT.RoomTypeCode ASC

				) AS RowNum,
				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,				
				ISNULL(ROT.[RoomCapacity],0) AS RoomCapacity,				
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				(
					(
						SELECT COUNT(*) As TotalRooms
						FROM Room 
						WHERE ISNULL(IsDeleted,0) = 0 AND ISNULL(IsActive,0) = 1
							AND RoomTypeId = ROT.Id
					)
					 - 
					(
						SELECT COUNT(DISTINCT RL.Id) 
						FROM Room R 
						INNER JOIN ReservationLog RL ON R.Id = RL.RoomId 						
							AND ISNULL(RL.IsDeleted,0) = 0  AND ISNULL(RL.IsActive,0) = 1
							AND (ISNULL(@ArrivalDate,'')  = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate AS DATE) AND CAST(RL.CheckOutDate AS DATE))
						INNER JOIN Reservation RE ON RE.Id = RL.ReservationId
							AND ISNULL(RE.IsDeleted,0) = 0 AND ISNULL(RE.IsCheckOut,0) = 1
						WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1 AND  R.RoomTypeId = ROT.Id
					)
				)  AS AvailableRooms,

				RAT.Id AS RateTypeId,
				ISNULL(RAT.RateTypeCode,'') AS RateTypeCode,
				ISNULL(RAT.[Description],'') AS RateTypeDescription,

				RTRTM.[Id] AS [RoomTypeRateTypeMappingId],
				ISNULL(RTRTM.[Amount],0) AS Amount,
				ISNULL(RTRTM.[Description],'') AS	[RoomTypeRateTypeMappingDescription]			
				
			FROM RoomType ROT 
					LEFT JOIN RoomTypeRateTypeMapping RTRTM ON ROT.Id = RTRTM.RoomTypeId 
						AND ISNULL(RTRTM.IsDeleted,0) = 0 AND ISNULL(RTRTM.IsActive,0) = 1
					LEFT JOIN RateType RAT ON RAT.Id = RTRTM.RateTypeId
						AND ISNULL(RAT.IsDeleted,0) = 0 AND ISNULL(RAT.IsActive,0) = 1
			WHERE	ISNULL(ROT.IsDeleted,0) = 0 AND ISNULL(ROT.IsActive,0) = 1						  
					AND (@RateTypeId IS NULL OR RAT.Id = @RateTypeId)
					AND (ISNULL(@RoomTypeCode,'') = '' OR ROT.RoomTypeCode LIKE '%' + @RoomTypeCode + '%')
					AND (ISNULL(@Description,'') = '' OR ROT.[Description] LIKE '%' + @Description + '%')					
					AND (ISNULL(@RoomCapacity,0) = 0 OR ROT.[RoomCapacity] = @RoomCapacity)
					
		) AS A	
		WHERE ISNULL(@AvailableRooms,0) = 0 OR A.AvailableRooms = @AvailableRooms				
				
END


/*******************************************************************************************************************
	SP Name : AddRoomType
	Comment : Changes in SP AddRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRoomType]    Script Date: 1/22/2018 5:35:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddRoomType]
	@RoomTypeCode	NVARCHAR(25)			,
	@Description	NVARCHAR(500)	= NULL	,	
	@RoomCapacity	INT				= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL

AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RoomType]
           ([Id]
           ,[RoomTypeCode]
           ,[Description]		   
		   ,[RoomCapacity]
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id
			   ,@RoomTypeCode
			   ,@Description			   
			   ,@RoomCapacity
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : UpdateRoomType
	Comment : Changes in SP UpdateRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomType]    Script Date: 1/22/2018 5:36:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateRoomType]
	@Id				UNIQUEIDENTIFIER			,
	@RoomTypeCode	NVARCHAR(25)				,	
	@Description	NVARCHAR(500)		=	NULL,		
	@RoomCapacity	INT					=	NULL,	
	@IsActive		BIT,
	@UpdatedBy		INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomType] 
		SET	[RoomTypeCode]	= @RoomTypeCode
           ,[Description]	= @Description		   
		   ,[RoomCapacity]	= @RoomCapacity
		   ,[UpdatedBy]		= @UpdatedBy
		   ,[IsActive]		= @IsActive
		   ,[UpdatedOn]		= GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : SearchRoomType
	Comment : Changes in SP SearchRoomType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoomType]    Script Date: 1/22/2018 5:36:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoomType] '', 10, 1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoomType]		
	@RoomTypeCode	NVARCHAR(25)	=	NULL	,	
	@RoomCapacity	INT				=	NULL	,
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoomType
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL
		,   [RoomTypeCode]	NVARCHAR(25)		NOT NULL
		,   [Description]	NVARCHAR(500)		NULL		
		,	[RoomCapacity]	INT					NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[RoomType]
						WHERE	ISNULL(IsDeleted,0) = 0
								AND (ISNULL(@RoomTypeCode,'') = '' OR RoomTypeCode LIKE '%'+ @RoomTypeCode +'%')  								
								AND (ISNULL(@RoomCapacity,0) = 0 OR [RoomCapacity] =  @RoomCapacity)	
						)


		INSERT INTO #tempRoomType ([RowNum], [Id], [RoomTypeCode], [Description], [RoomCapacity], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'asc'
							THEN [RoomTypeCode] END ASC,
						CASE WHEN @SortColumn = 'RoomTypeCode' and @SortDirection = 'desc'
							THEN [RoomTypeCode] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [RoomTypeCode] END ASC

				) AS RowNum,
				[ID],
				[RoomTypeCode],
				[Description],				
				[RoomCapacity],
				[CreatedOn],
				[IsActive]
			FROM [dbo].[RoomType]
				WHERE	ISNULL(IsDeleted,0) = 0
						AND (ISNULL(@RoomTypeCode,'') = '' OR RoomTypeCode LIKE '%'+ @RoomTypeCode +'%')  						
						AND (ISNULL(@RoomCapacity,0) = 0 OR [RoomCapacity] =  @RoomCapacity)	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[Id],
			temp.[RoomTypeCode],
			temp.[Description],			
			temp.[RoomCapacity],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoomType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/****** Create new table ReservationStatus **********/


/****** Object:  Table [dbo].[ReservationStatus]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ReservationStatus](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[Code]	[nvarchar](50) NOT NULL,
	[Description] [nvarchar](1000) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_ReservationStatus] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/*********** Add new column ReservationStatusId to Reservation Table ****/


ALTER TABLE Reservation ADD ReservationStatusId UNIQUEIDENTIFIER NULL
GO



/*********** Add Default ReservationStatus data  *****/

INSERT INTO [dbo].[ReservationStatus] ([Id],[Name],[Code],[CreatedBy],[CreatedOn],[IsActive])
VALUES ('FB5C5376-8872-4ED8-9A1C-CBF8BB0716AA','CHECKED IN', 'CHECKEDIN', 1, GETDATE(),1)

INSERT INTO [dbo].[ReservationStatus] ([Id],[Name],[Code],[CreatedBy],[CreatedOn],[IsActive])
VALUES ('C019A362-1A34-4D4F-A793-5182406D4DB3','DUE OUT ', 'DUEOUT', 1, GETDATE(),1)

INSERT INTO [dbo].[ReservationStatus] ([Id],[Name],[Code],[CreatedBy],[CreatedOn],[IsActive])
VALUES ('94488A00-864A-4A4D-B742-68FBB84ED5D9','CHECKED OUT', 'CHECKEDOUT', 1, GETDATE(),1)


/*******************************************************************************************************************
	SP Name : UpdateReservationStatus
	Comment : Create SP UpdateReservationStatus	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[UpdateReservationStatus]    Script Date: 1/22/2018 6:07:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateReservationStatus]	
	@Id						UNIQUEIDENTIFIER	=	NULL	,	
	@ReservationStatusId	UNIQUEIDENTIFIER	=	NULL	,	
	@UpdatedBy				INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;
	

	UPDATE [dbo].[Reservation] SET
		[ReservationStatusId]	=	@ReservationStatusId
		,[UpdatedBy]			=	@UpdatedBy
		,[UpdatedOn]			=	GETDATE()		
	WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id
			
	SELECT @Id AS ReservationId				

END

/*******************************************************************************************************************
	SP Name : SearchGuest
	Comment : Changes in SP SearchGuest	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchGuest]    Script Date: 1/22/2018 6:25:09 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchGuest] 
		@LastName						=	NULL,
		@FirstName						=	NULL,			
		@RoomNo							=	'',
		@CompanyId						=	NULL,				
		@GroupId						=	NULL,		
		@BlockCodeId					=	NULL,							
		@ConfirmationNo					=	'',		
		@DepartureDate					=	NULL,
		@IsShowCheckedOut				=	1,
		@PageNum						=	1,
		@PageSize						=	10,
		@SortColumn						=	NULL,
		@SortDirection					=	NULL
*/

ALTER PROCEDURE [dbo].[SearchGuest]		
	@LastName						NVARCHAR(255)		=	NULL,
	@FirstName						NVARCHAR(255)		=	NULL,	
	@RoomNo							NVARCHAR(255)		=	NULL,	
	@CompanyId						UNIQUEIDENTIFIER	=	NULL,			
	@GroupId						UNIQUEIDENTIFIER	=	NULL,		
	@BlockCodeId					UNIQUEIDENTIFIER	=	NULL,				
	@ConfirmationNo					NVARCHAR(255)		=	NULL,	
	@DepartureDate					DATETIME			=	NULL,
	@IsShowCheckedOut				BIT					=	NULL,
	@PageNum						INT					=	1,
	@PageSize						INT					=	10,
	@SortColumn						NVARCHAR(255)		=	NULL,
	@SortDirection					NVARCHAR(20)		=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservation
	(
			[RowNum]					INT					NOT NULL
		,	[Id]						UNIQUEIDENTIFIER	NOT NULL		
		,	[RoomNumbers]				NVARCHAR(1000)		NULL
		,   [FirstName]					NVARCHAR(255)		NULL
		,   [LastName]					NVARCHAR(255)		NULL		
		,   [ArrivalDate]				NVARCHAR(25)		NULL				
		,   [DepartureDate]				NVARCHAR(25)		NULL
		,	[Balance]					DECIMAL(18,2)		NULL
		,	[CompanyId]					UNIQUEIDENTIFIER	NULL
		,	[Company]					NVARCHAR(500)		NULL
		,	[GroupId]					UNIQUEIDENTIFIER	NULL
		,	[Group]						NVARCHAR(500)		NULL
		,	[ReservationStatusId]		UNIQUEIDENTIFIER	NULL
		,	[ReservationStatusName]		NVARCHAR(500)		NULL
		,	[IsReservationCancel]		BIT					NULL
		,	[IsCheckIn]					BIT					NULL
		,	[IsCheckOut]				BIT					NULL
		,	[CreatedOn]					DATETIME			NULL	
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Reservation] R
							INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
								AND ISNULL(P.IsDeleted,0) = 0 
							LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
							LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0
							LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
							LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
							LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						WHERE	ISNULL(R.IsDeleted,0) = 0
								AND ISNULL(R.IsReservationCancel,0) = 0
								AND ISNULL(R.IsCheckIn,0) = 1
								AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
								AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
								AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
								AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
								AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
								AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
								AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
								AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)
						)


		INSERT INTO #tempReservation 
		(
			[RowNum]
			,[Id]			
			,[FirstName]				
			,[LastName]				
			,[ArrivalDate]			
			,[DepartureDate]			
			,[Balance]				
			,[CompanyId]				
			,[Company]				
			,[GroupId]				
			,[Group]					
			,[ReservationStatusId]
			,[ReservationStatusName]	
			,[IsReservationCancel]
			,[IsCheckIn]
			,[IsCheckOut]		
			,[CreatedOn])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN R.[CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN R.[CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'asc'
							THEN R.[FirstName] END ASC,
						CASE WHEN @SortColumn = 'FirstName' and @SortDirection = 'desc'
							THEN R.[FirstName] END DESC,

						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'asc'
							THEN R.[LastName] END ASC,
						CASE WHEN @SortColumn = 'LastName' and @SortDirection = 'desc'
							THEN R.[LastName] END DESC,

						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'asc'
							THEN R.[ArrivalDate] END ASC,
						CASE WHEN @SortColumn = 'ArrivalDate' and @SortDirection = 'desc'
							THEN R.[ArrivalDate] END DESC,

						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'asc'
							THEN R.[DepartureDate] END ASC,
						CASE WHEN @SortColumn = 'DepartureDate' and @SortDirection = 'desc'
							THEN R.[DepartureDate] END DESC,

						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'asc'
							THEN R.[Rate] END ASC,
						CASE WHEN @SortColumn = 'Balance' and @SortDirection = 'desc'
							THEN R.[Rate] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN R.[LastName] END ASC

				) AS RowNum
				,R.[Id]			
				,ISNULL(R.[FirstName],'') AS [FirstName]
				,ISNULL(R.[LastName],'') AS [LastName]												
				,CONVERT(varchar(20),R.[ArrivalDate],103) AS ArrivalDate				
				,CONVERT(varchar(20),R.[DepartureDate],103) AS DepartureDate				
				,ISNULL(R.[TotalBalance],0) AS Balance
				,R.CompanyId						
				,'' AS Company
				,R.GroupId						
				,'' AS [Group]
				,(CASE	WHEN (ISNULL(@DepartureDate,'') <> '' AND ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
						THEN (SELECT TOP 1 Id FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  R.ReservationStatusId 
					END) AS ReservationStatusId
				,ISNULL((CASE	WHEN (ISNULL(@DepartureDate,'') <> '' AND ISNULL(R.IsCheckOut,0) = 0
								AND CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
						THEN (SELECT TOP 1 [Name] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 
								AND Code = 'DUEOUT')
						ELSE  RS.[Name]
					END),'') AS ReservationStatusName
				,ISNULL(R.[IsReservationCancel],0) AS IsReservationCancel
				,ISNULL(R.[IsCheckIn],0) AS IsCheckIn
				,ISNULL(R.[IsCheckOut],0) AS IsCheckOut
				,R.[CreatedOn]
			FROM [dbo].[Reservation] R
					INNER JOIN [dbo].[IndividualProfile] P ON R.ProfileId = P.Id 
						AND ISNULL(P.IsDeleted,0) = 0 
					LEFT JOIN [dbo].[Title] T ON R.TitleId = T.Id AND ISNULL(T.IsDeleted,0) = 0							
					LEFT JOIN [dbo].[Vip] V ON R.VipId = V.Id AND ISNULL(V.IsDeleted,0) = 0														
					LEFT JOIN [dbo].[Country] CO ON R.CountryId = CO.Id 
						AND ISNULL(CO.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RoomType] ROT ON ROT.Id = R.RoomTypeId
						AND ISNULL(ROT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[RateType] RAT ON RAT.Id = R.RateCodeId
						AND ISNULL(RAT.IsDeleted,0) = 0
					LEFT JOIN [dbo].[ReservationStatus] RS ON RS.Id = R.ReservationStatusId
						AND ISNULL(RS.IsDeleted,0) = 0
			WHERE	ISNULL(R.IsDeleted,0) = 0
					AND ISNULL(R.IsReservationCancel,0) = 0
					AND ISNULL(R.IsCheckIn,0) = 1
					AND (ISNULL(@FirstName,'') = '' OR R.[FirstName] LIKE '%'+ @FirstName +'%')  
					AND (ISNULL(@LastName,'') = '' OR R.[LastName] LIKE '%'+ @LastName +'%')																
					AND (@CompanyId IS NULL OR R.[CompanyId] = @CompanyId)								
					AND (@GroupId IS NULL OR R.[GroupId] = @GroupId)
					AND (@BlockCodeId IS NULL OR R.[BlockCodeId] = @BlockCodeId)																
					AND (ISNULL(@ConfirmationNo,'') = '' OR R.[ConfirmationNumber] LIKE '%'+ @ConfirmationNo +'%')
					AND (@DepartureDate IS NULL OR CAST(R.DepartureDate AS DATE) = CAST(@DepartureDate AS DATE))
					AND (@IsShowCheckedOut IS NULL OR ISNULL(R.IsCheckOut,0) = @IsShowCheckedOut)

	-- DATA PREPARED, MOVING TO PAGGING


	--UPDATE Room Numbers by comma seprated.
	UPDATE temp
		SET RoomNumbers = (STUFF(( SELECT ','+ CAST(R.RoomNo AS varchar(MAX))					
				FROM ReservationRoomMapping RRM
						INNER JOIN Room R ON R.Id = RRM.RoomId
						AND ISNULL(R.IsDeleted,0) = 0
				WHERE	ISNULL(RRM.IsDeleted,0) = 0
						AND RRM.ReservationId = temp.Id
						--AND (ISNULL(@RoomNo,'') = '' OR  R.RoomNo LIKE '%' + @RoomNo +'%')
			FOR XMl PATH('')),1,1,''))
		FROM #tempReservation temp 			


	-- PAGING STARTED
	SELECT 
			temp.[Id]			
			,ISNULL(temp.[RoomNumbers],'') AS RoomNumbers
			,temp.[FirstName]		
			,temp.[LastName]					
			,temp.[ArrivalDate]			
			,temp.[DepartureDate]				
			,temp.[Balance]
			,temp.[CompanyId]
			,temp.[Company]
			,temp.[GroupId]
			,temp.[Group]
			,temp.[ReservationStatusId]
			,temp.[ReservationStatusName]
			,temp.[IsReservationCancel]
			,temp.[IsCheckIn]
			,temp.[IsCheckOut]
			,temp.[CreatedOn] 
			,@TotalCount AS TotalCount
	FROM	
		#tempReservation AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
		AND (ISNULL(@RoomNo,'') = '' OR  temp.[RoomNumbers] LIKE '%' + @RoomNo +'%')
	-- PAGING COMPLETED

END

/**** Update Reservation Status Id in Reservation Table. *****/

UPDATE Reservation SET ReservationStatusId = (SELECT TOP 1 [Id] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'CHECKEDIN')
WHERE ISNULL(IsCheckIn,0) = 1 AND ISNULL(IsCheckOut,0) = 0


UPDATE Reservation SET ReservationStatusId = (SELECT TOP 1 [Id] FROM ReservationStatus WHERE ISNULL(IsDeleted,0) = 0 AND Code = 'CHECKEDOUT')
WHERE ISNULL(IsCheckIn,0) = 1 AND ISNULL(IsCheckOut,0) = 1


/*******************************************************************************************************************
	SP Name : GetReservationStatusById
	Comment : Create SP GetReservationStatusById	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetReservationStatusById]    Script Date: 1/22/2018 6:37:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetReservationStatusById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[ReservationStatus]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END



/************************************************************************************************************************************/

Name : Nilesh
Date : 23-JAN-2018


/******* Add Description column into ReservationType Table ****/


ALTER TABLE ReservationType ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddReservationType
	Comment : Changes in SP AddReservationType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationType]    Script Date: 1/23/2018 2:20:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationType]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationType]
           ([Id]           
           ,[Name]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateReservationType
	Comment : Changes in SP UpdateReservationType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationType]    Script Date: 1/23/2018 2:20:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationType]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationType]
		SET	[Name]			=	@Name		
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchReservationType
	Comment : Changes in SP SearchReservationType	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationType]    Script Date: 1/23/2018 2:21:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationType] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchReservationType]					
	@Name			NVARCHAR(500)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationType
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationType]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 
						)


		INSERT INTO #tempReservationType ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationType]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 					 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationType AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/******* Add Description column into Package Table ****/


ALTER TABLE Package ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddPackage
	Comment : Changes in SP AddPackage	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPackage]    Script Date: 1/23/2018 2:37:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddPackage]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Package]
           ([Id]           
           ,[Name]		
		   ,[Description]   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdatePackage
	Comment : Changes in SP UpdatePackage	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePackage]    Script Date: 1/23/2018 2:37:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdatePackage]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Package]
		SET	[Name]			=	@Name		
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchPackage
	Comment : Changes in SP SearchPackage	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPackage]    Script Date: 1/23/2018 2:38:24 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPackage] '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchPackage]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	= 	NULL	,
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPackage
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Package]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  	
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  								
						)


		INSERT INTO #tempPackage ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Package]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  	

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPackage AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END




/******* Add Description column into Market Table ****/


ALTER TABLE Market ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddMarket
	Comment : Changes in SP AddMarket	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddMarket]    Script Date: 1/23/2018 2:48:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddMarket]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[Market]
           ([Id]           
           ,[Name]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateMarket
	Comment : Changes in SP UpdateMarket	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateMarket]    Script Date: 1/23/2018 2:49:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateMarket]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[Market]
		SET	[Name]			=	@Name
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : SearchMarket
	Comment : Changes in SP SearchMarket	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchMarket]    Script Date: 1/23/2018 2:50:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchMarket] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchMarket]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempMarket
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[Market]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempMarket ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[Market]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempMarket AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/******* Add Description column into ReservationSource Table ****/


ALTER TABLE ReservationSource ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddReservationSource
	Comment : Changes in SP AddReservationSource	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddReservationSource]    Script Date: 1/23/2018 2:58:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddReservationSource]	
	@Name			NVARCHAR(500)			,		
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[ReservationSource]
           ([Id]           
           ,[Name]		
		   ,[Description]   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END




/*******************************************************************************************************************
	SP Name : UpdateReservationSource
	Comment : Changes in SP UpdateReservationSource	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateReservationSource]    Script Date: 1/23/2018 2:59:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateReservationSource]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@Description	NVARCHAR(MAX)		=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[ReservationSource]
		SET	[Name]			=	@Name	
		   ,[Description]	=	@Description	   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END

/*******************************************************************************************************************
	SP Name : SearchReservationSource
	Comment : Changes in SP SearchReservationSource	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchReservationSource]    Script Date: 1/23/2018 3:00:13 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchReservationSource] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchReservationSource]					
	@Name			NVARCHAR(500)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempReservationSource
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(MAX)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[ReservationSource]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  								
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  
						)


		INSERT INTO #tempReservationSource ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[ReservationSource]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  	
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')  				 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempReservationSource AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END


/******* Add Description column into PaymentMethod Table ****/


ALTER TABLE PaymentMethod ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddPaymentMethod
	Comment : Changes in SP AddPaymentMethod	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddPaymentMethod]    Script Date: 1/23/2018 3:10:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddPaymentMethod]	
	@Name			NVARCHAR(500)			,
	@Description	NVARCHAR(MAX)	= NULL	,
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[PaymentMethod]
           ([Id]           
           ,[Name]		   		
		   ,[Description]   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdatePaymentMethod
	Comment : Changes in SP UpdatePaymentMethod	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdatePaymentMethod]    Script Date: 1/23/2018 3:12:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdatePaymentMethod]
	@Id				UNIQUEIDENTIFIER				,	
	@Name			NVARCHAR(500)					,	
	@Description	NVARCHAR(MAX)		=	NULL	,
	@IsActive		BIT					=	NULL	,	
	@UpdatedBy		INT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[PaymentMethod]
		SET	[Name]			=	@Name		
		   ,[Description]	=	@Description   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchPaymentMethod
	Comment : Changes in SP SearchPaymentMethod	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchPaymentMethod]    Script Date: 1/23/2018 3:12:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchPaymentMethod] '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchPaymentMethod]					
	@Name			NVARCHAR(500)	=	NULL	,
	@Description	NVARCHAR(MAX)	=	NULL	,		
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempPaymentMethod
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(MAX)		NULL
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[PaymentMethod]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempPaymentMethod ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[PaymentMethod]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],	
			temp.[Description],		
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempPaymentMethod AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/******* Add Description column into UserRole Table ****/


ALTER TABLE UserRole ADD [Description] NVARCHAR(MAX) NULL
GO


/*******************************************************************************************************************
	SP Name : AddUserRole
	Comment : Changes in SP AddUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUserRole]    Script Date: 1/23/2018 3:37:07 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[AddUserRole]	
	@Code			NVARCHAR(25)				,	
	@Name			NVARCHAR(500)				,
	@Description	NVARCHAR(MAX)	=	NULL	,				
	@IsActive		BIT				=	NULL	,	
	@CreatedBy		INT				=	NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[UserRole]
           ([Id]           
		   ,[Code]		   		
           ,[Name]		
		   ,[Description]   		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id	
			   ,@Code
			   ,@Name	
			   ,@Description		   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : UpdateUserRole
	Comment : Changes in SP UpdateUserRole	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateUserRole]    Script Date: 1/23/2018 3:37:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[UpdateUserRole]
	@Id				UNIQUEIDENTIFIER			,	
	@Code			NVARCHAR(25)				,	
	@Name			NVARCHAR(500)				,	
	@Description	NVARCHAR(MAX)	=	NULL	,
	@IsActive		BIT				=	NULL	,	
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[UserRole]
		SET	[Name]			=	@Name		   		   
		   ,[Code]			=	@Code
		   ,[Description]	=	@Description
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : SearchUserRole
	Comment : Changes in SP SearchUserRole	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[SearchUserRole]    Script Date: 1/23/2018 3:38:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchUserRole] '', '', '',  1, 10
*/

ALTER PROCEDURE [dbo].[SearchUserRole]					
	@Code			NVARCHAR(25)	=	NULL	,		
	@Name			NVARCHAR(500)	=	NULL	,	
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempUserRole
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Code]			NVARCHAR(25)		NOT NULL	
		,   [Name]			NVARCHAR(500)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[UserRole]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%') 
								AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%') 
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')								
						)


		INSERT INTO #tempUserRole ([RowNum], [Id], [Code], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
							THEN [Code] END ASC,
						CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
							THEN [Code] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],		
				[Code],						
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[UserRole]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')
					AND (ISNULL(@Code,'') = '' OR [Code] LIKE '%'+ @Code +'%')
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%')

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],	
			temp.[Code],				
			temp.[Name],
			temp.[Description],			
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempUserRole AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END



/********************************************************************************************************/


/*********** Create new table RoomFeatures ******/


/****** Object:  Table [dbo].[RoomFeatures]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RoomFeatures](
	[Id] [uniqueidentifier] NOT NULL,	
	[Name] [nvarchar](500) NOT NULL,
	[Description] [nvarchar](MAX) NULL,
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_RoomFeatures] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


/*******************************************************************************************************************
	SP Name : AddRoomFeatures
	Comment : Create SP AddRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddRoomFeatures]    Script Date: 1/23/2018 4:04:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddRoomFeatures]	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@CreatedBy		INT				= NULL
AS
BEGIN


	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	INSERT INTO [dbo].[RoomFeatures]
           ([Id]           
           ,[Name]		  
		   ,[Description] 		   
		   ,[CreatedBy]
		   ,[CreatedOn]
           ,[IsActive])
     VALUES
           (
			   @Id			   
			   ,@Name		
			   ,@Description	   
			   ,@CreatedBy
			   ,GETDATE()			   
			   ,@IsActive
           )

		SELECT @Id AS Id    
END



/*******************************************************************************************************************
	SP Name : UpdateRoomFeatures
	Comment : Create SP UpdateRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[UpdateRoomFeatures]    Script Date: 1/23/2018 4:06:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UpdateRoomFeatures]
	@Id				UNIQUEIDENTIFIER		,	
	@Name			NVARCHAR(500)			,	
	@Description	NVARCHAR(MAX)	= NULL	,	
	@IsActive		BIT				= NULL	,	
	@UpdatedBy		INT				= NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeatures]
		SET	[Name]			=	@Name
		   ,[Description]	=	@Description		   		   
		   ,[UpdatedBy]		=	@UpdatedBy
		   ,[UpdatedOn]		=	GETDATE()
		   ,[IsActive]		=	@IsActive		   
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id

    SELECT @Id AS Id    
END


/*******************************************************************************************************************
	SP Name : DeleteRoomFeatures
	Comment : Create SP DeleteRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteRoomFeatures]    Script Date: 1/23/2018 4:06:39 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRoomFeatures]
	@Id			UNIQUEIDENTIFIER,	
	@UpdatedBy	INT

AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeatures] 
		SET	[IsDeleted] = 1
			,[UpdatedBy] = @UpdatedBy					   
			,[UpdatedOn] = GETDATE()
     WHERE	ISNULL(IsDeleted,0) = 0 
			AND Id = @Id

	SELECT @Id AS Id
    
END



/*******************************************************************************************************************
	SP Name : GetRoomFeaturesById
	Comment : Create SP GetRoomFeaturesById	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomFeaturesById]    Script Date: 1/23/2018 4:07:11 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRoomFeaturesById]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomFeatures]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : GetRoomFeatures
	Comment : Create SP GetRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomFeatures]    Script Date: 1/23/2018 4:07:33 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetRoomFeatures]	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[RoomFeatures]
		WHERE ISNULL(IsActive,0)  = 1 AND ISNULL(IsDeleted,0) = 0 
		ORDER BY [Name]
END


/*******************************************************************************************************************
	SP Name : SearchRoomFeatures
	Comment : Create SP SearchRoomFeatures	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoomFeatures]    Script Date: 1/23/2018 4:08:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoomFeatures] '', '',  1, 10
*/

CREATE PROCEDURE [dbo].[SearchRoomFeatures]					
	@Name			NVARCHAR(500)	=	NULL	,		
	@Description	NVARCHAR(MAX)	=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoomFeatures
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL				
		,   [Name]			NVARCHAR(255)		NOT NULL	
		,	[Description]	NVARCHAR(MAX)		NULL		
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(*) 
						FROM [dbo].[RoomFeatures]
						WHERE	ISNULL(IsDeleted,0) = 0								
								AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  
								AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 								
						)


		INSERT INTO #tempRoomFeatures ([RowNum], [Id], [Name], [Description], [CreatedOn], [IsActive])
			SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
							THEN [CreatedOn] END ASC,
						CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
							THEN [CreatedOn] END DESC,

						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'asc'
							THEN [Name] END ASC,
						CASE WHEN @SortColumn = 'Name' and @SortDirection = 'desc'
							THEN [Name] END DESC,
						
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'asc'
							THEN [Description] END ASC,
						CASE WHEN @SortColumn = 'Description' and @SortDirection = 'desc'
							THEN [Description] END DESC,

						CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
							THEN [Name] END ASC

				) AS RowNum,
				[ID],								
				[Name],
				ISNULL([Description],'') AS [Description],
				[CreatedOn],
				[IsActive]
		FROM [dbo].[RoomFeatures]
			WHERE	ISNULL(IsDeleted,0) = 0								
					AND (ISNULL(@Name,'') = '' OR [Name] LIKE '%'+ @Name +'%')  					 
					AND (ISNULL(@Description,'') = '' OR [Description] LIKE '%'+ @Description +'%') 

	-- DATA PREPARED, MOVING TO PAGGING


	-- PAGING STARTED
	SELECT 
			temp.[RowNum],
			temp.[Id],							
			temp.[Name],		
			temp.[Description],	
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoomFeatures AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED

END

/****************************************************************************************************************/

Name : Nilesh
Date : 24-JAN-2018

/*********** Create new table RoomFeaturesMapping ******/

/****** Object:  Table [dbo].[RoomFeaturesMapping]    Script Date: 1/18/2018 4:03:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RoomFeaturesMapping](
	[Id] [UNIQUEIDENTIFIER] NOT NULL,	
	[RoomId] [UNIQUEIDENTIFIER] NOT NULL,
	[RoomFeatureId] [UNIQUEIDENTIFIER] NOT NULL,	
	[CreatedBy] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedOn] [datetime] NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
 CONSTRAINT [PK_RoomFeaturesMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



/*******************************************************************************************************************
	SP Name : AddUpdateRoomFeaturesMapping
	Comment : Create SP AddUpdateRoomFeaturesMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[AddUpdateRoomFeaturesMapping]    Script Date: 1/24/2018 12:08:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddUpdateRoomFeaturesMapping]
	@RoomId				UNIQUEIDENTIFIER			,	
	@RoomFeatureId		UNIQUEIDENTIFIER			,
	@CreatedBy			INT					=	NULL,
	@UpdatedBy			INT					=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Id UNIQUEIDENTIFIER
	SET @Id = NEWID()

	IF NOT EXISTS (SELECT * FROM [RoomFeaturesMapping] 
						WHERE	ISNULL(IsDeleted,0) = 0 
								AND [RoomId] = @RoomId 
								AND [RoomFeatureId] = @RoomFeatureId)
	BEGIN		
		INSERT INTO [dbo].[RoomFeaturesMapping]
			   ([Id]
			   ,[RoomId]			   
			   ,[RoomFeatureId]
			   ,[CreatedBy]
			   ,[CreatedOn])
		 VALUES
				(
					@Id
					,@RoomId					
					,@RoomFeatureId
					,@CreatedBy
					,GETDATE()
				)
	END
	ELSE
	BEGIN
		UPDATE [dbo].[RoomFeaturesMapping]
			SET		[UpdatedBy] = @UpdatedBy
					,[UpdatedOn]	= GETDATE()
			WHERE	ISNULL(IsDeleted,0) = 0 
					AND [RoomFeatureId] = @RoomFeatureId 
					AND [RoomId] = @RoomId
	END
			
	SELECT @Id AS Id
    
END

/*******************************************************************************************************************
	SP Name : DeleteRoomFeaturesMappingByRoom
	Comment : Create SP DeleteRoomFeaturesMappingByRoom	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteRoomFeaturesMappingByRoom]    Script Date: 1/24/2018 12:11:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRoomFeaturesMappingByRoom]	
	@RoomId			UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeaturesMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND RoomId = @RoomId
	

	SELECT @RoomId AS Id
    
END


/*******************************************************************************************************************
	SP Name : DeleteRoomFeaturesMapping
	Comment : Create SP DeleteRoomFeaturesMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[DeleteRoomFeaturesMapping]    Script Date: 1/24/2018 12:11:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DeleteRoomFeaturesMapping]	
	@Id			UNIQUEIDENTIFIER		,
	@UpdatedBy		INT				=	NULL
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[RoomFeaturesMapping] 
		SET IsDeleted = 1,
			UpdatedOn = GETDATE(),
			UpdatedBy = @UpdatedBy
		WHERE	ISNULL(IsDeleted,0) = 0
				AND Id = @Id
	

	SELECT @Id AS Id
    
END


/*******************************************************************************************************************
	SP Name : GetRoomFeaturesMapping
	Comment : Create SP GetRoomFeaturesMapping	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[GetRoomFeaturesMapping]    Script Date: 1/24/2018 12:14:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
	EXEC [GetRoomFeaturesMapping] 		
		@RoomId = NULL,
		@RoomFeatureId = NULL
*/
CREATE PROCEDURE [dbo].[GetRoomFeaturesMapping]		
	@RoomId			UNIQUEIDENTIFIER = NULL,
	@RoomFeatureId	UNIQUEIDENTIFIER = NULL
AS
BEGIN	
	SET NOCOUNT ON;

	SELECT RFM.*,R.RoomNo AS RoomNo,R.[Description] AS RoomDescription,
		RF.[Name] AS RoomFeature, RF.[Description] AS RoomFeatureDescription
	 FROM [dbo].[RoomFeaturesMapping] RFM
			INNER JOIN [dbo].[Room] R ON R.Id = RFM.RoomId 
				AND ISNULL(R.IsDeleted,0) = 0
			LEFT JOIN [dbo].[RoomFeatures] RF ON RF.Id = RFM.RoomFeatureId
				AND ISNULL(RF.IsDeleted,0) = 0
		WHERE	ISNULL(RFM.IsDeleted,0) = 0
				AND (@RoomFeatureId IS NULL OR RFM.RoomFeatureId = @RoomFeatureId)
				AND (@RoomId IS NULL OR RFM.RoomId = @RoomId)
		ORDER BY RFM.CreatedOn
END



/*******************************************************************************************************************
	SP Name : SearchRoom
	Comment : Changes in SP SearchRoom	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchRoom]    Script Date: 1/24/2018 1:08:20 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchRoom] NULL, NULL, '118',1, 10
*/

ALTER PROCEDURE [dbo].[SearchRoom]
	@RoomTypeId		UNIQUEIDENTIFIER	=	NULL	,	
	@FloorId		UNIQUEIDENTIFIER	=	NULL	,	
	@RoomNo			NVARCHAR(255)		=	NULL	,	
	@PageNum		INT				=	1		,
	@PageSize		INT				=	10		,
	@SortColumn		NVARCHAR(255)	=	NULL	,
	@SortDirection	NVARCHAR(20)	=	NULL

AS
BEGIN	
	SET NOCOUNT ON;

	--DECLARATIONS
	DECLARE @TotalCount AS INT	

	CREATE TABLE #tempRoom
	(
			[RowNum]		INT					NOT NULL
		,	[Id]			UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]			NVARCHAR(50)		NULL	
		,   [RoomNo]		NVARCHAR(255)		NOT NULL
		,	[Description]	NVARCHAR(2000)		NULL
		,	[RoomTypeId]	UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]	NVARCHAR(255)		NULL
		,	[FloorId]		UNIQUEIDENTIFIER	NULL
		,	[FloorName]		NVARCHAR(255)		NULL
		,	[FloorNo]		INT					NULL
		,	[RoomFeatures]	NVARCHAR(MAX)		NULL				
		,	[CreatedOn]		DATETIME			NULL
		,   [IsActive]		BIT					NULL
	)
	--DECLARATIONS OVER

	
	-- PREPARING DATA
	SET @TotalCount = (SELECT COUNT(DISTINCT R.Id) 
						FROM [dbo].[Room] R
							INNER JOIN [Floor] F ON F.Id = R.FloorId
								AND ISNULL(F.IsDeleted,0) = 0
							LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
								AND ISNULL(RT.IsDeleted,0) = 0
						WHERE	ISNULL(R.IsDeleted,0) = 0								
								AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
								AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
								AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  
						)


		INSERT INTO #tempRoom 
		(
			[RowNum]		, 
			[Id]			, 
			[Type]			, 
			[RoomNo]		, 
			[Description]	, 
			[RoomTypeId]	, 
			[RoomTypeCode]	,
			[FloorId]		, 
			[FloorName]		,
			[FloorNo]		,
			[CreatedOn]		, 
			[IsActive]
		)
		SELECT 
			ROW_NUMBER() OVER 
			(	
				ORDER BY  
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'asc'
						THEN R.[CreatedOn] END ASC,
					CASE WHEN @SortColumn = 'CreatedOn' and @SortDirection = 'desc'
						THEN R.[CreatedOn] END DESC,

					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'asc'
						THEN R.[Type] END ASC,
					CASE WHEN @SortColumn = 'Code' and @SortDirection = 'desc'
						THEN R.[Type] END DESC,

					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'asc'
						THEN R.[RoomNo] END ASC,
					CASE WHEN @SortColumn = 'RoomNo' and @SortDirection = 'desc'
						THEN R.[RoomNo] END DESC,

					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'asc'
						THEN F.[Name] END ASC,
					CASE WHEN @SortColumn = 'FloorName' and @SortDirection = 'desc'
						THEN F.[Name] END DESC,

					CASE WHEN ISNULL(@SortColumn,'') = '' AND ISNULL(@SortDirection,'') = ''
						THEN [Name] END ASC

			) AS RowNum,
			R.Id,				
			ISNULL(R.[Type],'') AS [Type],
			ISNULL(R.[RoomNo],'') AS [RoomNo],
			ISNULL(R.[Description],'') AS [Description],
			R.RoomTypeId,
			ISNULL(RT.RoomTypeCode,'') AS [RoomTypeCode],
			R.FloorId,
			ISNULL(F.[Name],'') AS [FloorName],
			F.[FloorNo],
			R.[CreatedOn],
			R.[IsActive]
	FROM [dbo].[Room] R
			INNER JOIN [Floor] F ON F.Id = R.FloorId
				AND ISNULL(F.IsDeleted,0) = 0
			LEFT JOIN [RoomType] RT ON RT.Id = R.RoomTypeId
				AND ISNULL(RT.IsDeleted,0) = 0
		WHERE	ISNULL(R.IsDeleted,0) = 0								
				AND (@RoomTypeId IS NULL OR R.[RoomTypeId] = @RoomTypeId)  
				AND (@FloorId IS NULL OR R.[FloorId] = @FloorId)  
				AND (ISNULL(@RoomNo,'') = '' OR R.[RoomNo] LIKE '%'+ @RoomNo +'%')  

	-- DATA PREPARED, MOVING TO PAGGING

	--UPDATE Room Features by comma seprated.
	UPDATE temp
		SET [RoomFeatures] = (STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM
						INNER JOIN Room R ON R.Id = RFM.RoomId
							AND ISNULL(R.IsDeleted,0) = 0
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
							AND RFM.RoomId = temp.Id						
			FOR XMl PATH('')),1,1,''))
		FROM #tempRoom temp 	


	-- PAGING STARTED
	SELECT 
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[FloorId],
			temp.[FloorName],
			temp.[FloorNo],
			temp.[RoomFeatures],
			temp.[CreatedOn],
			temp.IsActive, 
			@TotalCount AS TotalCount
	FROM	
		#tempRoom AS temp
	WHERE temp.RowNum BETWEEN (((@PageNum - 1) * @PageSize) + 1) AND (@PageNum * @PageSize)	
	-- PAGING COMPLETED
END


/***********************************************************************************************/

/****** Create function split strings ***/

/****** Object:  UserDefinedFunction [dbo].[SplitStrings]    Script Date: 1/24/2018 2:47:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [DBO].[SplitStrings] (
     @INPUT NVARCHAR(MAX),
		@CHARACTER CHAR(1)
)
		RETURNS @OUTPUT TABLE (
		ITEM NVARCHAR(1000)
		)

AS
BEGIN
  DECLARE @STARTINDEX INT, @ENDINDEX INT
  SET @STARTINDEX = 1
  IF SUBSTRING(@INPUT, LEN(@INPUT) - 1, LEN(@INPUT)) <> @CHARACTER
  BEGIN
        SET @INPUT = @INPUT + @CHARACTER
  END

  WHILE CHARINDEX(@CHARACTER, @INPUT) > 0
  BEGIN
        SET @ENDINDEX = CHARINDEX(@CHARACTER, @INPUT)

        INSERT INTO @OUTPUT(ITEM)
        SELECT SUBSTRING(@INPUT, @STARTINDEX, @ENDINDEX - 1)

        SET @INPUT = SUBSTRING(@INPUT, @ENDINDEX + 1, LEN(@INPUT))
  END

	DELETE	@OUTPUT
	WHERE	ISNULL(ITEM,'') = ''

  RETURN

END -- END FUNCTION
GO


/*******************************************************************************************************************
	SP Name : SearchAdvanceRoom
	Comment : Changes in SP SearchAdvanceRoom	
*******************************************************************************************************************/

/****** Object:  StoredProcedure [dbo].[SearchAdvanceRoom]    Script Date: 1/24/2018 2:42:56 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	EXEC [SearchAdvanceRoom]
			@RoomTypeId		=	NULL	,
			@ArrivalDate	=	''		,
			@NoOfNight		=	NULL	,
			@DepartureDate	=	NULL	,
			@RoomNo			=	''		,
			@Type			=	''		,
			@RoomFeatures	=	'1E918B53-B6B5-4EB7-B3F0-BE53CD44E86F'		,
			@IsClean		=	NULL	,
			@IsDirty		=	NULL	,
			@IsInspected	=	NULL	
*/
ALTER PROCEDURE [dbo].[SearchAdvanceRoom]
	@RoomTypeId			UNIQUEIDENTIFIER	=	NULL	,
	@ArrivalDate		DATETIME			=	NULL	,
	@NoOfNight			INT					=	NULL	,
	@DepartureDate		DATETIME			=	NULL	,
	@RoomNo				NVARCHAR(255)		=	NULL	,
	@Type				NVARCHAR(255)		=	NULL	,
	@RoomFeatures		NVARCHAR(MAX)		=	NULL	,
	@IsClean			BIT					=	NULL	,
	@IsDirty			BIT					=	NULL	,
	@IsInspected		BIT					=	NULL
AS
BEGIN
	
	SET NOCOUNT ON;

	CREATE TABLE #tempRoom
	(
			[RowNum]				INT					NOT NULL
		,	[Id]					UNIQUEIDENTIFIER	NOT NULL		
		,   [Type]					NVARCHAR(50)		NULL	
		,   [RoomNo]				NVARCHAR(255)		NOT NULL
		,	[Description]			NVARCHAR(2000)		NULL
		,	[RoomStatusId]			UNIQUEIDENTIFIER	NULL
		,	[RoomStatusName]		NVARCHAR(255)		NULL
		,	[RoomStatusColor]		NVARCHAR(255)		NULL
		,	[RoomTypeId]			UNIQUEIDENTIFIER	NULL
		,	[RoomTypeCode]			NVARCHAR(255)		NULL
		,	[RoomTypeDescription]	NVARCHAR(255)		NULL		
		,	[RoomFeatures]			NVARCHAR(MAX)		NULL
	)

	
	INSERT INTO #tempRoom 
		(
			[RowNum]				, 
			[Id]					, 
			[Type]					, 
			[RoomNo]				, 
			[Description]			, 
			[RoomStatusId]			,
			[RoomStatusName]		,
			[RoomStatusColor]		,
			[RoomTypeId]			, 
			[RoomTypeCode]			,
			[RoomTypeDescription]	, 
			[RoomFeatures]			
		)
	SELECT 
				ROW_NUMBER() OVER 
				(	
					ORDER BY  TRY_PARSE(R.[RoomNo] AS INT) ASC

				) AS RowNum,
				R.Id AS RoomId,
				ISNULL(R.RoomNo,'') AS RoomNo,
				ISNULL(R.[Type],'') AS [Type],
				ISNULL(R.[Description],'') AS [Description],				
				
				RS.Id AS RoomStatusId,
				RS.[Name] AS RoomStatusName,
				RS.[ColorCode] AS RoomStatusColor,

				ROT.Id AS RoomTypeId,
				ISNULL(ROT.RoomTypeCode,'') AS RoomTypeCode,
				ISNULL(ROT.[Description],'') AS RoomTypeDescription,

				ISNULL((STUFF(( SELECT ', '+ CAST(RF.[Name] AS varchar(MAX))					
				FROM RoomFeaturesMapping RFM						
						INNER JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
							AND ISNULL(RF.IsDeleted,0) = 0
				WHERE	ISNULL(RFM.IsDeleted,0) = 0
							AND RFM.RoomId = R.Id						
			FOR XMl PATH('')),1,1,'')),'') AS RoomFeatures

		
			FROM Room R
					INNER JOIN  RoomType ROT ON R.RoomTypeId = ROT.Id 
						AND ISNULL(ROT.IsDeleted,0) = 0  AND ISNULL(ROT.IsActive,0) = 1 
					LEFT JOIN (SELECT DISTINCT RL.RoomId, RL.RoomStatusId
									FROM ReservationLog RL 
									WHERE ISNULL(RL.IsDeleted,0) = 0 
										AND ISNULL(RL.IsActive,0) = 1 
										AND ((ISNULL(@ArrivalDate,'') = '' OR CAST(@ArrivalDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date))
												OR (ISNULL(@DepartureDate,'') = '' OR CAST(@DepartureDate AS DATE) BETWEEN CAST(RL.CheckInDate  AS date) AND CAST(RL.CheckOutDate  AS date)))
										) AS RL
						ON RL.RoomId = R.Id
					LEFT JOIN RoomStatus RS ON RS.Id = (CASE WHEN RL.RoomStatusId IS NOT NULL THEN RL.RoomStatusId ELSE R.StatusId END)					
						AND ISNULL(RS.IsDeleted,0) = 0  AND ISNULL(RS.IsActive,0) = 1 
					LEFT JOIN RoomFeaturesMapping RFM ON RFM.RoomId = R.Id
						AND ISNULL(RFM.IsDeleted,0) = 0  AND ISNULL(RFM.IsActive,0) = 1 
					LEFT JOIN RoomFeatures RF ON RF.Id = RFM.RoomFeatureId
						AND ISNULL(RF.IsDeleted,0) = 0  AND ISNULL(RF.IsActive,0) = 1 
			WHERE	ISNULL(R.IsDeleted,0) = 0 AND ISNULL(R.IsActive,0) = 1										
					AND RS.[Name] = (CASE WHEN ISNULL(@IsClean,0) = 1 THEN  'Clean' ELSE RS.[Name] END)
					AND RS.[Name] = (CASE WHEN ISNULL(@IsDirty,0) = 1 THEN  'Dirty' ELSE RS.[Name] END)										
					--AND RS.[Name] = 'Clean'										  
					AND (@RoomTypeId IS NULL OR R.RoomTypeId= @RoomTypeId)
					AND (ISNULL(@RoomNo,'') = '' OR R.RoomNo LIKE '%' + @RoomNo + '%')
					AND (ISNULL(@Type,'') = '' OR R.RoomNo LIKE '%' + @Type + '%')
					
		
	--Room Features.		
	SELECT 
			DISTINCT
			temp.RowNum,
			temp.[Id],			
			temp.[Type],			
			temp.[RoomNo],		
			temp.[Description],	
			temp.[RoomStatusId],
			temp.[RoomStatusName],
			temp.[RoomStatusColor],
			temp.[RoomTypeId],
			temp.[RoomTypeCode],
			temp.[RoomFeatures]
	FROM	
		#tempRoom AS temp
		LEFT JOIN RoomFeaturesMapping ON RoomFeaturesMapping.RoomId = temp.Id
			AND ISNULL(RoomFeaturesMapping.IsDeleted,0) = 0
		WHERE ISNULL(@RoomFeatures,'') = '' OR 
			RoomFeaturesMapping.RoomFeatureId IN (SELECT * FROM [dbo].[SplitStrings] (@RoomFeatures,',')) 


END


/*******************************************************************************************************************
	SP Name : GetTitlebyId
	Comment : Create SP GetTitlebyId	
*******************************************************************************************************************/


/****** Object:  StoredProcedure [dbo].[GetTitlebyId]    Script Date: 1/24/2018 5:54:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetTitlebyId]
	@Id UNIQUEIDENTIFIER = NULL	
AS
BEGIN	
	SET NOCOUNT ON;

    SELECT * FROM [dbo].[Title]
		WHERE	ISNULL(IsDeleted,0) = 0 
				AND Id = @Id
		
END
